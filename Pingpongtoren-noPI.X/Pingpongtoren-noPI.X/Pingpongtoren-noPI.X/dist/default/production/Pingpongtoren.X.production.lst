

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue Feb 14 09:40:49 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 1.40
    74                           ; Generated 01/12/2016 GMT
    75                           ; 
    76                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F18345 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0097                     	;# 
   150  009B                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  0111                     	;# 
   160  0112                     	;# 
   161  0113                     	;# 
   162  0114                     	;# 
   163  0115                     	;# 
   164  0116                     	;# 
   165  0117                     	;# 
   166  0118                     	;# 
   167  0119                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  018E                     	;# 
   171  0197                     	;# 
   172  0199                     	;# 
   173  0199                     	;# 
   174  0199                     	;# 
   175  019A                     	;# 
   176  019A                     	;# 
   177  019A                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019B                     	;# 
   182  019B                     	;# 
   183  019C                     	;# 
   184  019C                     	;# 
   185  019C                     	;# 
   186  019D                     	;# 
   187  019D                     	;# 
   188  019D                     	;# 
   189  019E                     	;# 
   190  019E                     	;# 
   191  019E                     	;# 
   192  019F                     	;# 
   193  019F                     	;# 
   194  019F                     	;# 
   195  019F                     	;# 
   196  019F                     	;# 
   197  020C                     	;# 
   198  020D                     	;# 
   199  020E                     	;# 
   200  0211                     	;# 
   201  0211                     	;# 
   202  0212                     	;# 
   203  0212                     	;# 
   204  0213                     	;# 
   205  0213                     	;# 
   206  0214                     	;# 
   207  0214                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0215                     	;# 
   211  0215                     	;# 
   212  0216                     	;# 
   213  0216                     	;# 
   214  0217                     	;# 
   215  0217                     	;# 
   216  0219                     	;# 
   217  021A                     	;# 
   218  021B                     	;# 
   219  021C                     	;# 
   220  021D                     	;# 
   221  021D                     	;# 
   222  021E                     	;# 
   223  021F                     	;# 
   224  028C                     	;# 
   225  028D                     	;# 
   226  028E                     	;# 
   227  0291                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0295                     	;# 
   233  0295                     	;# 
   234  0296                     	;# 
   235  0297                     	;# 
   236  0298                     	;# 
   237  029F                     	;# 
   238  030C                     	;# 
   239  030D                     	;# 
   240  030E                     	;# 
   241  0311                     	;# 
   242  0311                     	;# 
   243  0312                     	;# 
   244  0313                     	;# 
   245  0314                     	;# 
   246  0315                     	;# 
   247  0315                     	;# 
   248  0316                     	;# 
   249  0317                     	;# 
   250  0318                     	;# 
   251  038C                     	;# 
   252  038D                     	;# 
   253  038E                     	;# 
   254  0391                     	;# 
   255  0392                     	;# 
   256  0393                     	;# 
   257  0394                     	;# 
   258  0395                     	;# 
   259  0396                     	;# 
   260  0397                     	;# 
   261  0398                     	;# 
   262  0399                     	;# 
   263  039A                     	;# 
   264  039C                     	;# 
   265  039D                     	;# 
   266  039E                     	;# 
   267  039F                     	;# 
   268  0411                     	;# 
   269  0411                     	;# 
   270  0412                     	;# 
   271  0413                     	;# 
   272  0414                     	;# 
   273  0415                     	;# 
   274  0416                     	;# 
   275  0417                     	;# 
   276  0418                     	;# 
   277  0418                     	;# 
   278  0419                     	;# 
   279  041A                     	;# 
   280  041B                     	;# 
   281  041C                     	;# 
   282  041D                     	;# 
   283  041E                     	;# 
   284  041F                     	;# 
   285  0498                     	;# 
   286  0498                     	;# 
   287  0499                     	;# 
   288  049A                     	;# 
   289  049B                     	;# 
   290  049B                     	;# 
   291  049C                     	;# 
   292  049D                     	;# 
   293  049E                     	;# 
   294  049F                     	;# 
   295  0617                     	;# 
   296  0618                     	;# 
   297  0619                     	;# 
   298  0619                     	;# 
   299  061A                     	;# 
   300  061B                     	;# 
   301  061C                     	;# 
   302  061C                     	;# 
   303  061F                     	;# 
   304  0691                     	;# 
   305  0692                     	;# 
   306  0693                     	;# 
   307  0694                     	;# 
   308  0695                     	;# 
   309  0696                     	;# 
   310  0697                     	;# 
   311  0698                     	;# 
   312  0699                     	;# 
   313  0711                     	;# 
   314  0712                     	;# 
   315  0713                     	;# 
   316  0714                     	;# 
   317  0715                     	;# 
   318  0716                     	;# 
   319  0717                     	;# 
   320  0718                     	;# 
   321  0719                     	;# 
   322  0891                     	;# 
   323  0891                     	;# 
   324  0891                     	;# 
   325  0891                     	;# 
   326  0891                     	;# 
   327  0891                     	;# 
   328  0892                     	;# 
   329  0892                     	;# 
   330  0892                     	;# 
   331  0893                     	;# 
   332  0893                     	;# 
   333  0893                     	;# 
   334  0893                     	;# 
   335  0893                     	;# 
   336  0893                     	;# 
   337  0894                     	;# 
   338  0894                     	;# 
   339  0894                     	;# 
   340  0895                     	;# 
   341  0895                     	;# 
   342  0895                     	;# 
   343  0896                     	;# 
   344  0896                     	;# 
   345  0896                     	;# 
   346  089B                     	;# 
   347  0911                     	;# 
   348  0912                     	;# 
   349  0913                     	;# 
   350  0914                     	;# 
   351  0915                     	;# 
   352  0916                     	;# 
   353  0918                     	;# 
   354  0919                     	;# 
   355  091A                     	;# 
   356  091B                     	;# 
   357  091C                     	;# 
   358  091D                     	;# 
   359  091E                     	;# 
   360  091F                     	;# 
   361  0E0F                     	;# 
   362  0E10                     	;# 
   363  0E11                     	;# 
   364  0E12                     	;# 
   365  0E13                     	;# 
   366  0E14                     	;# 
   367  0E15                     	;# 
   368  0E16                     	;# 
   369  0E17                     	;# 
   370  0E18                     	;# 
   371  0E19                     	;# 
   372  0E1A                     	;# 
   373  0E1B                     	;# 
   374  0E1C                     	;# 
   375  0E1D                     	;# 
   376  0E1E                     	;# 
   377  0E1F                     	;# 
   378  0E20                     	;# 
   379  0E21                     	;# 
   380  0E22                     	;# 
   381  0E24                     	;# 
   382  0E25                     	;# 
   383  0E28                     	;# 
   384  0E29                     	;# 
   385  0E2A                     	;# 
   386  0E2B                     	;# 
   387  0E2C                     	;# 
   388  0E2D                     	;# 
   389  0E2E                     	;# 
   390  0E2F                     	;# 
   391  0E90                     	;# 
   392  0E91                     	;# 
   393  0E92                     	;# 
   394  0E94                     	;# 
   395  0E95                     	;# 
   396  0E9C                     	;# 
   397  0E9D                     	;# 
   398  0E9E                     	;# 
   399  0E9F                     	;# 
   400  0EA0                     	;# 
   401  0EA1                     	;# 
   402  0EA2                     	;# 
   403  0EA3                     	;# 
   404  0EA4                     	;# 
   405  0EA5                     	;# 
   406  0EA6                     	;# 
   407  0EA7                     	;# 
   408  0F0F                     	;# 
   409  0F10                     	;# 
   410  0F11                     	;# 
   411  0F12                     	;# 
   412  0F13                     	;# 
   413  0F14                     	;# 
   414  0F15                     	;# 
   415  0F16                     	;# 
   416  0F17                     	;# 
   417  0F18                     	;# 
   418  0F19                     	;# 
   419  0F1A                     	;# 
   420  0F1B                     	;# 
   421  0F1C                     	;# 
   422  0F1D                     	;# 
   423  0F1E                     	;# 
   424  0F1F                     	;# 
   425  0F20                     	;# 
   426  0F21                     	;# 
   427  0F22                     	;# 
   428  0F23                     	;# 
   429  0F24                     	;# 
   430  0F25                     	;# 
   431  0F26                     	;# 
   432  0F27                     	;# 
   433  0F28                     	;# 
   434  0F29                     	;# 
   435  0F2A                     	;# 
   436  0F2B                     	;# 
   437  0F2C                     	;# 
   438  0F2D                     	;# 
   439  0F2E                     	;# 
   440  0F2F                     	;# 
   441  0F30                     	;# 
   442  0F31                     	;# 
   443  0F32                     	;# 
   444  0F33                     	;# 
   445  0F34                     	;# 
   446  0F35                     	;# 
   447  0F36                     	;# 
   448  0F37                     	;# 
   449  0FE4                     	;# 
   450  0FE5                     	;# 
   451  0FE6                     	;# 
   452  0FE7                     	;# 
   453  0FE8                     	;# 
   454  0FE9                     	;# 
   455  0FEA                     	;# 
   456  0FEB                     	;# 
   457  0FED                     	;# 
   458  0FEE                     	;# 
   459  0FEF                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  0010                     	;# 
   476  0011                     	;# 
   477  0012                     	;# 
   478  0013                     	;# 
   479  0014                     	;# 
   480  0015                     	;# 
   481  0015                     	;# 
   482  0016                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  0090                     	;# 
   498  0091                     	;# 
   499  0092                     	;# 
   500  0093                     	;# 
   501  0094                     	;# 
   502  0097                     	;# 
   503  009B                     	;# 
   504  009B                     	;# 
   505  009C                     	;# 
   506  009D                     	;# 
   507  009E                     	;# 
   508  009F                     	;# 
   509  010C                     	;# 
   510  010D                     	;# 
   511  010E                     	;# 
   512  0111                     	;# 
   513  0112                     	;# 
   514  0113                     	;# 
   515  0114                     	;# 
   516  0115                     	;# 
   517  0116                     	;# 
   518  0117                     	;# 
   519  0118                     	;# 
   520  0119                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  018E                     	;# 
   524  0197                     	;# 
   525  0199                     	;# 
   526  0199                     	;# 
   527  0199                     	;# 
   528  019A                     	;# 
   529  019A                     	;# 
   530  019A                     	;# 
   531  019B                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019C                     	;# 
   537  019C                     	;# 
   538  019C                     	;# 
   539  019D                     	;# 
   540  019D                     	;# 
   541  019D                     	;# 
   542  019E                     	;# 
   543  019E                     	;# 
   544  019E                     	;# 
   545  019F                     	;# 
   546  019F                     	;# 
   547  019F                     	;# 
   548  019F                     	;# 
   549  019F                     	;# 
   550  020C                     	;# 
   551  020D                     	;# 
   552  020E                     	;# 
   553  0211                     	;# 
   554  0211                     	;# 
   555  0212                     	;# 
   556  0212                     	;# 
   557  0213                     	;# 
   558  0213                     	;# 
   559  0214                     	;# 
   560  0214                     	;# 
   561  0215                     	;# 
   562  0215                     	;# 
   563  0215                     	;# 
   564  0215                     	;# 
   565  0216                     	;# 
   566  0216                     	;# 
   567  0217                     	;# 
   568  0217                     	;# 
   569  0219                     	;# 
   570  021A                     	;# 
   571  021B                     	;# 
   572  021C                     	;# 
   573  021D                     	;# 
   574  021D                     	;# 
   575  021E                     	;# 
   576  021F                     	;# 
   577  028C                     	;# 
   578  028D                     	;# 
   579  028E                     	;# 
   580  0291                     	;# 
   581  0291                     	;# 
   582  0292                     	;# 
   583  0293                     	;# 
   584  0294                     	;# 
   585  0295                     	;# 
   586  0295                     	;# 
   587  0296                     	;# 
   588  0297                     	;# 
   589  0298                     	;# 
   590  029F                     	;# 
   591  030C                     	;# 
   592  030D                     	;# 
   593  030E                     	;# 
   594  0311                     	;# 
   595  0311                     	;# 
   596  0312                     	;# 
   597  0313                     	;# 
   598  0314                     	;# 
   599  0315                     	;# 
   600  0315                     	;# 
   601  0316                     	;# 
   602  0317                     	;# 
   603  0318                     	;# 
   604  038C                     	;# 
   605  038D                     	;# 
   606  038E                     	;# 
   607  0391                     	;# 
   608  0392                     	;# 
   609  0393                     	;# 
   610  0394                     	;# 
   611  0395                     	;# 
   612  0396                     	;# 
   613  0397                     	;# 
   614  0398                     	;# 
   615  0399                     	;# 
   616  039A                     	;# 
   617  039C                     	;# 
   618  039D                     	;# 
   619  039E                     	;# 
   620  039F                     	;# 
   621  0411                     	;# 
   622  0411                     	;# 
   623  0412                     	;# 
   624  0413                     	;# 
   625  0414                     	;# 
   626  0415                     	;# 
   627  0416                     	;# 
   628  0417                     	;# 
   629  0418                     	;# 
   630  0418                     	;# 
   631  0419                     	;# 
   632  041A                     	;# 
   633  041B                     	;# 
   634  041C                     	;# 
   635  041D                     	;# 
   636  041E                     	;# 
   637  041F                     	;# 
   638  0498                     	;# 
   639  0498                     	;# 
   640  0499                     	;# 
   641  049A                     	;# 
   642  049B                     	;# 
   643  049B                     	;# 
   644  049C                     	;# 
   645  049D                     	;# 
   646  049E                     	;# 
   647  049F                     	;# 
   648  0617                     	;# 
   649  0618                     	;# 
   650  0619                     	;# 
   651  0619                     	;# 
   652  061A                     	;# 
   653  061B                     	;# 
   654  061C                     	;# 
   655  061C                     	;# 
   656  061F                     	;# 
   657  0691                     	;# 
   658  0692                     	;# 
   659  0693                     	;# 
   660  0694                     	;# 
   661  0695                     	;# 
   662  0696                     	;# 
   663  0697                     	;# 
   664  0698                     	;# 
   665  0699                     	;# 
   666  0711                     	;# 
   667  0712                     	;# 
   668  0713                     	;# 
   669  0714                     	;# 
   670  0715                     	;# 
   671  0716                     	;# 
   672  0717                     	;# 
   673  0718                     	;# 
   674  0719                     	;# 
   675  0891                     	;# 
   676  0891                     	;# 
   677  0891                     	;# 
   678  0891                     	;# 
   679  0891                     	;# 
   680  0891                     	;# 
   681  0892                     	;# 
   682  0892                     	;# 
   683  0892                     	;# 
   684  0893                     	;# 
   685  0893                     	;# 
   686  0893                     	;# 
   687  0893                     	;# 
   688  0893                     	;# 
   689  0893                     	;# 
   690  0894                     	;# 
   691  0894                     	;# 
   692  0894                     	;# 
   693  0895                     	;# 
   694  0895                     	;# 
   695  0895                     	;# 
   696  0896                     	;# 
   697  0896                     	;# 
   698  0896                     	;# 
   699  089B                     	;# 
   700  0911                     	;# 
   701  0912                     	;# 
   702  0913                     	;# 
   703  0914                     	;# 
   704  0915                     	;# 
   705  0916                     	;# 
   706  0918                     	;# 
   707  0919                     	;# 
   708  091A                     	;# 
   709  091B                     	;# 
   710  091C                     	;# 
   711  091D                     	;# 
   712  091E                     	;# 
   713  091F                     	;# 
   714  0E0F                     	;# 
   715  0E10                     	;# 
   716  0E11                     	;# 
   717  0E12                     	;# 
   718  0E13                     	;# 
   719  0E14                     	;# 
   720  0E15                     	;# 
   721  0E16                     	;# 
   722  0E17                     	;# 
   723  0E18                     	;# 
   724  0E19                     	;# 
   725  0E1A                     	;# 
   726  0E1B                     	;# 
   727  0E1C                     	;# 
   728  0E1D                     	;# 
   729  0E1E                     	;# 
   730  0E1F                     	;# 
   731  0E20                     	;# 
   732  0E21                     	;# 
   733  0E22                     	;# 
   734  0E24                     	;# 
   735  0E25                     	;# 
   736  0E28                     	;# 
   737  0E29                     	;# 
   738  0E2A                     	;# 
   739  0E2B                     	;# 
   740  0E2C                     	;# 
   741  0E2D                     	;# 
   742  0E2E                     	;# 
   743  0E2F                     	;# 
   744  0E90                     	;# 
   745  0E91                     	;# 
   746  0E92                     	;# 
   747  0E94                     	;# 
   748  0E95                     	;# 
   749  0E9C                     	;# 
   750  0E9D                     	;# 
   751  0E9E                     	;# 
   752  0E9F                     	;# 
   753  0EA0                     	;# 
   754  0EA1                     	;# 
   755  0EA2                     	;# 
   756  0EA3                     	;# 
   757  0EA4                     	;# 
   758  0EA5                     	;# 
   759  0EA6                     	;# 
   760  0EA7                     	;# 
   761  0F0F                     	;# 
   762  0F10                     	;# 
   763  0F11                     	;# 
   764  0F12                     	;# 
   765  0F13                     	;# 
   766  0F14                     	;# 
   767  0F15                     	;# 
   768  0F16                     	;# 
   769  0F17                     	;# 
   770  0F18                     	;# 
   771  0F19                     	;# 
   772  0F1A                     	;# 
   773  0F1B                     	;# 
   774  0F1C                     	;# 
   775  0F1D                     	;# 
   776  0F1E                     	;# 
   777  0F1F                     	;# 
   778  0F20                     	;# 
   779  0F21                     	;# 
   780  0F22                     	;# 
   781  0F23                     	;# 
   782  0F24                     	;# 
   783  0F25                     	;# 
   784  0F26                     	;# 
   785  0F27                     	;# 
   786  0F28                     	;# 
   787  0F29                     	;# 
   788  0F2A                     	;# 
   789  0F2B                     	;# 
   790  0F2C                     	;# 
   791  0F2D                     	;# 
   792  0F2E                     	;# 
   793  0F2F                     	;# 
   794  0F30                     	;# 
   795  0F31                     	;# 
   796  0F32                     	;# 
   797  0F33                     	;# 
   798  0F34                     	;# 
   799  0F35                     	;# 
   800  0F36                     	;# 
   801  0F37                     	;# 
   802  0FE4                     	;# 
   803  0FE5                     	;# 
   804  0FE6                     	;# 
   805  0FE7                     	;# 
   806  0FE8                     	;# 
   807  0FE9                     	;# 
   808  0FEA                     	;# 
   809  0FEB                     	;# 
   810  0FED                     	;# 
   811  0FEE                     	;# 
   812  0FEF                     	;# 
   813  0000                     	;# 
   814  0001                     	;# 
   815  0002                     	;# 
   816  0003                     	;# 
   817  0004                     	;# 
   818  0005                     	;# 
   819  0006                     	;# 
   820  0007                     	;# 
   821  0008                     	;# 
   822  0009                     	;# 
   823  000A                     	;# 
   824  000B                     	;# 
   825  000C                     	;# 
   826  000D                     	;# 
   827  000E                     	;# 
   828  0010                     	;# 
   829  0011                     	;# 
   830  0012                     	;# 
   831  0013                     	;# 
   832  0014                     	;# 
   833  0015                     	;# 
   834  0015                     	;# 
   835  0016                     	;# 
   836  0016                     	;# 
   837  0017                     	;# 
   838  0018                     	;# 
   839  0019                     	;# 
   840  0019                     	;# 
   841  001A                     	;# 
   842  001B                     	;# 
   843  001C                     	;# 
   844  001D                     	;# 
   845  001E                     	;# 
   846  001F                     	;# 
   847  008C                     	;# 
   848  008D                     	;# 
   849  008E                     	;# 
   850  0090                     	;# 
   851  0091                     	;# 
   852  0092                     	;# 
   853  0093                     	;# 
   854  0094                     	;# 
   855  0097                     	;# 
   856  009B                     	;# 
   857  009B                     	;# 
   858  009C                     	;# 
   859  009D                     	;# 
   860  009E                     	;# 
   861  009F                     	;# 
   862  010C                     	;# 
   863  010D                     	;# 
   864  010E                     	;# 
   865  0111                     	;# 
   866  0112                     	;# 
   867  0113                     	;# 
   868  0114                     	;# 
   869  0115                     	;# 
   870  0116                     	;# 
   871  0117                     	;# 
   872  0118                     	;# 
   873  0119                     	;# 
   874  018C                     	;# 
   875  018D                     	;# 
   876  018E                     	;# 
   877  0197                     	;# 
   878  0199                     	;# 
   879  0199                     	;# 
   880  0199                     	;# 
   881  019A                     	;# 
   882  019A                     	;# 
   883  019A                     	;# 
   884  019B                     	;# 
   885  019B                     	;# 
   886  019B                     	;# 
   887  019B                     	;# 
   888  019B                     	;# 
   889  019C                     	;# 
   890  019C                     	;# 
   891  019C                     	;# 
   892  019D                     	;# 
   893  019D                     	;# 
   894  019D                     	;# 
   895  019E                     	;# 
   896  019E                     	;# 
   897  019E                     	;# 
   898  019F                     	;# 
   899  019F                     	;# 
   900  019F                     	;# 
   901  019F                     	;# 
   902  019F                     	;# 
   903  020C                     	;# 
   904  020D                     	;# 
   905  020E                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0216                     	;# 
   919  0216                     	;# 
   920  0217                     	;# 
   921  0217                     	;# 
   922  0219                     	;# 
   923  021A                     	;# 
   924  021B                     	;# 
   925  021C                     	;# 
   926  021D                     	;# 
   927  021D                     	;# 
   928  021E                     	;# 
   929  021F                     	;# 
   930  028C                     	;# 
   931  028D                     	;# 
   932  028E                     	;# 
   933  0291                     	;# 
   934  0291                     	;# 
   935  0292                     	;# 
   936  0293                     	;# 
   937  0294                     	;# 
   938  0295                     	;# 
   939  0295                     	;# 
   940  0296                     	;# 
   941  0297                     	;# 
   942  0298                     	;# 
   943  029F                     	;# 
   944  030C                     	;# 
   945  030D                     	;# 
   946  030E                     	;# 
   947  0311                     	;# 
   948  0311                     	;# 
   949  0312                     	;# 
   950  0313                     	;# 
   951  0314                     	;# 
   952  0315                     	;# 
   953  0315                     	;# 
   954  0316                     	;# 
   955  0317                     	;# 
   956  0318                     	;# 
   957  038C                     	;# 
   958  038D                     	;# 
   959  038E                     	;# 
   960  0391                     	;# 
   961  0392                     	;# 
   962  0393                     	;# 
   963  0394                     	;# 
   964  0395                     	;# 
   965  0396                     	;# 
   966  0397                     	;# 
   967  0398                     	;# 
   968  0399                     	;# 
   969  039A                     	;# 
   970  039C                     	;# 
   971  039D                     	;# 
   972  039E                     	;# 
   973  039F                     	;# 
   974  0411                     	;# 
   975  0411                     	;# 
   976  0412                     	;# 
   977  0413                     	;# 
   978  0414                     	;# 
   979  0415                     	;# 
   980  0416                     	;# 
   981  0417                     	;# 
   982  0418                     	;# 
   983  0418                     	;# 
   984  0419                     	;# 
   985  041A                     	;# 
   986  041B                     	;# 
   987  041C                     	;# 
   988  041D                     	;# 
   989  041E                     	;# 
   990  041F                     	;# 
   991  0498                     	;# 
   992  0498                     	;# 
   993  0499                     	;# 
   994  049A                     	;# 
   995  049B                     	;# 
   996  049B                     	;# 
   997  049C                     	;# 
   998  049D                     	;# 
   999  049E                     	;# 
  1000  049F                     	;# 
  1001  0617                     	;# 
  1002  0618                     	;# 
  1003  0619                     	;# 
  1004  0619                     	;# 
  1005  061A                     	;# 
  1006  061B                     	;# 
  1007  061C                     	;# 
  1008  061C                     	;# 
  1009  061F                     	;# 
  1010  0691                     	;# 
  1011  0692                     	;# 
  1012  0693                     	;# 
  1013  0694                     	;# 
  1014  0695                     	;# 
  1015  0696                     	;# 
  1016  0697                     	;# 
  1017  0698                     	;# 
  1018  0699                     	;# 
  1019  0711                     	;# 
  1020  0712                     	;# 
  1021  0713                     	;# 
  1022  0714                     	;# 
  1023  0715                     	;# 
  1024  0716                     	;# 
  1025  0717                     	;# 
  1026  0718                     	;# 
  1027  0719                     	;# 
  1028  0891                     	;# 
  1029  0891                     	;# 
  1030  0891                     	;# 
  1031  0891                     	;# 
  1032  0891                     	;# 
  1033  0891                     	;# 
  1034  0892                     	;# 
  1035  0892                     	;# 
  1036  0892                     	;# 
  1037  0893                     	;# 
  1038  0893                     	;# 
  1039  0893                     	;# 
  1040  0893                     	;# 
  1041  0893                     	;# 
  1042  0893                     	;# 
  1043  0894                     	;# 
  1044  0894                     	;# 
  1045  0894                     	;# 
  1046  0895                     	;# 
  1047  0895                     	;# 
  1048  0895                     	;# 
  1049  0896                     	;# 
  1050  0896                     	;# 
  1051  0896                     	;# 
  1052  089B                     	;# 
  1053  0911                     	;# 
  1054  0912                     	;# 
  1055  0913                     	;# 
  1056  0914                     	;# 
  1057  0915                     	;# 
  1058  0916                     	;# 
  1059  0918                     	;# 
  1060  0919                     	;# 
  1061  091A                     	;# 
  1062  091B                     	;# 
  1063  091C                     	;# 
  1064  091D                     	;# 
  1065  091E                     	;# 
  1066  091F                     	;# 
  1067  0E0F                     	;# 
  1068  0E10                     	;# 
  1069  0E11                     	;# 
  1070  0E12                     	;# 
  1071  0E13                     	;# 
  1072  0E14                     	;# 
  1073  0E15                     	;# 
  1074  0E16                     	;# 
  1075  0E17                     	;# 
  1076  0E18                     	;# 
  1077  0E19                     	;# 
  1078  0E1A                     	;# 
  1079  0E1B                     	;# 
  1080  0E1C                     	;# 
  1081  0E1D                     	;# 
  1082  0E1E                     	;# 
  1083  0E1F                     	;# 
  1084  0E20                     	;# 
  1085  0E21                     	;# 
  1086  0E22                     	;# 
  1087  0E24                     	;# 
  1088  0E25                     	;# 
  1089  0E28                     	;# 
  1090  0E29                     	;# 
  1091  0E2A                     	;# 
  1092  0E2B                     	;# 
  1093  0E2C                     	;# 
  1094  0E2D                     	;# 
  1095  0E2E                     	;# 
  1096  0E2F                     	;# 
  1097  0E90                     	;# 
  1098  0E91                     	;# 
  1099  0E92                     	;# 
  1100  0E94                     	;# 
  1101  0E95                     	;# 
  1102  0E9C                     	;# 
  1103  0E9D                     	;# 
  1104  0E9E                     	;# 
  1105  0E9F                     	;# 
  1106  0EA0                     	;# 
  1107  0EA1                     	;# 
  1108  0EA2                     	;# 
  1109  0EA3                     	;# 
  1110  0EA4                     	;# 
  1111  0EA5                     	;# 
  1112  0EA6                     	;# 
  1113  0EA7                     	;# 
  1114  0F0F                     	;# 
  1115  0F10                     	;# 
  1116  0F11                     	;# 
  1117  0F12                     	;# 
  1118  0F13                     	;# 
  1119  0F14                     	;# 
  1120  0F15                     	;# 
  1121  0F16                     	;# 
  1122  0F17                     	;# 
  1123  0F18                     	;# 
  1124  0F19                     	;# 
  1125  0F1A                     	;# 
  1126  0F1B                     	;# 
  1127  0F1C                     	;# 
  1128  0F1D                     	;# 
  1129  0F1E                     	;# 
  1130  0F1F                     	;# 
  1131  0F20                     	;# 
  1132  0F21                     	;# 
  1133  0F22                     	;# 
  1134  0F23                     	;# 
  1135  0F24                     	;# 
  1136  0F25                     	;# 
  1137  0F26                     	;# 
  1138  0F27                     	;# 
  1139  0F28                     	;# 
  1140  0F29                     	;# 
  1141  0F2A                     	;# 
  1142  0F2B                     	;# 
  1143  0F2C                     	;# 
  1144  0F2D                     	;# 
  1145  0F2E                     	;# 
  1146  0F2F                     	;# 
  1147  0F30                     	;# 
  1148  0F31                     	;# 
  1149  0F32                     	;# 
  1150  0F33                     	;# 
  1151  0F34                     	;# 
  1152  0F35                     	;# 
  1153  0F36                     	;# 
  1154  0F37                     	;# 
  1155  0FE4                     	;# 
  1156  0FE5                     	;# 
  1157  0FE6                     	;# 
  1158  0FE7                     	;# 
  1159  0FE8                     	;# 
  1160  0FE9                     	;# 
  1161  0FEA                     	;# 
  1162  0FEB                     	;# 
  1163  0FED                     	;# 
  1164  0FEE                     	;# 
  1165  0FEF                     	;# 
  1166  0000                     	;# 
  1167  0001                     	;# 
  1168  0002                     	;# 
  1169  0003                     	;# 
  1170  0004                     	;# 
  1171  0005                     	;# 
  1172  0006                     	;# 
  1173  0007                     	;# 
  1174  0008                     	;# 
  1175  0009                     	;# 
  1176  000A                     	;# 
  1177  000B                     	;# 
  1178  000C                     	;# 
  1179  000D                     	;# 
  1180  000E                     	;# 
  1181  0010                     	;# 
  1182  0011                     	;# 
  1183  0012                     	;# 
  1184  0013                     	;# 
  1185  0014                     	;# 
  1186  0015                     	;# 
  1187  0015                     	;# 
  1188  0016                     	;# 
  1189  0016                     	;# 
  1190  0017                     	;# 
  1191  0018                     	;# 
  1192  0019                     	;# 
  1193  0019                     	;# 
  1194  001A                     	;# 
  1195  001B                     	;# 
  1196  001C                     	;# 
  1197  001D                     	;# 
  1198  001E                     	;# 
  1199  001F                     	;# 
  1200  008C                     	;# 
  1201  008D                     	;# 
  1202  008E                     	;# 
  1203  0090                     	;# 
  1204  0091                     	;# 
  1205  0092                     	;# 
  1206  0093                     	;# 
  1207  0094                     	;# 
  1208  0097                     	;# 
  1209  009B                     	;# 
  1210  009B                     	;# 
  1211  009C                     	;# 
  1212  009D                     	;# 
  1213  009E                     	;# 
  1214  009F                     	;# 
  1215  010C                     	;# 
  1216  010D                     	;# 
  1217  010E                     	;# 
  1218  0111                     	;# 
  1219  0112                     	;# 
  1220  0113                     	;# 
  1221  0114                     	;# 
  1222  0115                     	;# 
  1223  0116                     	;# 
  1224  0117                     	;# 
  1225  0118                     	;# 
  1226  0119                     	;# 
  1227  018C                     	;# 
  1228  018D                     	;# 
  1229  018E                     	;# 
  1230  0197                     	;# 
  1231  0199                     	;# 
  1232  0199                     	;# 
  1233  0199                     	;# 
  1234  019A                     	;# 
  1235  019A                     	;# 
  1236  019A                     	;# 
  1237  019B                     	;# 
  1238  019B                     	;# 
  1239  019B                     	;# 
  1240  019B                     	;# 
  1241  019B                     	;# 
  1242  019C                     	;# 
  1243  019C                     	;# 
  1244  019C                     	;# 
  1245  019D                     	;# 
  1246  019D                     	;# 
  1247  019D                     	;# 
  1248  019E                     	;# 
  1249  019E                     	;# 
  1250  019E                     	;# 
  1251  019F                     	;# 
  1252  019F                     	;# 
  1253  019F                     	;# 
  1254  019F                     	;# 
  1255  019F                     	;# 
  1256  020C                     	;# 
  1257  020D                     	;# 
  1258  020E                     	;# 
  1259  0211                     	;# 
  1260  0211                     	;# 
  1261  0212                     	;# 
  1262  0212                     	;# 
  1263  0213                     	;# 
  1264  0213                     	;# 
  1265  0214                     	;# 
  1266  0214                     	;# 
  1267  0215                     	;# 
  1268  0215                     	;# 
  1269  0215                     	;# 
  1270  0215                     	;# 
  1271  0216                     	;# 
  1272  0216                     	;# 
  1273  0217                     	;# 
  1274  0217                     	;# 
  1275  0219                     	;# 
  1276  021A                     	;# 
  1277  021B                     	;# 
  1278  021C                     	;# 
  1279  021D                     	;# 
  1280  021D                     	;# 
  1281  021E                     	;# 
  1282  021F                     	;# 
  1283  028C                     	;# 
  1284  028D                     	;# 
  1285  028E                     	;# 
  1286  0291                     	;# 
  1287  0291                     	;# 
  1288  0292                     	;# 
  1289  0293                     	;# 
  1290  0294                     	;# 
  1291  0295                     	;# 
  1292  0295                     	;# 
  1293  0296                     	;# 
  1294  0297                     	;# 
  1295  0298                     	;# 
  1296  029F                     	;# 
  1297  030C                     	;# 
  1298  030D                     	;# 
  1299  030E                     	;# 
  1300  0311                     	;# 
  1301  0311                     	;# 
  1302  0312                     	;# 
  1303  0313                     	;# 
  1304  0314                     	;# 
  1305  0315                     	;# 
  1306  0315                     	;# 
  1307  0316                     	;# 
  1308  0317                     	;# 
  1309  0318                     	;# 
  1310  038C                     	;# 
  1311  038D                     	;# 
  1312  038E                     	;# 
  1313  0391                     	;# 
  1314  0392                     	;# 
  1315  0393                     	;# 
  1316  0394                     	;# 
  1317  0395                     	;# 
  1318  0396                     	;# 
  1319  0397                     	;# 
  1320  0398                     	;# 
  1321  0399                     	;# 
  1322  039A                     	;# 
  1323  039C                     	;# 
  1324  039D                     	;# 
  1325  039E                     	;# 
  1326  039F                     	;# 
  1327  0411                     	;# 
  1328  0411                     	;# 
  1329  0412                     	;# 
  1330  0413                     	;# 
  1331  0414                     	;# 
  1332  0415                     	;# 
  1333  0416                     	;# 
  1334  0417                     	;# 
  1335  0418                     	;# 
  1336  0418                     	;# 
  1337  0419                     	;# 
  1338  041A                     	;# 
  1339  041B                     	;# 
  1340  041C                     	;# 
  1341  041D                     	;# 
  1342  041E                     	;# 
  1343  041F                     	;# 
  1344  0498                     	;# 
  1345  0498                     	;# 
  1346  0499                     	;# 
  1347  049A                     	;# 
  1348  049B                     	;# 
  1349  049B                     	;# 
  1350  049C                     	;# 
  1351  049D                     	;# 
  1352  049E                     	;# 
  1353  049F                     	;# 
  1354  0617                     	;# 
  1355  0618                     	;# 
  1356  0619                     	;# 
  1357  0619                     	;# 
  1358  061A                     	;# 
  1359  061B                     	;# 
  1360  061C                     	;# 
  1361  061C                     	;# 
  1362  061F                     	;# 
  1363  0691                     	;# 
  1364  0692                     	;# 
  1365  0693                     	;# 
  1366  0694                     	;# 
  1367  0695                     	;# 
  1368  0696                     	;# 
  1369  0697                     	;# 
  1370  0698                     	;# 
  1371  0699                     	;# 
  1372  0711                     	;# 
  1373  0712                     	;# 
  1374  0713                     	;# 
  1375  0714                     	;# 
  1376  0715                     	;# 
  1377  0716                     	;# 
  1378  0717                     	;# 
  1379  0718                     	;# 
  1380  0719                     	;# 
  1381  0891                     	;# 
  1382  0891                     	;# 
  1383  0891                     	;# 
  1384  0891                     	;# 
  1385  0891                     	;# 
  1386  0891                     	;# 
  1387  0892                     	;# 
  1388  0892                     	;# 
  1389  0892                     	;# 
  1390  0893                     	;# 
  1391  0893                     	;# 
  1392  0893                     	;# 
  1393  0893                     	;# 
  1394  0893                     	;# 
  1395  0893                     	;# 
  1396  0894                     	;# 
  1397  0894                     	;# 
  1398  0894                     	;# 
  1399  0895                     	;# 
  1400  0895                     	;# 
  1401  0895                     	;# 
  1402  0896                     	;# 
  1403  0896                     	;# 
  1404  0896                     	;# 
  1405  089B                     	;# 
  1406  0911                     	;# 
  1407  0912                     	;# 
  1408  0913                     	;# 
  1409  0914                     	;# 
  1410  0915                     	;# 
  1411  0916                     	;# 
  1412  0918                     	;# 
  1413  0919                     	;# 
  1414  091A                     	;# 
  1415  091B                     	;# 
  1416  091C                     	;# 
  1417  091D                     	;# 
  1418  091E                     	;# 
  1419  091F                     	;# 
  1420  0E0F                     	;# 
  1421  0E10                     	;# 
  1422  0E11                     	;# 
  1423  0E12                     	;# 
  1424  0E13                     	;# 
  1425  0E14                     	;# 
  1426  0E15                     	;# 
  1427  0E16                     	;# 
  1428  0E17                     	;# 
  1429  0E18                     	;# 
  1430  0E19                     	;# 
  1431  0E1A                     	;# 
  1432  0E1B                     	;# 
  1433  0E1C                     	;# 
  1434  0E1D                     	;# 
  1435  0E1E                     	;# 
  1436  0E1F                     	;# 
  1437  0E20                     	;# 
  1438  0E21                     	;# 
  1439  0E22                     	;# 
  1440  0E24                     	;# 
  1441  0E25                     	;# 
  1442  0E28                     	;# 
  1443  0E29                     	;# 
  1444  0E2A                     	;# 
  1445  0E2B                     	;# 
  1446  0E2C                     	;# 
  1447  0E2D                     	;# 
  1448  0E2E                     	;# 
  1449  0E2F                     	;# 
  1450  0E90                     	;# 
  1451  0E91                     	;# 
  1452  0E92                     	;# 
  1453  0E94                     	;# 
  1454  0E95                     	;# 
  1455  0E9C                     	;# 
  1456  0E9D                     	;# 
  1457  0E9E                     	;# 
  1458  0E9F                     	;# 
  1459  0EA0                     	;# 
  1460  0EA1                     	;# 
  1461  0EA2                     	;# 
  1462  0EA3                     	;# 
  1463  0EA4                     	;# 
  1464  0EA5                     	;# 
  1465  0EA6                     	;# 
  1466  0EA7                     	;# 
  1467  0F0F                     	;# 
  1468  0F10                     	;# 
  1469  0F11                     	;# 
  1470  0F12                     	;# 
  1471  0F13                     	;# 
  1472  0F14                     	;# 
  1473  0F15                     	;# 
  1474  0F16                     	;# 
  1475  0F17                     	;# 
  1476  0F18                     	;# 
  1477  0F19                     	;# 
  1478  0F1A                     	;# 
  1479  0F1B                     	;# 
  1480  0F1C                     	;# 
  1481  0F1D                     	;# 
  1482  0F1E                     	;# 
  1483  0F1F                     	;# 
  1484  0F20                     	;# 
  1485  0F21                     	;# 
  1486  0F22                     	;# 
  1487  0F23                     	;# 
  1488  0F24                     	;# 
  1489  0F25                     	;# 
  1490  0F26                     	;# 
  1491  0F27                     	;# 
  1492  0F28                     	;# 
  1493  0F29                     	;# 
  1494  0F2A                     	;# 
  1495  0F2B                     	;# 
  1496  0F2C                     	;# 
  1497  0F2D                     	;# 
  1498  0F2E                     	;# 
  1499  0F2F                     	;# 
  1500  0F30                     	;# 
  1501  0F31                     	;# 
  1502  0F32                     	;# 
  1503  0F33                     	;# 
  1504  0F34                     	;# 
  1505  0F35                     	;# 
  1506  0F36                     	;# 
  1507  0F37                     	;# 
  1508  0FE4                     	;# 
  1509  0FE5                     	;# 
  1510  0FE6                     	;# 
  1511  0FE7                     	;# 
  1512  0FE8                     	;# 
  1513  0FE9                     	;# 
  1514  0FEA                     	;# 
  1515  0FEB                     	;# 
  1516  0FED                     	;# 
  1517  0FEE                     	;# 
  1518  0FEF                     	;# 
  1519  0000                     	;# 
  1520  0001                     	;# 
  1521  0002                     	;# 
  1522  0003                     	;# 
  1523  0004                     	;# 
  1524  0005                     	;# 
  1525  0006                     	;# 
  1526  0007                     	;# 
  1527  0008                     	;# 
  1528  0009                     	;# 
  1529  000A                     	;# 
  1530  000B                     	;# 
  1531  000C                     	;# 
  1532  000D                     	;# 
  1533  000E                     	;# 
  1534  0010                     	;# 
  1535  0011                     	;# 
  1536  0012                     	;# 
  1537  0013                     	;# 
  1538  0014                     	;# 
  1539  0015                     	;# 
  1540  0015                     	;# 
  1541  0016                     	;# 
  1542  0016                     	;# 
  1543  0017                     	;# 
  1544  0018                     	;# 
  1545  0019                     	;# 
  1546  0019                     	;# 
  1547  001A                     	;# 
  1548  001B                     	;# 
  1549  001C                     	;# 
  1550  001D                     	;# 
  1551  001E                     	;# 
  1552  001F                     	;# 
  1553  008C                     	;# 
  1554  008D                     	;# 
  1555  008E                     	;# 
  1556  0090                     	;# 
  1557  0091                     	;# 
  1558  0092                     	;# 
  1559  0093                     	;# 
  1560  0094                     	;# 
  1561  0097                     	;# 
  1562  009B                     	;# 
  1563  009B                     	;# 
  1564  009C                     	;# 
  1565  009D                     	;# 
  1566  009E                     	;# 
  1567  009F                     	;# 
  1568  010C                     	;# 
  1569  010D                     	;# 
  1570  010E                     	;# 
  1571  0111                     	;# 
  1572  0112                     	;# 
  1573  0113                     	;# 
  1574  0114                     	;# 
  1575  0115                     	;# 
  1576  0116                     	;# 
  1577  0117                     	;# 
  1578  0118                     	;# 
  1579  0119                     	;# 
  1580  018C                     	;# 
  1581  018D                     	;# 
  1582  018E                     	;# 
  1583  0197                     	;# 
  1584  0199                     	;# 
  1585  0199                     	;# 
  1586  0199                     	;# 
  1587  019A                     	;# 
  1588  019A                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019B                     	;# 
  1595  019C                     	;# 
  1596  019C                     	;# 
  1597  019C                     	;# 
  1598  019D                     	;# 
  1599  019D                     	;# 
  1600  019D                     	;# 
  1601  019E                     	;# 
  1602  019E                     	;# 
  1603  019E                     	;# 
  1604  019F                     	;# 
  1605  019F                     	;# 
  1606  019F                     	;# 
  1607  019F                     	;# 
  1608  019F                     	;# 
  1609  020C                     	;# 
  1610  020D                     	;# 
  1611  020E                     	;# 
  1612  0211                     	;# 
  1613  0211                     	;# 
  1614  0212                     	;# 
  1615  0212                     	;# 
  1616  0213                     	;# 
  1617  0213                     	;# 
  1618  0214                     	;# 
  1619  0214                     	;# 
  1620  0215                     	;# 
  1621  0215                     	;# 
  1622  0215                     	;# 
  1623  0215                     	;# 
  1624  0216                     	;# 
  1625  0216                     	;# 
  1626  0217                     	;# 
  1627  0217                     	;# 
  1628  0219                     	;# 
  1629  021A                     	;# 
  1630  021B                     	;# 
  1631  021C                     	;# 
  1632  021D                     	;# 
  1633  021D                     	;# 
  1634  021E                     	;# 
  1635  021F                     	;# 
  1636  028C                     	;# 
  1637  028D                     	;# 
  1638  028E                     	;# 
  1639  0291                     	;# 
  1640  0291                     	;# 
  1641  0292                     	;# 
  1642  0293                     	;# 
  1643  0294                     	;# 
  1644  0295                     	;# 
  1645  0295                     	;# 
  1646  0296                     	;# 
  1647  0297                     	;# 
  1648  0298                     	;# 
  1649  029F                     	;# 
  1650  030C                     	;# 
  1651  030D                     	;# 
  1652  030E                     	;# 
  1653  0311                     	;# 
  1654  0311                     	;# 
  1655  0312                     	;# 
  1656  0313                     	;# 
  1657  0314                     	;# 
  1658  0315                     	;# 
  1659  0315                     	;# 
  1660  0316                     	;# 
  1661  0317                     	;# 
  1662  0318                     	;# 
  1663  038C                     	;# 
  1664  038D                     	;# 
  1665  038E                     	;# 
  1666  0391                     	;# 
  1667  0392                     	;# 
  1668  0393                     	;# 
  1669  0394                     	;# 
  1670  0395                     	;# 
  1671  0396                     	;# 
  1672  0397                     	;# 
  1673  0398                     	;# 
  1674  0399                     	;# 
  1675  039A                     	;# 
  1676  039C                     	;# 
  1677  039D                     	;# 
  1678  039E                     	;# 
  1679  039F                     	;# 
  1680  0411                     	;# 
  1681  0411                     	;# 
  1682  0412                     	;# 
  1683  0413                     	;# 
  1684  0414                     	;# 
  1685  0415                     	;# 
  1686  0416                     	;# 
  1687  0417                     	;# 
  1688  0418                     	;# 
  1689  0418                     	;# 
  1690  0419                     	;# 
  1691  041A                     	;# 
  1692  041B                     	;# 
  1693  041C                     	;# 
  1694  041D                     	;# 
  1695  041E                     	;# 
  1696  041F                     	;# 
  1697  0498                     	;# 
  1698  0498                     	;# 
  1699  0499                     	;# 
  1700  049A                     	;# 
  1701  049B                     	;# 
  1702  049B                     	;# 
  1703  049C                     	;# 
  1704  049D                     	;# 
  1705  049E                     	;# 
  1706  049F                     	;# 
  1707  0617                     	;# 
  1708  0618                     	;# 
  1709  0619                     	;# 
  1710  0619                     	;# 
  1711  061A                     	;# 
  1712  061B                     	;# 
  1713  061C                     	;# 
  1714  061C                     	;# 
  1715  061F                     	;# 
  1716  0691                     	;# 
  1717  0692                     	;# 
  1718  0693                     	;# 
  1719  0694                     	;# 
  1720  0695                     	;# 
  1721  0696                     	;# 
  1722  0697                     	;# 
  1723  0698                     	;# 
  1724  0699                     	;# 
  1725  0711                     	;# 
  1726  0712                     	;# 
  1727  0713                     	;# 
  1728  0714                     	;# 
  1729  0715                     	;# 
  1730  0716                     	;# 
  1731  0717                     	;# 
  1732  0718                     	;# 
  1733  0719                     	;# 
  1734  0891                     	;# 
  1735  0891                     	;# 
  1736  0891                     	;# 
  1737  0891                     	;# 
  1738  0891                     	;# 
  1739  0891                     	;# 
  1740  0892                     	;# 
  1741  0892                     	;# 
  1742  0892                     	;# 
  1743  0893                     	;# 
  1744  0893                     	;# 
  1745  0893                     	;# 
  1746  0893                     	;# 
  1747  0893                     	;# 
  1748  0893                     	;# 
  1749  0894                     	;# 
  1750  0894                     	;# 
  1751  0894                     	;# 
  1752  0895                     	;# 
  1753  0895                     	;# 
  1754  0895                     	;# 
  1755  0896                     	;# 
  1756  0896                     	;# 
  1757  0896                     	;# 
  1758  089B                     	;# 
  1759  0911                     	;# 
  1760  0912                     	;# 
  1761  0913                     	;# 
  1762  0914                     	;# 
  1763  0915                     	;# 
  1764  0916                     	;# 
  1765  0918                     	;# 
  1766  0919                     	;# 
  1767  091A                     	;# 
  1768  091B                     	;# 
  1769  091C                     	;# 
  1770  091D                     	;# 
  1771  091E                     	;# 
  1772  091F                     	;# 
  1773  0E0F                     	;# 
  1774  0E10                     	;# 
  1775  0E11                     	;# 
  1776  0E12                     	;# 
  1777  0E13                     	;# 
  1778  0E14                     	;# 
  1779  0E15                     	;# 
  1780  0E16                     	;# 
  1781  0E17                     	;# 
  1782  0E18                     	;# 
  1783  0E19                     	;# 
  1784  0E1A                     	;# 
  1785  0E1B                     	;# 
  1786  0E1C                     	;# 
  1787  0E1D                     	;# 
  1788  0E1E                     	;# 
  1789  0E1F                     	;# 
  1790  0E20                     	;# 
  1791  0E21                     	;# 
  1792  0E22                     	;# 
  1793  0E24                     	;# 
  1794  0E25                     	;# 
  1795  0E28                     	;# 
  1796  0E29                     	;# 
  1797  0E2A                     	;# 
  1798  0E2B                     	;# 
  1799  0E2C                     	;# 
  1800  0E2D                     	;# 
  1801  0E2E                     	;# 
  1802  0E2F                     	;# 
  1803  0E90                     	;# 
  1804  0E91                     	;# 
  1805  0E92                     	;# 
  1806  0E94                     	;# 
  1807  0E95                     	;# 
  1808  0E9C                     	;# 
  1809  0E9D                     	;# 
  1810  0E9E                     	;# 
  1811  0E9F                     	;# 
  1812  0EA0                     	;# 
  1813  0EA1                     	;# 
  1814  0EA2                     	;# 
  1815  0EA3                     	;# 
  1816  0EA4                     	;# 
  1817  0EA5                     	;# 
  1818  0EA6                     	;# 
  1819  0EA7                     	;# 
  1820  0F0F                     	;# 
  1821  0F10                     	;# 
  1822  0F11                     	;# 
  1823  0F12                     	;# 
  1824  0F13                     	;# 
  1825  0F14                     	;# 
  1826  0F15                     	;# 
  1827  0F16                     	;# 
  1828  0F17                     	;# 
  1829  0F18                     	;# 
  1830  0F19                     	;# 
  1831  0F1A                     	;# 
  1832  0F1B                     	;# 
  1833  0F1C                     	;# 
  1834  0F1D                     	;# 
  1835  0F1E                     	;# 
  1836  0F1F                     	;# 
  1837  0F20                     	;# 
  1838  0F21                     	;# 
  1839  0F22                     	;# 
  1840  0F23                     	;# 
  1841  0F24                     	;# 
  1842  0F25                     	;# 
  1843  0F26                     	;# 
  1844  0F27                     	;# 
  1845  0F28                     	;# 
  1846  0F29                     	;# 
  1847  0F2A                     	;# 
  1848  0F2B                     	;# 
  1849  0F2C                     	;# 
  1850  0F2D                     	;# 
  1851  0F2E                     	;# 
  1852  0F2F                     	;# 
  1853  0F30                     	;# 
  1854  0F31                     	;# 
  1855  0F32                     	;# 
  1856  0F33                     	;# 
  1857  0F34                     	;# 
  1858  0F35                     	;# 
  1859  0F36                     	;# 
  1860  0F37                     	;# 
  1861  0FE4                     	;# 
  1862  0FE5                     	;# 
  1863  0FE6                     	;# 
  1864  0FE7                     	;# 
  1865  0FE8                     	;# 
  1866  0FE9                     	;# 
  1867  0FEA                     	;# 
  1868  0FEB                     	;# 
  1869  0FED                     	;# 
  1870  0FEE                     	;# 
  1871  0FEF                     	;# 
  1872  0000                     	;# 
  1873  0001                     	;# 
  1874  0002                     	;# 
  1875  0003                     	;# 
  1876  0004                     	;# 
  1877  0005                     	;# 
  1878  0006                     	;# 
  1879  0007                     	;# 
  1880  0008                     	;# 
  1881  0009                     	;# 
  1882  000A                     	;# 
  1883  000B                     	;# 
  1884  000C                     	;# 
  1885  000D                     	;# 
  1886  000E                     	;# 
  1887  0010                     	;# 
  1888  0011                     	;# 
  1889  0012                     	;# 
  1890  0013                     	;# 
  1891  0014                     	;# 
  1892  0015                     	;# 
  1893  0015                     	;# 
  1894  0016                     	;# 
  1895  0016                     	;# 
  1896  0017                     	;# 
  1897  0018                     	;# 
  1898  0019                     	;# 
  1899  0019                     	;# 
  1900  001A                     	;# 
  1901  001B                     	;# 
  1902  001C                     	;# 
  1903  001D                     	;# 
  1904  001E                     	;# 
  1905  001F                     	;# 
  1906  008C                     	;# 
  1907  008D                     	;# 
  1908  008E                     	;# 
  1909  0090                     	;# 
  1910  0091                     	;# 
  1911  0092                     	;# 
  1912  0093                     	;# 
  1913  0094                     	;# 
  1914  0097                     	;# 
  1915  009B                     	;# 
  1916  009B                     	;# 
  1917  009C                     	;# 
  1918  009D                     	;# 
  1919  009E                     	;# 
  1920  009F                     	;# 
  1921  010C                     	;# 
  1922  010D                     	;# 
  1923  010E                     	;# 
  1924  0111                     	;# 
  1925  0112                     	;# 
  1926  0113                     	;# 
  1927  0114                     	;# 
  1928  0115                     	;# 
  1929  0116                     	;# 
  1930  0117                     	;# 
  1931  0118                     	;# 
  1932  0119                     	;# 
  1933  018C                     	;# 
  1934  018D                     	;# 
  1935  018E                     	;# 
  1936  0197                     	;# 
  1937  0199                     	;# 
  1938  0199                     	;# 
  1939  0199                     	;# 
  1940  019A                     	;# 
  1941  019A                     	;# 
  1942  019A                     	;# 
  1943  019B                     	;# 
  1944  019B                     	;# 
  1945  019B                     	;# 
  1946  019B                     	;# 
  1947  019B                     	;# 
  1948  019C                     	;# 
  1949  019C                     	;# 
  1950  019C                     	;# 
  1951  019D                     	;# 
  1952  019D                     	;# 
  1953  019D                     	;# 
  1954  019E                     	;# 
  1955  019E                     	;# 
  1956  019E                     	;# 
  1957  019F                     	;# 
  1958  019F                     	;# 
  1959  019F                     	;# 
  1960  019F                     	;# 
  1961  019F                     	;# 
  1962  020C                     	;# 
  1963  020D                     	;# 
  1964  020E                     	;# 
  1965  0211                     	;# 
  1966  0211                     	;# 
  1967  0212                     	;# 
  1968  0212                     	;# 
  1969  0213                     	;# 
  1970  0213                     	;# 
  1971  0214                     	;# 
  1972  0214                     	;# 
  1973  0215                     	;# 
  1974  0215                     	;# 
  1975  0215                     	;# 
  1976  0215                     	;# 
  1977  0216                     	;# 
  1978  0216                     	;# 
  1979  0217                     	;# 
  1980  0217                     	;# 
  1981  0219                     	;# 
  1982  021A                     	;# 
  1983  021B                     	;# 
  1984  021C                     	;# 
  1985  021D                     	;# 
  1986  021D                     	;# 
  1987  021E                     	;# 
  1988  021F                     	;# 
  1989  028C                     	;# 
  1990  028D                     	;# 
  1991  028E                     	;# 
  1992  0291                     	;# 
  1993  0291                     	;# 
  1994  0292                     	;# 
  1995  0293                     	;# 
  1996  0294                     	;# 
  1997  0295                     	;# 
  1998  0295                     	;# 
  1999  0296                     	;# 
  2000  0297                     	;# 
  2001  0298                     	;# 
  2002  029F                     	;# 
  2003  030C                     	;# 
  2004  030D                     	;# 
  2005  030E                     	;# 
  2006  0311                     	;# 
  2007  0311                     	;# 
  2008  0312                     	;# 
  2009  0313                     	;# 
  2010  0314                     	;# 
  2011  0315                     	;# 
  2012  0315                     	;# 
  2013  0316                     	;# 
  2014  0317                     	;# 
  2015  0318                     	;# 
  2016  038C                     	;# 
  2017  038D                     	;# 
  2018  038E                     	;# 
  2019  0391                     	;# 
  2020  0392                     	;# 
  2021  0393                     	;# 
  2022  0394                     	;# 
  2023  0395                     	;# 
  2024  0396                     	;# 
  2025  0397                     	;# 
  2026  0398                     	;# 
  2027  0399                     	;# 
  2028  039A                     	;# 
  2029  039C                     	;# 
  2030  039D                     	;# 
  2031  039E                     	;# 
  2032  039F                     	;# 
  2033  0411                     	;# 
  2034  0411                     	;# 
  2035  0412                     	;# 
  2036  0413                     	;# 
  2037  0414                     	;# 
  2038  0415                     	;# 
  2039  0416                     	;# 
  2040  0417                     	;# 
  2041  0418                     	;# 
  2042  0418                     	;# 
  2043  0419                     	;# 
  2044  041A                     	;# 
  2045  041B                     	;# 
  2046  041C                     	;# 
  2047  041D                     	;# 
  2048  041E                     	;# 
  2049  041F                     	;# 
  2050  0498                     	;# 
  2051  0498                     	;# 
  2052  0499                     	;# 
  2053  049A                     	;# 
  2054  049B                     	;# 
  2055  049B                     	;# 
  2056  049C                     	;# 
  2057  049D                     	;# 
  2058  049E                     	;# 
  2059  049F                     	;# 
  2060  0617                     	;# 
  2061  0618                     	;# 
  2062  0619                     	;# 
  2063  0619                     	;# 
  2064  061A                     	;# 
  2065  061B                     	;# 
  2066  061C                     	;# 
  2067  061C                     	;# 
  2068  061F                     	;# 
  2069  0691                     	;# 
  2070  0692                     	;# 
  2071  0693                     	;# 
  2072  0694                     	;# 
  2073  0695                     	;# 
  2074  0696                     	;# 
  2075  0697                     	;# 
  2076  0698                     	;# 
  2077  0699                     	;# 
  2078  0711                     	;# 
  2079  0712                     	;# 
  2080  0713                     	;# 
  2081  0714                     	;# 
  2082  0715                     	;# 
  2083  0716                     	;# 
  2084  0717                     	;# 
  2085  0718                     	;# 
  2086  0719                     	;# 
  2087  0891                     	;# 
  2088  0891                     	;# 
  2089  0891                     	;# 
  2090  0891                     	;# 
  2091  0891                     	;# 
  2092  0891                     	;# 
  2093  0892                     	;# 
  2094  0892                     	;# 
  2095  0892                     	;# 
  2096  0893                     	;# 
  2097  0893                     	;# 
  2098  0893                     	;# 
  2099  0893                     	;# 
  2100  0893                     	;# 
  2101  0893                     	;# 
  2102  0894                     	;# 
  2103  0894                     	;# 
  2104  0894                     	;# 
  2105  0895                     	;# 
  2106  0895                     	;# 
  2107  0895                     	;# 
  2108  0896                     	;# 
  2109  0896                     	;# 
  2110  0896                     	;# 
  2111  089B                     	;# 
  2112  0911                     	;# 
  2113  0912                     	;# 
  2114  0913                     	;# 
  2115  0914                     	;# 
  2116  0915                     	;# 
  2117  0916                     	;# 
  2118  0918                     	;# 
  2119  0919                     	;# 
  2120  091A                     	;# 
  2121  091B                     	;# 
  2122  091C                     	;# 
  2123  091D                     	;# 
  2124  091E                     	;# 
  2125  091F                     	;# 
  2126  0E0F                     	;# 
  2127  0E10                     	;# 
  2128  0E11                     	;# 
  2129  0E12                     	;# 
  2130  0E13                     	;# 
  2131  0E14                     	;# 
  2132  0E15                     	;# 
  2133  0E16                     	;# 
  2134  0E17                     	;# 
  2135  0E18                     	;# 
  2136  0E19                     	;# 
  2137  0E1A                     	;# 
  2138  0E1B                     	;# 
  2139  0E1C                     	;# 
  2140  0E1D                     	;# 
  2141  0E1E                     	;# 
  2142  0E1F                     	;# 
  2143  0E20                     	;# 
  2144  0E21                     	;# 
  2145  0E22                     	;# 
  2146  0E24                     	;# 
  2147  0E25                     	;# 
  2148  0E28                     	;# 
  2149  0E29                     	;# 
  2150  0E2A                     	;# 
  2151  0E2B                     	;# 
  2152  0E2C                     	;# 
  2153  0E2D                     	;# 
  2154  0E2E                     	;# 
  2155  0E2F                     	;# 
  2156  0E90                     	;# 
  2157  0E91                     	;# 
  2158  0E92                     	;# 
  2159  0E94                     	;# 
  2160  0E95                     	;# 
  2161  0E9C                     	;# 
  2162  0E9D                     	;# 
  2163  0E9E                     	;# 
  2164  0E9F                     	;# 
  2165  0EA0                     	;# 
  2166  0EA1                     	;# 
  2167  0EA2                     	;# 
  2168  0EA3                     	;# 
  2169  0EA4                     	;# 
  2170  0EA5                     	;# 
  2171  0EA6                     	;# 
  2172  0EA7                     	;# 
  2173  0F0F                     	;# 
  2174  0F10                     	;# 
  2175  0F11                     	;# 
  2176  0F12                     	;# 
  2177  0F13                     	;# 
  2178  0F14                     	;# 
  2179  0F15                     	;# 
  2180  0F16                     	;# 
  2181  0F17                     	;# 
  2182  0F18                     	;# 
  2183  0F19                     	;# 
  2184  0F1A                     	;# 
  2185  0F1B                     	;# 
  2186  0F1C                     	;# 
  2187  0F1D                     	;# 
  2188  0F1E                     	;# 
  2189  0F1F                     	;# 
  2190  0F20                     	;# 
  2191  0F21                     	;# 
  2192  0F22                     	;# 
  2193  0F23                     	;# 
  2194  0F24                     	;# 
  2195  0F25                     	;# 
  2196  0F26                     	;# 
  2197  0F27                     	;# 
  2198  0F28                     	;# 
  2199  0F29                     	;# 
  2200  0F2A                     	;# 
  2201  0F2B                     	;# 
  2202  0F2C                     	;# 
  2203  0F2D                     	;# 
  2204  0F2E                     	;# 
  2205  0F2F                     	;# 
  2206  0F30                     	;# 
  2207  0F31                     	;# 
  2208  0F32                     	;# 
  2209  0F33                     	;# 
  2210  0F34                     	;# 
  2211  0F35                     	;# 
  2212  0F36                     	;# 
  2213  0F37                     	;# 
  2214  0FE4                     	;# 
  2215  0FE5                     	;# 
  2216  0FE6                     	;# 
  2217  0FE7                     	;# 
  2218  0FE8                     	;# 
  2219  0FE9                     	;# 
  2220  0FEA                     	;# 
  2221  0FEB                     	;# 
  2222  0FED                     	;# 
  2223  0FEE                     	;# 
  2224  0FEF                     	;# 
  2225  0000                     	;# 
  2226  0001                     	;# 
  2227  0002                     	;# 
  2228  0003                     	;# 
  2229  0004                     	;# 
  2230  0005                     	;# 
  2231  0006                     	;# 
  2232  0007                     	;# 
  2233  0008                     	;# 
  2234  0009                     	;# 
  2235  000A                     	;# 
  2236  000B                     	;# 
  2237  000C                     	;# 
  2238  000D                     	;# 
  2239  000E                     	;# 
  2240  0010                     	;# 
  2241  0011                     	;# 
  2242  0012                     	;# 
  2243  0013                     	;# 
  2244  0014                     	;# 
  2245  0015                     	;# 
  2246  0015                     	;# 
  2247  0016                     	;# 
  2248  0016                     	;# 
  2249  0017                     	;# 
  2250  0018                     	;# 
  2251  0019                     	;# 
  2252  0019                     	;# 
  2253  001A                     	;# 
  2254  001B                     	;# 
  2255  001C                     	;# 
  2256  001D                     	;# 
  2257  001E                     	;# 
  2258  001F                     	;# 
  2259  008C                     	;# 
  2260  008D                     	;# 
  2261  008E                     	;# 
  2262  0090                     	;# 
  2263  0091                     	;# 
  2264  0092                     	;# 
  2265  0093                     	;# 
  2266  0094                     	;# 
  2267  0097                     	;# 
  2268  009B                     	;# 
  2269  009B                     	;# 
  2270  009C                     	;# 
  2271  009D                     	;# 
  2272  009E                     	;# 
  2273  009F                     	;# 
  2274  010C                     	;# 
  2275  010D                     	;# 
  2276  010E                     	;# 
  2277  0111                     	;# 
  2278  0112                     	;# 
  2279  0113                     	;# 
  2280  0114                     	;# 
  2281  0115                     	;# 
  2282  0116                     	;# 
  2283  0117                     	;# 
  2284  0118                     	;# 
  2285  0119                     	;# 
  2286  018C                     	;# 
  2287  018D                     	;# 
  2288  018E                     	;# 
  2289  0197                     	;# 
  2290  0199                     	;# 
  2291  0199                     	;# 
  2292  0199                     	;# 
  2293  019A                     	;# 
  2294  019A                     	;# 
  2295  019A                     	;# 
  2296  019B                     	;# 
  2297  019B                     	;# 
  2298  019B                     	;# 
  2299  019B                     	;# 
  2300  019B                     	;# 
  2301  019C                     	;# 
  2302  019C                     	;# 
  2303  019C                     	;# 
  2304  019D                     	;# 
  2305  019D                     	;# 
  2306  019D                     	;# 
  2307  019E                     	;# 
  2308  019E                     	;# 
  2309  019E                     	;# 
  2310  019F                     	;# 
  2311  019F                     	;# 
  2312  019F                     	;# 
  2313  019F                     	;# 
  2314  019F                     	;# 
  2315  020C                     	;# 
  2316  020D                     	;# 
  2317  020E                     	;# 
  2318  0211                     	;# 
  2319  0211                     	;# 
  2320  0212                     	;# 
  2321  0212                     	;# 
  2322  0213                     	;# 
  2323  0213                     	;# 
  2324  0214                     	;# 
  2325  0214                     	;# 
  2326  0215                     	;# 
  2327  0215                     	;# 
  2328  0215                     	;# 
  2329  0215                     	;# 
  2330  0216                     	;# 
  2331  0216                     	;# 
  2332  0217                     	;# 
  2333  0217                     	;# 
  2334  0219                     	;# 
  2335  021A                     	;# 
  2336  021B                     	;# 
  2337  021C                     	;# 
  2338  021D                     	;# 
  2339  021D                     	;# 
  2340  021E                     	;# 
  2341  021F                     	;# 
  2342  028C                     	;# 
  2343  028D                     	;# 
  2344  028E                     	;# 
  2345  0291                     	;# 
  2346  0291                     	;# 
  2347  0292                     	;# 
  2348  0293                     	;# 
  2349  0294                     	;# 
  2350  0295                     	;# 
  2351  0295                     	;# 
  2352  0296                     	;# 
  2353  0297                     	;# 
  2354  0298                     	;# 
  2355  029F                     	;# 
  2356  030C                     	;# 
  2357  030D                     	;# 
  2358  030E                     	;# 
  2359  0311                     	;# 
  2360  0311                     	;# 
  2361  0312                     	;# 
  2362  0313                     	;# 
  2363  0314                     	;# 
  2364  0315                     	;# 
  2365  0315                     	;# 
  2366  0316                     	;# 
  2367  0317                     	;# 
  2368  0318                     	;# 
  2369  038C                     	;# 
  2370  038D                     	;# 
  2371  038E                     	;# 
  2372  0391                     	;# 
  2373  0392                     	;# 
  2374  0393                     	;# 
  2375  0394                     	;# 
  2376  0395                     	;# 
  2377  0396                     	;# 
  2378  0397                     	;# 
  2379  0398                     	;# 
  2380  0399                     	;# 
  2381  039A                     	;# 
  2382  039C                     	;# 
  2383  039D                     	;# 
  2384  039E                     	;# 
  2385  039F                     	;# 
  2386  0411                     	;# 
  2387  0411                     	;# 
  2388  0412                     	;# 
  2389  0413                     	;# 
  2390  0414                     	;# 
  2391  0415                     	;# 
  2392  0416                     	;# 
  2393  0417                     	;# 
  2394  0418                     	;# 
  2395  0418                     	;# 
  2396  0419                     	;# 
  2397  041A                     	;# 
  2398  041B                     	;# 
  2399  041C                     	;# 
  2400  041D                     	;# 
  2401  041E                     	;# 
  2402  041F                     	;# 
  2403  0498                     	;# 
  2404  0498                     	;# 
  2405  0499                     	;# 
  2406  049A                     	;# 
  2407  049B                     	;# 
  2408  049B                     	;# 
  2409  049C                     	;# 
  2410  049D                     	;# 
  2411  049E                     	;# 
  2412  049F                     	;# 
  2413  0617                     	;# 
  2414  0618                     	;# 
  2415  0619                     	;# 
  2416  0619                     	;# 
  2417  061A                     	;# 
  2418  061B                     	;# 
  2419  061C                     	;# 
  2420  061C                     	;# 
  2421  061F                     	;# 
  2422  0691                     	;# 
  2423  0692                     	;# 
  2424  0693                     	;# 
  2425  0694                     	;# 
  2426  0695                     	;# 
  2427  0696                     	;# 
  2428  0697                     	;# 
  2429  0698                     	;# 
  2430  0699                     	;# 
  2431  0711                     	;# 
  2432  0712                     	;# 
  2433  0713                     	;# 
  2434  0714                     	;# 
  2435  0715                     	;# 
  2436  0716                     	;# 
  2437  0717                     	;# 
  2438  0718                     	;# 
  2439  0719                     	;# 
  2440  0891                     	;# 
  2441  0891                     	;# 
  2442  0891                     	;# 
  2443  0891                     	;# 
  2444  0891                     	;# 
  2445  0891                     	;# 
  2446  0892                     	;# 
  2447  0892                     	;# 
  2448  0892                     	;# 
  2449  0893                     	;# 
  2450  0893                     	;# 
  2451  0893                     	;# 
  2452  0893                     	;# 
  2453  0893                     	;# 
  2454  0893                     	;# 
  2455  0894                     	;# 
  2456  0894                     	;# 
  2457  0894                     	;# 
  2458  0895                     	;# 
  2459  0895                     	;# 
  2460  0895                     	;# 
  2461  0896                     	;# 
  2462  0896                     	;# 
  2463  0896                     	;# 
  2464  089B                     	;# 
  2465  0911                     	;# 
  2466  0912                     	;# 
  2467  0913                     	;# 
  2468  0914                     	;# 
  2469  0915                     	;# 
  2470  0916                     	;# 
  2471  0918                     	;# 
  2472  0919                     	;# 
  2473  091A                     	;# 
  2474  091B                     	;# 
  2475  091C                     	;# 
  2476  091D                     	;# 
  2477  091E                     	;# 
  2478  091F                     	;# 
  2479  0E0F                     	;# 
  2480  0E10                     	;# 
  2481  0E11                     	;# 
  2482  0E12                     	;# 
  2483  0E13                     	;# 
  2484  0E14                     	;# 
  2485  0E15                     	;# 
  2486  0E16                     	;# 
  2487  0E17                     	;# 
  2488  0E18                     	;# 
  2489  0E19                     	;# 
  2490  0E1A                     	;# 
  2491  0E1B                     	;# 
  2492  0E1C                     	;# 
  2493  0E1D                     	;# 
  2494  0E1E                     	;# 
  2495  0E1F                     	;# 
  2496  0E20                     	;# 
  2497  0E21                     	;# 
  2498  0E22                     	;# 
  2499  0E24                     	;# 
  2500  0E25                     	;# 
  2501  0E28                     	;# 
  2502  0E29                     	;# 
  2503  0E2A                     	;# 
  2504  0E2B                     	;# 
  2505  0E2C                     	;# 
  2506  0E2D                     	;# 
  2507  0E2E                     	;# 
  2508  0E2F                     	;# 
  2509  0E90                     	;# 
  2510  0E91                     	;# 
  2511  0E92                     	;# 
  2512  0E94                     	;# 
  2513  0E95                     	;# 
  2514  0E9C                     	;# 
  2515  0E9D                     	;# 
  2516  0E9E                     	;# 
  2517  0E9F                     	;# 
  2518  0EA0                     	;# 
  2519  0EA1                     	;# 
  2520  0EA2                     	;# 
  2521  0EA3                     	;# 
  2522  0EA4                     	;# 
  2523  0EA5                     	;# 
  2524  0EA6                     	;# 
  2525  0EA7                     	;# 
  2526  0F0F                     	;# 
  2527  0F10                     	;# 
  2528  0F11                     	;# 
  2529  0F12                     	;# 
  2530  0F13                     	;# 
  2531  0F14                     	;# 
  2532  0F15                     	;# 
  2533  0F16                     	;# 
  2534  0F17                     	;# 
  2535  0F18                     	;# 
  2536  0F19                     	;# 
  2537  0F1A                     	;# 
  2538  0F1B                     	;# 
  2539  0F1C                     	;# 
  2540  0F1D                     	;# 
  2541  0F1E                     	;# 
  2542  0F1F                     	;# 
  2543  0F20                     	;# 
  2544  0F21                     	;# 
  2545  0F22                     	;# 
  2546  0F23                     	;# 
  2547  0F24                     	;# 
  2548  0F25                     	;# 
  2549  0F26                     	;# 
  2550  0F27                     	;# 
  2551  0F28                     	;# 
  2552  0F29                     	;# 
  2553  0F2A                     	;# 
  2554  0F2B                     	;# 
  2555  0F2C                     	;# 
  2556  0F2D                     	;# 
  2557  0F2E                     	;# 
  2558  0F2F                     	;# 
  2559  0F30                     	;# 
  2560  0F31                     	;# 
  2561  0F32                     	;# 
  2562  0F33                     	;# 
  2563  0F34                     	;# 
  2564  0F35                     	;# 
  2565  0F36                     	;# 
  2566  0F37                     	;# 
  2567  0FE4                     	;# 
  2568  0FE5                     	;# 
  2569  0FE6                     	;# 
  2570  0FE7                     	;# 
  2571  0FE8                     	;# 
  2572  0FE9                     	;# 
  2573  0FEA                     	;# 
  2574  0FEB                     	;# 
  2575  0FED                     	;# 
  2576  0FEE                     	;# 
  2577  0FEF                     	;# 
  2578  0000                     	;# 
  2579  0001                     	;# 
  2580  0002                     	;# 
  2581  0003                     	;# 
  2582  0004                     	;# 
  2583  0005                     	;# 
  2584  0006                     	;# 
  2585  0007                     	;# 
  2586  0008                     	;# 
  2587  0009                     	;# 
  2588  000A                     	;# 
  2589  000B                     	;# 
  2590  000C                     	;# 
  2591  000D                     	;# 
  2592  000E                     	;# 
  2593  0010                     	;# 
  2594  0011                     	;# 
  2595  0012                     	;# 
  2596  0013                     	;# 
  2597  0014                     	;# 
  2598  0015                     	;# 
  2599  0015                     	;# 
  2600  0016                     	;# 
  2601  0016                     	;# 
  2602  0017                     	;# 
  2603  0018                     	;# 
  2604  0019                     	;# 
  2605  0019                     	;# 
  2606  001A                     	;# 
  2607  001B                     	;# 
  2608  001C                     	;# 
  2609  001D                     	;# 
  2610  001E                     	;# 
  2611  001F                     	;# 
  2612  008C                     	;# 
  2613  008D                     	;# 
  2614  008E                     	;# 
  2615  0090                     	;# 
  2616  0091                     	;# 
  2617  0092                     	;# 
  2618  0093                     	;# 
  2619  0094                     	;# 
  2620  0097                     	;# 
  2621  009B                     	;# 
  2622  009B                     	;# 
  2623  009C                     	;# 
  2624  009D                     	;# 
  2625  009E                     	;# 
  2626  009F                     	;# 
  2627  010C                     	;# 
  2628  010D                     	;# 
  2629  010E                     	;# 
  2630  0111                     	;# 
  2631  0112                     	;# 
  2632  0113                     	;# 
  2633  0114                     	;# 
  2634  0115                     	;# 
  2635  0116                     	;# 
  2636  0117                     	;# 
  2637  0118                     	;# 
  2638  0119                     	;# 
  2639  018C                     	;# 
  2640  018D                     	;# 
  2641  018E                     	;# 
  2642  0197                     	;# 
  2643  0199                     	;# 
  2644  0199                     	;# 
  2645  0199                     	;# 
  2646  019A                     	;# 
  2647  019A                     	;# 
  2648  019A                     	;# 
  2649  019B                     	;# 
  2650  019B                     	;# 
  2651  019B                     	;# 
  2652  019B                     	;# 
  2653  019B                     	;# 
  2654  019C                     	;# 
  2655  019C                     	;# 
  2656  019C                     	;# 
  2657  019D                     	;# 
  2658  019D                     	;# 
  2659  019D                     	;# 
  2660  019E                     	;# 
  2661  019E                     	;# 
  2662  019E                     	;# 
  2663  019F                     	;# 
  2664  019F                     	;# 
  2665  019F                     	;# 
  2666  019F                     	;# 
  2667  019F                     	;# 
  2668  020C                     	;# 
  2669  020D                     	;# 
  2670  020E                     	;# 
  2671  0211                     	;# 
  2672  0211                     	;# 
  2673  0212                     	;# 
  2674  0212                     	;# 
  2675  0213                     	;# 
  2676  0213                     	;# 
  2677  0214                     	;# 
  2678  0214                     	;# 
  2679  0215                     	;# 
  2680  0215                     	;# 
  2681  0215                     	;# 
  2682  0215                     	;# 
  2683  0216                     	;# 
  2684  0216                     	;# 
  2685  0217                     	;# 
  2686  0217                     	;# 
  2687  0219                     	;# 
  2688  021A                     	;# 
  2689  021B                     	;# 
  2690  021C                     	;# 
  2691  021D                     	;# 
  2692  021D                     	;# 
  2693  021E                     	;# 
  2694  021F                     	;# 
  2695  028C                     	;# 
  2696  028D                     	;# 
  2697  028E                     	;# 
  2698  0291                     	;# 
  2699  0291                     	;# 
  2700  0292                     	;# 
  2701  0293                     	;# 
  2702  0294                     	;# 
  2703  0295                     	;# 
  2704  0295                     	;# 
  2705  0296                     	;# 
  2706  0297                     	;# 
  2707  0298                     	;# 
  2708  029F                     	;# 
  2709  030C                     	;# 
  2710  030D                     	;# 
  2711  030E                     	;# 
  2712  0311                     	;# 
  2713  0311                     	;# 
  2714  0312                     	;# 
  2715  0313                     	;# 
  2716  0314                     	;# 
  2717  0315                     	;# 
  2718  0315                     	;# 
  2719  0316                     	;# 
  2720  0317                     	;# 
  2721  0318                     	;# 
  2722  038C                     	;# 
  2723  038D                     	;# 
  2724  038E                     	;# 
  2725  0391                     	;# 
  2726  0392                     	;# 
  2727  0393                     	;# 
  2728  0394                     	;# 
  2729  0395                     	;# 
  2730  0396                     	;# 
  2731  0397                     	;# 
  2732  0398                     	;# 
  2733  0399                     	;# 
  2734  039A                     	;# 
  2735  039C                     	;# 
  2736  039D                     	;# 
  2737  039E                     	;# 
  2738  039F                     	;# 
  2739  0411                     	;# 
  2740  0411                     	;# 
  2741  0412                     	;# 
  2742  0413                     	;# 
  2743  0414                     	;# 
  2744  0415                     	;# 
  2745  0416                     	;# 
  2746  0417                     	;# 
  2747  0418                     	;# 
  2748  0418                     	;# 
  2749  0419                     	;# 
  2750  041A                     	;# 
  2751  041B                     	;# 
  2752  041C                     	;# 
  2753  041D                     	;# 
  2754  041E                     	;# 
  2755  041F                     	;# 
  2756  0498                     	;# 
  2757  0498                     	;# 
  2758  0499                     	;# 
  2759  049A                     	;# 
  2760  049B                     	;# 
  2761  049B                     	;# 
  2762  049C                     	;# 
  2763  049D                     	;# 
  2764  049E                     	;# 
  2765  049F                     	;# 
  2766  0617                     	;# 
  2767  0618                     	;# 
  2768  0619                     	;# 
  2769  0619                     	;# 
  2770  061A                     	;# 
  2771  061B                     	;# 
  2772  061C                     	;# 
  2773  061C                     	;# 
  2774  061F                     	;# 
  2775  0691                     	;# 
  2776  0692                     	;# 
  2777  0693                     	;# 
  2778  0694                     	;# 
  2779  0695                     	;# 
  2780  0696                     	;# 
  2781  0697                     	;# 
  2782  0698                     	;# 
  2783  0699                     	;# 
  2784  0711                     	;# 
  2785  0712                     	;# 
  2786  0713                     	;# 
  2787  0714                     	;# 
  2788  0715                     	;# 
  2789  0716                     	;# 
  2790  0717                     	;# 
  2791  0718                     	;# 
  2792  0719                     	;# 
  2793  0891                     	;# 
  2794  0891                     	;# 
  2795  0891                     	;# 
  2796  0891                     	;# 
  2797  0891                     	;# 
  2798  0891                     	;# 
  2799  0892                     	;# 
  2800  0892                     	;# 
  2801  0892                     	;# 
  2802  0893                     	;# 
  2803  0893                     	;# 
  2804  0893                     	;# 
  2805  0893                     	;# 
  2806  0893                     	;# 
  2807  0893                     	;# 
  2808  0894                     	;# 
  2809  0894                     	;# 
  2810  0894                     	;# 
  2811  0895                     	;# 
  2812  0895                     	;# 
  2813  0895                     	;# 
  2814  0896                     	;# 
  2815  0896                     	;# 
  2816  0896                     	;# 
  2817  089B                     	;# 
  2818  0911                     	;# 
  2819  0912                     	;# 
  2820  0913                     	;# 
  2821  0914                     	;# 
  2822  0915                     	;# 
  2823  0916                     	;# 
  2824  0918                     	;# 
  2825  0919                     	;# 
  2826  091A                     	;# 
  2827  091B                     	;# 
  2828  091C                     	;# 
  2829  091D                     	;# 
  2830  091E                     	;# 
  2831  091F                     	;# 
  2832  0E0F                     	;# 
  2833  0E10                     	;# 
  2834  0E11                     	;# 
  2835  0E12                     	;# 
  2836  0E13                     	;# 
  2837  0E14                     	;# 
  2838  0E15                     	;# 
  2839  0E16                     	;# 
  2840  0E17                     	;# 
  2841  0E18                     	;# 
  2842  0E19                     	;# 
  2843  0E1A                     	;# 
  2844  0E1B                     	;# 
  2845  0E1C                     	;# 
  2846  0E1D                     	;# 
  2847  0E1E                     	;# 
  2848  0E1F                     	;# 
  2849  0E20                     	;# 
  2850  0E21                     	;# 
  2851  0E22                     	;# 
  2852  0E24                     	;# 
  2853  0E25                     	;# 
  2854  0E28                     	;# 
  2855  0E29                     	;# 
  2856  0E2A                     	;# 
  2857  0E2B                     	;# 
  2858  0E2C                     	;# 
  2859  0E2D                     	;# 
  2860  0E2E                     	;# 
  2861  0E2F                     	;# 
  2862  0E90                     	;# 
  2863  0E91                     	;# 
  2864  0E92                     	;# 
  2865  0E94                     	;# 
  2866  0E95                     	;# 
  2867  0E9C                     	;# 
  2868  0E9D                     	;# 
  2869  0E9E                     	;# 
  2870  0E9F                     	;# 
  2871  0EA0                     	;# 
  2872  0EA1                     	;# 
  2873  0EA2                     	;# 
  2874  0EA3                     	;# 
  2875  0EA4                     	;# 
  2876  0EA5                     	;# 
  2877  0EA6                     	;# 
  2878  0EA7                     	;# 
  2879  0F0F                     	;# 
  2880  0F10                     	;# 
  2881  0F11                     	;# 
  2882  0F12                     	;# 
  2883  0F13                     	;# 
  2884  0F14                     	;# 
  2885  0F15                     	;# 
  2886  0F16                     	;# 
  2887  0F17                     	;# 
  2888  0F18                     	;# 
  2889  0F19                     	;# 
  2890  0F1A                     	;# 
  2891  0F1B                     	;# 
  2892  0F1C                     	;# 
  2893  0F1D                     	;# 
  2894  0F1E                     	;# 
  2895  0F1F                     	;# 
  2896  0F20                     	;# 
  2897  0F21                     	;# 
  2898  0F22                     	;# 
  2899  0F23                     	;# 
  2900  0F24                     	;# 
  2901  0F25                     	;# 
  2902  0F26                     	;# 
  2903  0F27                     	;# 
  2904  0F28                     	;# 
  2905  0F29                     	;# 
  2906  0F2A                     	;# 
  2907  0F2B                     	;# 
  2908  0F2C                     	;# 
  2909  0F2D                     	;# 
  2910  0F2E                     	;# 
  2911  0F2F                     	;# 
  2912  0F30                     	;# 
  2913  0F31                     	;# 
  2914  0F32                     	;# 
  2915  0F33                     	;# 
  2916  0F34                     	;# 
  2917  0F35                     	;# 
  2918  0F36                     	;# 
  2919  0F37                     	;# 
  2920  0FE4                     	;# 
  2921  0FE5                     	;# 
  2922  0FE6                     	;# 
  2923  0FE7                     	;# 
  2924  0FE8                     	;# 
  2925  0FE9                     	;# 
  2926  0FEA                     	;# 
  2927  0FEB                     	;# 
  2928  0FED                     	;# 
  2929  0FEE                     	;# 
  2930  0FEF                     	;# 
  2931  0000                     	;# 
  2932  0001                     	;# 
  2933  0002                     	;# 
  2934  0003                     	;# 
  2935  0004                     	;# 
  2936  0005                     	;# 
  2937  0006                     	;# 
  2938  0007                     	;# 
  2939  0008                     	;# 
  2940  0009                     	;# 
  2941  000A                     	;# 
  2942  000B                     	;# 
  2943  000C                     	;# 
  2944  000D                     	;# 
  2945  000E                     	;# 
  2946  0010                     	;# 
  2947  0011                     	;# 
  2948  0012                     	;# 
  2949  0013                     	;# 
  2950  0014                     	;# 
  2951  0015                     	;# 
  2952  0015                     	;# 
  2953  0016                     	;# 
  2954  0016                     	;# 
  2955  0017                     	;# 
  2956  0018                     	;# 
  2957  0019                     	;# 
  2958  0019                     	;# 
  2959  001A                     	;# 
  2960  001B                     	;# 
  2961  001C                     	;# 
  2962  001D                     	;# 
  2963  001E                     	;# 
  2964  001F                     	;# 
  2965  008C                     	;# 
  2966  008D                     	;# 
  2967  008E                     	;# 
  2968  0090                     	;# 
  2969  0091                     	;# 
  2970  0092                     	;# 
  2971  0093                     	;# 
  2972  0094                     	;# 
  2973  0097                     	;# 
  2974  009B                     	;# 
  2975  009B                     	;# 
  2976  009C                     	;# 
  2977  009D                     	;# 
  2978  009E                     	;# 
  2979  009F                     	;# 
  2980  010C                     	;# 
  2981  010D                     	;# 
  2982  010E                     	;# 
  2983  0111                     	;# 
  2984  0112                     	;# 
  2985  0113                     	;# 
  2986  0114                     	;# 
  2987  0115                     	;# 
  2988  0116                     	;# 
  2989  0117                     	;# 
  2990  0118                     	;# 
  2991  0119                     	;# 
  2992  018C                     	;# 
  2993  018D                     	;# 
  2994  018E                     	;# 
  2995  0197                     	;# 
  2996  0199                     	;# 
  2997  0199                     	;# 
  2998  0199                     	;# 
  2999  019A                     	;# 
  3000  019A                     	;# 
  3001  019A                     	;# 
  3002  019B                     	;# 
  3003  019B                     	;# 
  3004  019B                     	;# 
  3005  019B                     	;# 
  3006  019B                     	;# 
  3007  019C                     	;# 
  3008  019C                     	;# 
  3009  019C                     	;# 
  3010  019D                     	;# 
  3011  019D                     	;# 
  3012  019D                     	;# 
  3013  019E                     	;# 
  3014  019E                     	;# 
  3015  019E                     	;# 
  3016  019F                     	;# 
  3017  019F                     	;# 
  3018  019F                     	;# 
  3019  019F                     	;# 
  3020  019F                     	;# 
  3021  020C                     	;# 
  3022  020D                     	;# 
  3023  020E                     	;# 
  3024  0211                     	;# 
  3025  0211                     	;# 
  3026  0212                     	;# 
  3027  0212                     	;# 
  3028  0213                     	;# 
  3029  0213                     	;# 
  3030  0214                     	;# 
  3031  0214                     	;# 
  3032  0215                     	;# 
  3033  0215                     	;# 
  3034  0215                     	;# 
  3035  0215                     	;# 
  3036  0216                     	;# 
  3037  0216                     	;# 
  3038  0217                     	;# 
  3039  0217                     	;# 
  3040  0219                     	;# 
  3041  021A                     	;# 
  3042  021B                     	;# 
  3043  021C                     	;# 
  3044  021D                     	;# 
  3045  021D                     	;# 
  3046  021E                     	;# 
  3047  021F                     	;# 
  3048  028C                     	;# 
  3049  028D                     	;# 
  3050  028E                     	;# 
  3051  0291                     	;# 
  3052  0291                     	;# 
  3053  0292                     	;# 
  3054  0293                     	;# 
  3055  0294                     	;# 
  3056  0295                     	;# 
  3057  0295                     	;# 
  3058  0296                     	;# 
  3059  0297                     	;# 
  3060  0298                     	;# 
  3061  029F                     	;# 
  3062  030C                     	;# 
  3063  030D                     	;# 
  3064  030E                     	;# 
  3065  0311                     	;# 
  3066  0311                     	;# 
  3067  0312                     	;# 
  3068  0313                     	;# 
  3069  0314                     	;# 
  3070  0315                     	;# 
  3071  0315                     	;# 
  3072  0316                     	;# 
  3073  0317                     	;# 
  3074  0318                     	;# 
  3075  038C                     	;# 
  3076  038D                     	;# 
  3077  038E                     	;# 
  3078  0391                     	;# 
  3079  0392                     	;# 
  3080  0393                     	;# 
  3081  0394                     	;# 
  3082  0395                     	;# 
  3083  0396                     	;# 
  3084  0397                     	;# 
  3085  0398                     	;# 
  3086  0399                     	;# 
  3087  039A                     	;# 
  3088  039C                     	;# 
  3089  039D                     	;# 
  3090  039E                     	;# 
  3091  039F                     	;# 
  3092  0411                     	;# 
  3093  0411                     	;# 
  3094  0412                     	;# 
  3095  0413                     	;# 
  3096  0414                     	;# 
  3097  0415                     	;# 
  3098  0416                     	;# 
  3099  0417                     	;# 
  3100  0418                     	;# 
  3101  0418                     	;# 
  3102  0419                     	;# 
  3103  041A                     	;# 
  3104  041B                     	;# 
  3105  041C                     	;# 
  3106  041D                     	;# 
  3107  041E                     	;# 
  3108  041F                     	;# 
  3109  0498                     	;# 
  3110  0498                     	;# 
  3111  0499                     	;# 
  3112  049A                     	;# 
  3113  049B                     	;# 
  3114  049B                     	;# 
  3115  049C                     	;# 
  3116  049D                     	;# 
  3117  049E                     	;# 
  3118  049F                     	;# 
  3119  0617                     	;# 
  3120  0618                     	;# 
  3121  0619                     	;# 
  3122  0619                     	;# 
  3123  061A                     	;# 
  3124  061B                     	;# 
  3125  061C                     	;# 
  3126  061C                     	;# 
  3127  061F                     	;# 
  3128  0691                     	;# 
  3129  0692                     	;# 
  3130  0693                     	;# 
  3131  0694                     	;# 
  3132  0695                     	;# 
  3133  0696                     	;# 
  3134  0697                     	;# 
  3135  0698                     	;# 
  3136  0699                     	;# 
  3137  0711                     	;# 
  3138  0712                     	;# 
  3139  0713                     	;# 
  3140  0714                     	;# 
  3141  0715                     	;# 
  3142  0716                     	;# 
  3143  0717                     	;# 
  3144  0718                     	;# 
  3145  0719                     	;# 
  3146  0891                     	;# 
  3147  0891                     	;# 
  3148  0891                     	;# 
  3149  0891                     	;# 
  3150  0891                     	;# 
  3151  0891                     	;# 
  3152  0892                     	;# 
  3153  0892                     	;# 
  3154  0892                     	;# 
  3155  0893                     	;# 
  3156  0893                     	;# 
  3157  0893                     	;# 
  3158  0893                     	;# 
  3159  0893                     	;# 
  3160  0893                     	;# 
  3161  0894                     	;# 
  3162  0894                     	;# 
  3163  0894                     	;# 
  3164  0895                     	;# 
  3165  0895                     	;# 
  3166  0895                     	;# 
  3167  0896                     	;# 
  3168  0896                     	;# 
  3169  0896                     	;# 
  3170  089B                     	;# 
  3171  0911                     	;# 
  3172  0912                     	;# 
  3173  0913                     	;# 
  3174  0914                     	;# 
  3175  0915                     	;# 
  3176  0916                     	;# 
  3177  0918                     	;# 
  3178  0919                     	;# 
  3179  091A                     	;# 
  3180  091B                     	;# 
  3181  091C                     	;# 
  3182  091D                     	;# 
  3183  091E                     	;# 
  3184  091F                     	;# 
  3185  0E0F                     	;# 
  3186  0E10                     	;# 
  3187  0E11                     	;# 
  3188  0E12                     	;# 
  3189  0E13                     	;# 
  3190  0E14                     	;# 
  3191  0E15                     	;# 
  3192  0E16                     	;# 
  3193  0E17                     	;# 
  3194  0E18                     	;# 
  3195  0E19                     	;# 
  3196  0E1A                     	;# 
  3197  0E1B                     	;# 
  3198  0E1C                     	;# 
  3199  0E1D                     	;# 
  3200  0E1E                     	;# 
  3201  0E1F                     	;# 
  3202  0E20                     	;# 
  3203  0E21                     	;# 
  3204  0E22                     	;# 
  3205  0E24                     	;# 
  3206  0E25                     	;# 
  3207  0E28                     	;# 
  3208  0E29                     	;# 
  3209  0E2A                     	;# 
  3210  0E2B                     	;# 
  3211  0E2C                     	;# 
  3212  0E2D                     	;# 
  3213  0E2E                     	;# 
  3214  0E2F                     	;# 
  3215  0E90                     	;# 
  3216  0E91                     	;# 
  3217  0E92                     	;# 
  3218  0E94                     	;# 
  3219  0E95                     	;# 
  3220  0E9C                     	;# 
  3221  0E9D                     	;# 
  3222  0E9E                     	;# 
  3223  0E9F                     	;# 
  3224  0EA0                     	;# 
  3225  0EA1                     	;# 
  3226  0EA2                     	;# 
  3227  0EA3                     	;# 
  3228  0EA4                     	;# 
  3229  0EA5                     	;# 
  3230  0EA6                     	;# 
  3231  0EA7                     	;# 
  3232  0F0F                     	;# 
  3233  0F10                     	;# 
  3234  0F11                     	;# 
  3235  0F12                     	;# 
  3236  0F13                     	;# 
  3237  0F14                     	;# 
  3238  0F15                     	;# 
  3239  0F16                     	;# 
  3240  0F17                     	;# 
  3241  0F18                     	;# 
  3242  0F19                     	;# 
  3243  0F1A                     	;# 
  3244  0F1B                     	;# 
  3245  0F1C                     	;# 
  3246  0F1D                     	;# 
  3247  0F1E                     	;# 
  3248  0F1F                     	;# 
  3249  0F20                     	;# 
  3250  0F21                     	;# 
  3251  0F22                     	;# 
  3252  0F23                     	;# 
  3253  0F24                     	;# 
  3254  0F25                     	;# 
  3255  0F26                     	;# 
  3256  0F27                     	;# 
  3257  0F28                     	;# 
  3258  0F29                     	;# 
  3259  0F2A                     	;# 
  3260  0F2B                     	;# 
  3261  0F2C                     	;# 
  3262  0F2D                     	;# 
  3263  0F2E                     	;# 
  3264  0F2F                     	;# 
  3265  0F30                     	;# 
  3266  0F31                     	;# 
  3267  0F32                     	;# 
  3268  0F33                     	;# 
  3269  0F34                     	;# 
  3270  0F35                     	;# 
  3271  0F36                     	;# 
  3272  0F37                     	;# 
  3273  0FE4                     	;# 
  3274  0FE5                     	;# 
  3275  0FE6                     	;# 
  3276  0FE7                     	;# 
  3277  0FE8                     	;# 
  3278  0FE9                     	;# 
  3279  0FEA                     	;# 
  3280  0FEB                     	;# 
  3281  0FED                     	;# 
  3282  0FEE                     	;# 
  3283  0FEF                     	;# 
  3284  0000                     	;# 
  3285  0001                     	;# 
  3286  0002                     	;# 
  3287  0003                     	;# 
  3288  0004                     	;# 
  3289  0005                     	;# 
  3290  0006                     	;# 
  3291  0007                     	;# 
  3292  0008                     	;# 
  3293  0009                     	;# 
  3294  000A                     	;# 
  3295  000B                     	;# 
  3296  000C                     	;# 
  3297  000D                     	;# 
  3298  000E                     	;# 
  3299  0010                     	;# 
  3300  0011                     	;# 
  3301  0012                     	;# 
  3302  0013                     	;# 
  3303  0014                     	;# 
  3304  0015                     	;# 
  3305  0015                     	;# 
  3306  0016                     	;# 
  3307  0016                     	;# 
  3308  0017                     	;# 
  3309  0018                     	;# 
  3310  0019                     	;# 
  3311  0019                     	;# 
  3312  001A                     	;# 
  3313  001B                     	;# 
  3314  001C                     	;# 
  3315  001D                     	;# 
  3316  001E                     	;# 
  3317  001F                     	;# 
  3318  008C                     	;# 
  3319  008D                     	;# 
  3320  008E                     	;# 
  3321  0090                     	;# 
  3322  0091                     	;# 
  3323  0092                     	;# 
  3324  0093                     	;# 
  3325  0094                     	;# 
  3326  0097                     	;# 
  3327  009B                     	;# 
  3328  009B                     	;# 
  3329  009C                     	;# 
  3330  009D                     	;# 
  3331  009E                     	;# 
  3332  009F                     	;# 
  3333  010C                     	;# 
  3334  010D                     	;# 
  3335  010E                     	;# 
  3336  0111                     	;# 
  3337  0112                     	;# 
  3338  0113                     	;# 
  3339  0114                     	;# 
  3340  0115                     	;# 
  3341  0116                     	;# 
  3342  0117                     	;# 
  3343  0118                     	;# 
  3344  0119                     	;# 
  3345  018C                     	;# 
  3346  018D                     	;# 
  3347  018E                     	;# 
  3348  0197                     	;# 
  3349  0199                     	;# 
  3350  0199                     	;# 
  3351  0199                     	;# 
  3352  019A                     	;# 
  3353  019A                     	;# 
  3354  019A                     	;# 
  3355  019B                     	;# 
  3356  019B                     	;# 
  3357  019B                     	;# 
  3358  019B                     	;# 
  3359  019B                     	;# 
  3360  019C                     	;# 
  3361  019C                     	;# 
  3362  019C                     	;# 
  3363  019D                     	;# 
  3364  019D                     	;# 
  3365  019D                     	;# 
  3366  019E                     	;# 
  3367  019E                     	;# 
  3368  019E                     	;# 
  3369  019F                     	;# 
  3370  019F                     	;# 
  3371  019F                     	;# 
  3372  019F                     	;# 
  3373  019F                     	;# 
  3374  020C                     	;# 
  3375  020D                     	;# 
  3376  020E                     	;# 
  3377  0211                     	;# 
  3378  0211                     	;# 
  3379  0212                     	;# 
  3380  0212                     	;# 
  3381  0213                     	;# 
  3382  0213                     	;# 
  3383  0214                     	;# 
  3384  0214                     	;# 
  3385  0215                     	;# 
  3386  0215                     	;# 
  3387  0215                     	;# 
  3388  0215                     	;# 
  3389  0216                     	;# 
  3390  0216                     	;# 
  3391  0217                     	;# 
  3392  0217                     	;# 
  3393  0219                     	;# 
  3394  021A                     	;# 
  3395  021B                     	;# 
  3396  021C                     	;# 
  3397  021D                     	;# 
  3398  021D                     	;# 
  3399  021E                     	;# 
  3400  021F                     	;# 
  3401  028C                     	;# 
  3402  028D                     	;# 
  3403  028E                     	;# 
  3404  0291                     	;# 
  3405  0291                     	;# 
  3406  0292                     	;# 
  3407  0293                     	;# 
  3408  0294                     	;# 
  3409  0295                     	;# 
  3410  0295                     	;# 
  3411  0296                     	;# 
  3412  0297                     	;# 
  3413  0298                     	;# 
  3414  029F                     	;# 
  3415  030C                     	;# 
  3416  030D                     	;# 
  3417  030E                     	;# 
  3418  0311                     	;# 
  3419  0311                     	;# 
  3420  0312                     	;# 
  3421  0313                     	;# 
  3422  0314                     	;# 
  3423  0315                     	;# 
  3424  0315                     	;# 
  3425  0316                     	;# 
  3426  0317                     	;# 
  3427  0318                     	;# 
  3428  038C                     	;# 
  3429  038D                     	;# 
  3430  038E                     	;# 
  3431  0391                     	;# 
  3432  0392                     	;# 
  3433  0393                     	;# 
  3434  0394                     	;# 
  3435  0395                     	;# 
  3436  0396                     	;# 
  3437  0397                     	;# 
  3438  0398                     	;# 
  3439  0399                     	;# 
  3440  039A                     	;# 
  3441  039C                     	;# 
  3442  039D                     	;# 
  3443  039E                     	;# 
  3444  039F                     	;# 
  3445  0411                     	;# 
  3446  0411                     	;# 
  3447  0412                     	;# 
  3448  0413                     	;# 
  3449  0414                     	;# 
  3450  0415                     	;# 
  3451  0416                     	;# 
  3452  0417                     	;# 
  3453  0418                     	;# 
  3454  0418                     	;# 
  3455  0419                     	;# 
  3456  041A                     	;# 
  3457  041B                     	;# 
  3458  041C                     	;# 
  3459  041D                     	;# 
  3460  041E                     	;# 
  3461  041F                     	;# 
  3462  0498                     	;# 
  3463  0498                     	;# 
  3464  0499                     	;# 
  3465  049A                     	;# 
  3466  049B                     	;# 
  3467  049B                     	;# 
  3468  049C                     	;# 
  3469  049D                     	;# 
  3470  049E                     	;# 
  3471  049F                     	;# 
  3472  0617                     	;# 
  3473  0618                     	;# 
  3474  0619                     	;# 
  3475  0619                     	;# 
  3476  061A                     	;# 
  3477  061B                     	;# 
  3478  061C                     	;# 
  3479  061C                     	;# 
  3480  061F                     	;# 
  3481  0691                     	;# 
  3482  0692                     	;# 
  3483  0693                     	;# 
  3484  0694                     	;# 
  3485  0695                     	;# 
  3486  0696                     	;# 
  3487  0697                     	;# 
  3488  0698                     	;# 
  3489  0699                     	;# 
  3490  0711                     	;# 
  3491  0712                     	;# 
  3492  0713                     	;# 
  3493  0714                     	;# 
  3494  0715                     	;# 
  3495  0716                     	;# 
  3496  0717                     	;# 
  3497  0718                     	;# 
  3498  0719                     	;# 
  3499  0891                     	;# 
  3500  0891                     	;# 
  3501  0891                     	;# 
  3502  0891                     	;# 
  3503  0891                     	;# 
  3504  0891                     	;# 
  3505  0892                     	;# 
  3506  0892                     	;# 
  3507  0892                     	;# 
  3508  0893                     	;# 
  3509  0893                     	;# 
  3510  0893                     	;# 
  3511  0893                     	;# 
  3512  0893                     	;# 
  3513  0893                     	;# 
  3514  0894                     	;# 
  3515  0894                     	;# 
  3516  0894                     	;# 
  3517  0895                     	;# 
  3518  0895                     	;# 
  3519  0895                     	;# 
  3520  0896                     	;# 
  3521  0896                     	;# 
  3522  0896                     	;# 
  3523  089B                     	;# 
  3524  0911                     	;# 
  3525  0912                     	;# 
  3526  0913                     	;# 
  3527  0914                     	;# 
  3528  0915                     	;# 
  3529  0916                     	;# 
  3530  0918                     	;# 
  3531  0919                     	;# 
  3532  091A                     	;# 
  3533  091B                     	;# 
  3534  091C                     	;# 
  3535  091D                     	;# 
  3536  091E                     	;# 
  3537  091F                     	;# 
  3538  0E0F                     	;# 
  3539  0E10                     	;# 
  3540  0E11                     	;# 
  3541  0E12                     	;# 
  3542  0E13                     	;# 
  3543  0E14                     	;# 
  3544  0E15                     	;# 
  3545  0E16                     	;# 
  3546  0E17                     	;# 
  3547  0E18                     	;# 
  3548  0E19                     	;# 
  3549  0E1A                     	;# 
  3550  0E1B                     	;# 
  3551  0E1C                     	;# 
  3552  0E1D                     	;# 
  3553  0E1E                     	;# 
  3554  0E1F                     	;# 
  3555  0E20                     	;# 
  3556  0E21                     	;# 
  3557  0E22                     	;# 
  3558  0E24                     	;# 
  3559  0E25                     	;# 
  3560  0E28                     	;# 
  3561  0E29                     	;# 
  3562  0E2A                     	;# 
  3563  0E2B                     	;# 
  3564  0E2C                     	;# 
  3565  0E2D                     	;# 
  3566  0E2E                     	;# 
  3567  0E2F                     	;# 
  3568  0E90                     	;# 
  3569  0E91                     	;# 
  3570  0E92                     	;# 
  3571  0E94                     	;# 
  3572  0E95                     	;# 
  3573  0E9C                     	;# 
  3574  0E9D                     	;# 
  3575  0E9E                     	;# 
  3576  0E9F                     	;# 
  3577  0EA0                     	;# 
  3578  0EA1                     	;# 
  3579  0EA2                     	;# 
  3580  0EA3                     	;# 
  3581  0EA4                     	;# 
  3582  0EA5                     	;# 
  3583  0EA6                     	;# 
  3584  0EA7                     	;# 
  3585  0F0F                     	;# 
  3586  0F10                     	;# 
  3587  0F11                     	;# 
  3588  0F12                     	;# 
  3589  0F13                     	;# 
  3590  0F14                     	;# 
  3591  0F15                     	;# 
  3592  0F16                     	;# 
  3593  0F17                     	;# 
  3594  0F18                     	;# 
  3595  0F19                     	;# 
  3596  0F1A                     	;# 
  3597  0F1B                     	;# 
  3598  0F1C                     	;# 
  3599  0F1D                     	;# 
  3600  0F1E                     	;# 
  3601  0F1F                     	;# 
  3602  0F20                     	;# 
  3603  0F21                     	;# 
  3604  0F22                     	;# 
  3605  0F23                     	;# 
  3606  0F24                     	;# 
  3607  0F25                     	;# 
  3608  0F26                     	;# 
  3609  0F27                     	;# 
  3610  0F28                     	;# 
  3611  0F29                     	;# 
  3612  0F2A                     	;# 
  3613  0F2B                     	;# 
  3614  0F2C                     	;# 
  3615  0F2D                     	;# 
  3616  0F2E                     	;# 
  3617  0F2F                     	;# 
  3618  0F30                     	;# 
  3619  0F31                     	;# 
  3620  0F32                     	;# 
  3621  0F33                     	;# 
  3622  0F34                     	;# 
  3623  0F35                     	;# 
  3624  0F36                     	;# 
  3625  0F37                     	;# 
  3626  0FE4                     	;# 
  3627  0FE5                     	;# 
  3628  0FE6                     	;# 
  3629  0FE7                     	;# 
  3630  0FE8                     	;# 
  3631  0FE9                     	;# 
  3632  0FEA                     	;# 
  3633  0FEB                     	;# 
  3634  0FED                     	;# 
  3635  0FEE                     	;# 
  3636  0FEF                     	;# 
  3637  0000                     	;# 
  3638  0001                     	;# 
  3639  0002                     	;# 
  3640  0003                     	;# 
  3641  0004                     	;# 
  3642  0005                     	;# 
  3643  0006                     	;# 
  3644  0007                     	;# 
  3645  0008                     	;# 
  3646  0009                     	;# 
  3647  000A                     	;# 
  3648  000B                     	;# 
  3649  000C                     	;# 
  3650  000D                     	;# 
  3651  000E                     	;# 
  3652  0010                     	;# 
  3653  0011                     	;# 
  3654  0012                     	;# 
  3655  0013                     	;# 
  3656  0014                     	;# 
  3657  0015                     	;# 
  3658  0015                     	;# 
  3659  0016                     	;# 
  3660  0016                     	;# 
  3661  0017                     	;# 
  3662  0018                     	;# 
  3663  0019                     	;# 
  3664  0019                     	;# 
  3665  001A                     	;# 
  3666  001B                     	;# 
  3667  001C                     	;# 
  3668  001D                     	;# 
  3669  001E                     	;# 
  3670  001F                     	;# 
  3671  008C                     	;# 
  3672  008D                     	;# 
  3673  008E                     	;# 
  3674  0090                     	;# 
  3675  0091                     	;# 
  3676  0092                     	;# 
  3677  0093                     	;# 
  3678  0094                     	;# 
  3679  0097                     	;# 
  3680  009B                     	;# 
  3681  009B                     	;# 
  3682  009C                     	;# 
  3683  009D                     	;# 
  3684  009E                     	;# 
  3685  009F                     	;# 
  3686  010C                     	;# 
  3687  010D                     	;# 
  3688  010E                     	;# 
  3689  0111                     	;# 
  3690  0112                     	;# 
  3691  0113                     	;# 
  3692  0114                     	;# 
  3693  0115                     	;# 
  3694  0116                     	;# 
  3695  0117                     	;# 
  3696  0118                     	;# 
  3697  0119                     	;# 
  3698  018C                     	;# 
  3699  018D                     	;# 
  3700  018E                     	;# 
  3701  0197                     	;# 
  3702  0199                     	;# 
  3703  0199                     	;# 
  3704  0199                     	;# 
  3705  019A                     	;# 
  3706  019A                     	;# 
  3707  019A                     	;# 
  3708  019B                     	;# 
  3709  019B                     	;# 
  3710  019B                     	;# 
  3711  019B                     	;# 
  3712  019B                     	;# 
  3713  019C                     	;# 
  3714  019C                     	;# 
  3715  019C                     	;# 
  3716  019D                     	;# 
  3717  019D                     	;# 
  3718  019D                     	;# 
  3719  019E                     	;# 
  3720  019E                     	;# 
  3721  019E                     	;# 
  3722  019F                     	;# 
  3723  019F                     	;# 
  3724  019F                     	;# 
  3725  019F                     	;# 
  3726  019F                     	;# 
  3727  020C                     	;# 
  3728  020D                     	;# 
  3729  020E                     	;# 
  3730  0211                     	;# 
  3731  0211                     	;# 
  3732  0212                     	;# 
  3733  0212                     	;# 
  3734  0213                     	;# 
  3735  0213                     	;# 
  3736  0214                     	;# 
  3737  0214                     	;# 
  3738  0215                     	;# 
  3739  0215                     	;# 
  3740  0215                     	;# 
  3741  0215                     	;# 
  3742  0216                     	;# 
  3743  0216                     	;# 
  3744  0217                     	;# 
  3745  0217                     	;# 
  3746  0219                     	;# 
  3747  021A                     	;# 
  3748  021B                     	;# 
  3749  021C                     	;# 
  3750  021D                     	;# 
  3751  021D                     	;# 
  3752  021E                     	;# 
  3753  021F                     	;# 
  3754  028C                     	;# 
  3755  028D                     	;# 
  3756  028E                     	;# 
  3757  0291                     	;# 
  3758  0291                     	;# 
  3759  0292                     	;# 
  3760  0293                     	;# 
  3761  0294                     	;# 
  3762  0295                     	;# 
  3763  0295                     	;# 
  3764  0296                     	;# 
  3765  0297                     	;# 
  3766  0298                     	;# 
  3767  029F                     	;# 
  3768  030C                     	;# 
  3769  030D                     	;# 
  3770  030E                     	;# 
  3771  0311                     	;# 
  3772  0311                     	;# 
  3773  0312                     	;# 
  3774  0313                     	;# 
  3775  0314                     	;# 
  3776  0315                     	;# 
  3777  0315                     	;# 
  3778  0316                     	;# 
  3779  0317                     	;# 
  3780  0318                     	;# 
  3781  038C                     	;# 
  3782  038D                     	;# 
  3783  038E                     	;# 
  3784  0391                     	;# 
  3785  0392                     	;# 
  3786  0393                     	;# 
  3787  0394                     	;# 
  3788  0395                     	;# 
  3789  0396                     	;# 
  3790  0397                     	;# 
  3791  0398                     	;# 
  3792  0399                     	;# 
  3793  039A                     	;# 
  3794  039C                     	;# 
  3795  039D                     	;# 
  3796  039E                     	;# 
  3797  039F                     	;# 
  3798  0411                     	;# 
  3799  0411                     	;# 
  3800  0412                     	;# 
  3801  0413                     	;# 
  3802  0414                     	;# 
  3803  0415                     	;# 
  3804  0416                     	;# 
  3805  0417                     	;# 
  3806  0418                     	;# 
  3807  0418                     	;# 
  3808  0419                     	;# 
  3809  041A                     	;# 
  3810  041B                     	;# 
  3811  041C                     	;# 
  3812  041D                     	;# 
  3813  041E                     	;# 
  3814  041F                     	;# 
  3815  0498                     	;# 
  3816  0498                     	;# 
  3817  0499                     	;# 
  3818  049A                     	;# 
  3819  049B                     	;# 
  3820  049B                     	;# 
  3821  049C                     	;# 
  3822  049D                     	;# 
  3823  049E                     	;# 
  3824  049F                     	;# 
  3825  0617                     	;# 
  3826  0618                     	;# 
  3827  0619                     	;# 
  3828  0619                     	;# 
  3829  061A                     	;# 
  3830  061B                     	;# 
  3831  061C                     	;# 
  3832  061C                     	;# 
  3833  061F                     	;# 
  3834  0691                     	;# 
  3835  0692                     	;# 
  3836  0693                     	;# 
  3837  0694                     	;# 
  3838  0695                     	;# 
  3839  0696                     	;# 
  3840  0697                     	;# 
  3841  0698                     	;# 
  3842  0699                     	;# 
  3843  0711                     	;# 
  3844  0712                     	;# 
  3845  0713                     	;# 
  3846  0714                     	;# 
  3847  0715                     	;# 
  3848  0716                     	;# 
  3849  0717                     	;# 
  3850  0718                     	;# 
  3851  0719                     	;# 
  3852  0891                     	;# 
  3853  0891                     	;# 
  3854  0891                     	;# 
  3855  0891                     	;# 
  3856  0891                     	;# 
  3857  0891                     	;# 
  3858  0892                     	;# 
  3859  0892                     	;# 
  3860  0892                     	;# 
  3861  0893                     	;# 
  3862  0893                     	;# 
  3863  0893                     	;# 
  3864  0893                     	;# 
  3865  0893                     	;# 
  3866  0893                     	;# 
  3867  0894                     	;# 
  3868  0894                     	;# 
  3869  0894                     	;# 
  3870  0895                     	;# 
  3871  0895                     	;# 
  3872  0895                     	;# 
  3873  0896                     	;# 
  3874  0896                     	;# 
  3875  0896                     	;# 
  3876  089B                     	;# 
  3877  0911                     	;# 
  3878  0912                     	;# 
  3879  0913                     	;# 
  3880  0914                     	;# 
  3881  0915                     	;# 
  3882  0916                     	;# 
  3883  0918                     	;# 
  3884  0919                     	;# 
  3885  091A                     	;# 
  3886  091B                     	;# 
  3887  091C                     	;# 
  3888  091D                     	;# 
  3889  091E                     	;# 
  3890  091F                     	;# 
  3891  0E0F                     	;# 
  3892  0E10                     	;# 
  3893  0E11                     	;# 
  3894  0E12                     	;# 
  3895  0E13                     	;# 
  3896  0E14                     	;# 
  3897  0E15                     	;# 
  3898  0E16                     	;# 
  3899  0E17                     	;# 
  3900  0E18                     	;# 
  3901  0E19                     	;# 
  3902  0E1A                     	;# 
  3903  0E1B                     	;# 
  3904  0E1C                     	;# 
  3905  0E1D                     	;# 
  3906  0E1E                     	;# 
  3907  0E1F                     	;# 
  3908  0E20                     	;# 
  3909  0E21                     	;# 
  3910  0E22                     	;# 
  3911  0E24                     	;# 
  3912  0E25                     	;# 
  3913  0E28                     	;# 
  3914  0E29                     	;# 
  3915  0E2A                     	;# 
  3916  0E2B                     	;# 
  3917  0E2C                     	;# 
  3918  0E2D                     	;# 
  3919  0E2E                     	;# 
  3920  0E2F                     	;# 
  3921  0E90                     	;# 
  3922  0E91                     	;# 
  3923  0E92                     	;# 
  3924  0E94                     	;# 
  3925  0E95                     	;# 
  3926  0E9C                     	;# 
  3927  0E9D                     	;# 
  3928  0E9E                     	;# 
  3929  0E9F                     	;# 
  3930  0EA0                     	;# 
  3931  0EA1                     	;# 
  3932  0EA2                     	;# 
  3933  0EA3                     	;# 
  3934  0EA4                     	;# 
  3935  0EA5                     	;# 
  3936  0EA6                     	;# 
  3937  0EA7                     	;# 
  3938  0F0F                     	;# 
  3939  0F10                     	;# 
  3940  0F11                     	;# 
  3941  0F12                     	;# 
  3942  0F13                     	;# 
  3943  0F14                     	;# 
  3944  0F15                     	;# 
  3945  0F16                     	;# 
  3946  0F17                     	;# 
  3947  0F18                     	;# 
  3948  0F19                     	;# 
  3949  0F1A                     	;# 
  3950  0F1B                     	;# 
  3951  0F1C                     	;# 
  3952  0F1D                     	;# 
  3953  0F1E                     	;# 
  3954  0F1F                     	;# 
  3955  0F20                     	;# 
  3956  0F21                     	;# 
  3957  0F22                     	;# 
  3958  0F23                     	;# 
  3959  0F24                     	;# 
  3960  0F25                     	;# 
  3961  0F26                     	;# 
  3962  0F27                     	;# 
  3963  0F28                     	;# 
  3964  0F29                     	;# 
  3965  0F2A                     	;# 
  3966  0F2B                     	;# 
  3967  0F2C                     	;# 
  3968  0F2D                     	;# 
  3969  0F2E                     	;# 
  3970  0F2F                     	;# 
  3971  0F30                     	;# 
  3972  0F31                     	;# 
  3973  0F32                     	;# 
  3974  0F33                     	;# 
  3975  0F34                     	;# 
  3976  0F35                     	;# 
  3977  0F36                     	;# 
  3978  0F37                     	;# 
  3979  0FE4                     	;# 
  3980  0FE5                     	;# 
  3981  0FE6                     	;# 
  3982  0FE7                     	;# 
  3983  0FE8                     	;# 
  3984  0FE9                     	;# 
  3985  0FEA                     	;# 
  3986  0FEB                     	;# 
  3987  0FED                     	;# 
  3988  0FEE                     	;# 
  3989  0FEF                     	;# 
  3990                           
  3991                           	psect	idataBANK0
  3992  0B58                     __pidataBANK0:	
  3993                           
  3994                           ;initializer for _ki
  3995  0B58  34D7               	retlw	215
  3996  0B59  34A3               	retlw	163
  3997  0B5A  343B               	retlw	59
  3998                           
  3999                           	psect	idataBANK1
  4000  0B69                     __pidataBANK1:	
  4001                           
  4002                           ;initializer for _kp
  4003  0B69  3400               	retlw	0
  4004  0B6A  3480               	retlw	128
  4005  0B6B  343F               	retlw	63
  4006                           
  4007                           ;initializer for _setpoint
  4008  0B6C  34C8               	retlw	200
  4009  0B6D  3400               	retlw	0
  4010                           
  4011                           	psect	stringtext
  4012  1000                     __pstringtext:	
  4013  1000                     _dpowers:	
  4014  1000  3401               	retlw	1
  4015  1001  3400               	retlw	0
  4016  1002  340A               	retlw	10
  4017  1003  3400               	retlw	0
  4018  1004  3464               	retlw	100
  4019  1005  3400               	retlw	0
  4020  1006  34E8               	retlw	232
  4021  1007  3403               	retlw	3
  4022  1008  3410               	retlw	16
  4023  1009  3427               	retlw	39
  4024  100A                     __end_of_dpowers:	
  4025  100A                     STR_1:	
  4026  100A  3425               	retlw	37	;'%'
  4027  100B  3464               	retlw	100	;'d'
  4028  100C  3400               	retlw	0
  4029  100D                     STR_2:	
  4030  100D  343E               	retlw	62	;'>'
  4031  100E  3400               	retlw	0
  4032                           
  4033                           ; #config settings
  4034  0000                     
  4035                           	psect	nvBANK1
  4036  00E2                     __pnvBANK1:	
  4037  00E2                     _eusartTxBufferRemaining:	
  4038  00E2                     	ds	1
  4039  000B                     _INTCONbits	set	11
  4040  0010                     _PIR0bits	set	16
  4041  0011                     _PIR1bits	set	17
  4042  001E                     _PR2	set	30
  4043  0017                     _T0CON0	set	23
  4044  0017                     _T0CON0bits	set	23
  4045  0018                     _T0CON1	set	24
  4046  001F                     _T2CON	set	31
  4047  001F                     _T2CONbits	set	31
  4048  0016                     _TMR0H	set	22
  4049  0015                     _TMR0L	set	21
  4050  001D                     _TMR2	set	29
  4051  005F                     _GIE	set	95
  4052  009F                     _ADACT	set	159
  4053  009D                     _ADCON0	set	157
  4054  009D                     _ADCON0bits	set	157
  4055  009E                     _ADCON1	set	158
  4056  009C                     _ADRESH	set	156
  4057  009B                     _ADRESL	set	155
  4058  0091                     _PIE1bits	set	145
  4059  008C                     _TRISA	set	140
  4060  008D                     _TRISB	set	141
  4061  008E                     _TRISC	set	142
  4062  0097                     _WDTCON	set	151
  4063  010C                     _LATA	set	268
  4064  010D                     _LATB	set	269
  4065  010E                     _LATC	set	270
  4066  018C                     _ANSELA	set	396
  4067  018D                     _ANSELB	set	397
  4068  018E                     _ANSELC	set	398
  4069  019F                     _BAUD1CON	set	415
  4070  0199                     _RC1REG	set	409
  4071  019D                     _RC1STA	set	413
  4072  019D                     _RC1STAbits	set	413
  4073  019C                     _SP1BRGH	set	412
  4074  019B                     _SP1BRGL	set	411
  4075  019A                     _TX1REG	set	410
  4076  019E                     _TX1STA	set	414
  4077  020C                     _WPUA	set	524
  4078  020D                     _WPUB	set	525
  4079  020E                     _WPUC	set	526
  4080  028C                     _ODCONA	set	652
  4081  028D                     _ODCONB	set	653
  4082  028E                     _ODCONC	set	654
  4083  0619                     _PWM5CON	set	1561
  4084  0618                     _PWM5DCH	set	1560
  4085  0617                     _PWM5DCL	set	1559
  4086  061F                     _PWMTMRSbits	set	1567
  4087  0919                     _OSCCON1	set	2329
  4088  091B                     _OSCCON3	set	2331
  4089  091D                     _OSCEN	set	2333
  4090  091F                     _OSCFRQ	set	2335
  4091  091E                     _OSCTUNE	set	2334
  4092  0E0F                     _PPSLOCK	set	3599
  4093  0E0F                     _PPSLOCKbits	set	3599
  4094  0E24                     _RXPPSbits	set	3620
  4095  0E9F                     _RB7PPSbits	set	3743
  4096  0EA1                     _RC1PPSbits	set	3745
  4097                           
  4098                           	psect	cinit
  4099  0032                     start_initialization:	
  4100  0032                     __initialization:	
  4101                           
  4102                           ; Initialize objects allocated to BANK0
  4103  0032  318B  2358  3180   	fcall	__pidataBANK0	;fetch initializer
  4104  0035  00EC               	movwf	__pdataBANK0& (0+127)
  4105  0036  318B  2359  3180   	fcall	__pidataBANK0+1	;fetch initializer
  4106  0039  00ED               	movwf	(__pdataBANK0+1)& (0+127)
  4107  003A  318B  235A  3180   	fcall	__pidataBANK0+2	;fetch initializer
  4108  003D  00EE               	movwf	(__pdataBANK0+2)& (0+127)
  4109                           
  4110                           ; Initialize objects allocated to BANK1
  4111  003E  3069               	movlw	low __pidataBANK1
  4112  003F  0084               	movwf	4
  4113  0040  308B               	movlw	(high __pidataBANK1)| (0+128)
  4114  0041  0085               	movwf	5
  4115  0042  0021               	movlb	1	; select bank1
  4116  0043  0012               	moviw fsr0++
  4117  0044  00D9               	movwf	__pdataBANK1& (0+127)
  4118  0045  0012               	moviw fsr0++
  4119  0046  00DA               	movwf	(__pdataBANK1+1)& (0+127)
  4120  0047  0012               	moviw fsr0++
  4121  0048  00DB               	movwf	(__pdataBANK1+2)& (0+127)
  4122  0049  0012               	moviw fsr0++
  4123  004A  00DC               	movwf	(__pdataBANK1+3)& (0+127)
  4124  004B  0012               	moviw fsr0++
  4125  004C  00DD               	movwf	(__pdataBANK1+4)& (0+127)
  4126                           
  4127                           ; Clear objects allocated to COMMON
  4128  004D  01F8               	clrf	__pbssCOMMON& (0+127)
  4129  004E  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  4130  004F  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  4131                           
  4132                           ; Clear objects allocated to BANK0
  4133  0050  0020               	movlb	0	; select bank0
  4134  0051  01E6               	clrf	__pbssBANK0& (0+127)
  4135  0052  01E7               	clrf	(__pbssBANK0+1)& (0+127)
  4136  0053  01E8               	clrf	(__pbssBANK0+2)& (0+127)
  4137  0054  01E9               	clrf	(__pbssBANK0+3)& (0+127)
  4138  0055  01EA               	clrf	(__pbssBANK0+4)& (0+127)
  4139  0056  01EB               	clrf	(__pbssBANK0+5)& (0+127)
  4140                           
  4141                           ; Clear objects allocated to BANK1
  4142  0057  30A0               	movlw	low __pbssBANK1
  4143  0058  0084               	movwf	4
  4144  0059  3000               	movlw	high __pbssBANK1
  4145  005A  0085               	movwf	5
  4146  005B  3039               	movlw	57
  4147  005C  318B  2380         	fcall	clear_ram0
  4148  005E                     end_of_initialization:	
  4149                           ;End of C runtime variable initialization code
  4150                           
  4151  005E                     __end_of__initialization:	
  4152  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4153  005F  0020               	movlb	0
  4154  0060  3187  2FDB         	ljmp	_main	;jump to C main() function
  4155                           
  4156                           	psect	bssCOMMON
  4157  0078                     __pbssCOMMON:	
  4158  0078                     _eusartRxCount:	
  4159  0078                     	ds	1
  4160  0079                     _eusartTxHead:	
  4161  0079                     	ds	1
  4162  007A                     _eusartTxTail:	
  4163  007A                     	ds	1
  4164                           
  4165                           	psect	bssBANK0
  4166  0066                     __pbssBANK0:	
  4167  0066                     _integral:	
  4168  0066                     	ds	3
  4169  0069                     _command:	
  4170  0069                     	ds	1
  4171  006A                     _eusartRxHead:	
  4172  006A                     	ds	1
  4173  006B                     _eusartRxTail:	
  4174  006B                     	ds	1
  4175                           
  4176                           	psect	dataBANK0
  4177  006C                     __pdataBANK0:	
  4178  006C                     _ki:	
  4179  006C                     	ds	3
  4180                           
  4181                           	psect	bssBANK1
  4182  00A0                     __pbssBANK1:	
  4183  00A0                     _data:	
  4184  00A0                     	ds	8
  4185  00A8                     _eusartRxBuffer:	
  4186  00A8                     	ds	8
  4187  00B0                     _eusartTxBuffer:	
  4188  00B0                     	ds	8
  4189  00B8                     UART@ki:	
  4190  00B8                     	ds	3
  4191  00BB                     UART@kp:	
  4192  00BB                     	ds	3
  4193  00BE                     UART@sensorHeight:	
  4194  00BE                     	ds	2
  4195  00C0                     UART@setpoint:	
  4196  00C0                     	ds	2
  4197  00C2                     _ADC_result:	
  4198  00C2                     	ds	2
  4199  00C4                     _TMR0_InterruptHandler:	
  4200  00C4                     	ds	2
  4201  00C6                     _TMR2_InterruptHandler:	
  4202  00C6                     	ds	2
  4203  00C8                     _dutycycle:	
  4204  00C8                     	ds	2
  4205  00CA                     _error:	
  4206  00CA                     	ds	2
  4207  00CC                     _index:	
  4208  00CC                     	ds	2
  4209  00CE                     _printCycle:	
  4210  00CE                     	ds	2
  4211  00D0                     _sensorHeight:	
  4212  00D0                     	ds	2
  4213  00D2                     _value:	
  4214  00D2                     	ds	7
  4215                           
  4216                           	psect	dataBANK1
  4217  00D9                     __pdataBANK1:	
  4218  00D9                     _kp:	
  4219  00D9                     	ds	3
  4220  00DC                     _setpoint:	
  4221  00DC                     	ds	2
  4222                           
  4223                           	psect	clrtext
  4224  0B80                     clear_ram0:	
  4225                           ;	Called with FSR0 containing the base address, and
  4226                           ;	WREG with the size to clear
  4227                           
  4228  0B80  0064               	clrwdt	;clear the watchdog before getting into this loop
  4229  0B81                     clrloop0:	
  4230  0B81  0180               	clrf	0	;clear RAM location pointed to by FSR
  4231  0B82  3101               	addfsr 0,1
  4232  0B83  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4233  0B84  2B81               	goto	clrloop0	;have we reached the end yet?
  4234  0B85  3400               	retlw	0	;all done for this memory range, return
  4235                           
  4236                           	psect	cstackBANK1
  4237  00DE                     __pcstackBANK1:	
  4238  00DE                     Java@i:	
  4239                           
  4240                           ; 2 bytes @ 0x0
  4241  00DE                     	ds	2
  4242  00E0                     main@threshold:	
  4243                           
  4244                           ; 2 bytes @ 0x2
  4245  00E0                     	ds	2
  4246                           
  4247                           	psect	cstackCOMMON
  4248  0070                     __pcstackCOMMON:	
  4249  0070                     ?_isspace:	
  4250  0070                     ?_isdigit:	
  4251                           ; 1 bit 
  4252                           
  4253  0070                     ?_TMR2_StartTimer:	
  4254                           ; 1 bit 
  4255                           
  4256  0070                     ?_TMR0_StartTimer:	
  4257                           ; 1 bytes @ 0x0
  4258                           
  4259  0070                     ?_OSCILLATOR_Initialize:	
  4260                           ; 1 bytes @ 0x0
  4261                           
  4262  0070                     ?_WDT_Initialize:	
  4263                           ; 1 bytes @ 0x0
  4264                           
  4265  0070                     ?_PWM5_Initialize:	
  4266                           ; 1 bytes @ 0x0
  4267                           
  4268  0070                     ?_PI:	
  4269                           ; 1 bytes @ 0x0
  4270                           
  4271  0070                     ?_Java:	
  4272                           ; 1 bytes @ 0x0
  4273                           
  4274  0070                     ?_toupper:	
  4275                           ; 1 bytes @ 0x0
  4276                           
  4277  0070                     ?_TMR2_Initialize:	
  4278                           ; 1 bytes @ 0x0
  4279                           
  4280  0070                     ?_EUSART_Initialize:	
  4281                           ; 1 bytes @ 0x0
  4282                           
  4283  0070                     ?_EUSART_Read:	
  4284                           ; 1 bytes @ 0x0
  4285                           
  4286  0070                     ?_EUSART_Write:	
  4287                           ; 1 bytes @ 0x0
  4288                           
  4289  0070                     ?_putch:	
  4290                           ; 1 bytes @ 0x0
  4291                           
  4292  0070                     ?_EUSART_Transmit_ISR:	
  4293                           ; 1 bytes @ 0x0
  4294                           
  4295  0070                     ??_EUSART_Transmit_ISR:	
  4296                           ; 1 bytes @ 0x0
  4297                           
  4298  0070                     ?_EUSART_Receive_ISR:	
  4299                           ; 1 bytes @ 0x0
  4300                           
  4301  0070                     ??_EUSART_Receive_ISR:	
  4302                           ; 1 bytes @ 0x0
  4303                           
  4304  0070                     ?_TMR0_Initialize:	
  4305                           ; 1 bytes @ 0x0
  4306                           
  4307  0070                     ?_TMR0_HasOverflowOccured:	
  4308                           ; 1 bytes @ 0x0
  4309                           
  4310  0070                     ?_PIN_MANAGER_Initialize:	
  4311                           ; 1 bytes @ 0x0
  4312                           
  4313  0070                     ?_ADC_Initialize:	
  4314                           ; 1 bytes @ 0x0
  4315                           
  4316  0070                     ?_ADC_SelectChannel:	
  4317                           ; 1 bytes @ 0x0
  4318                           
  4319  0070                     ?_ADC_StartConversion:	
  4320                           ; 1 bytes @ 0x0
  4321                           
  4322  0070                     ?_ADC_ISR:	
  4323                           ; 1 bytes @ 0x0
  4324                           
  4325  0070                     ??_ADC_ISR:	
  4326                           ; 1 bytes @ 0x0
  4327                           
  4328  0070                     ?_SYSTEM_Initialize:	
  4329                           ; 1 bytes @ 0x0
  4330                           
  4331  0070                     ?_INTERRUPT_InterruptManager:	
  4332                           ; 1 bytes @ 0x0
  4333                           
  4334  0070                     ?_main:	
  4335                           ; 1 bytes @ 0x0
  4336                           
  4337                           
  4338                           ; 1 bytes @ 0x0
  4339  0070                     	ds	2
  4340  0072                     ??_INTERRUPT_InterruptManager:	
  4341                           
  4342                           ; 1 bytes @ 0x2
  4343  0072                     	ds	1
  4344  0073                     ??_TMR2_StartTimer:	
  4345  0073                     ??_TMR0_StartTimer:	
  4346                           ; 1 bytes @ 0x3
  4347                           
  4348  0073                     ??_OSCILLATOR_Initialize:	
  4349                           ; 1 bytes @ 0x3
  4350                           
  4351  0073                     ??_WDT_Initialize:	
  4352                           ; 1 bytes @ 0x3
  4353                           
  4354  0073                     ??_PWM5_Initialize:	
  4355                           ; 1 bytes @ 0x3
  4356                           
  4357  0073                     ??_toupper:	
  4358                           ; 1 bytes @ 0x3
  4359                           
  4360  0073                     ??_isspace:	
  4361                           ; 1 bytes @ 0x3
  4362                           
  4363  0073                     ??_isdigit:	
  4364                           ; 1 bytes @ 0x3
  4365                           
  4366  0073                     ??_TMR2_Initialize:	
  4367                           ; 1 bytes @ 0x3
  4368                           
  4369  0073                     ??_EUSART_Initialize:	
  4370                           ; 1 bytes @ 0x3
  4371                           
  4372  0073                     ??_EUSART_Read:	
  4373                           ; 1 bytes @ 0x3
  4374                           
  4375  0073                     ??_EUSART_Write:	
  4376                           ; 1 bytes @ 0x3
  4377                           
  4378  0073                     ??_TMR0_Initialize:	
  4379                           ; 1 bytes @ 0x3
  4380                           
  4381  0073                     ??_TMR0_HasOverflowOccured:	
  4382                           ; 1 bytes @ 0x3
  4383                           
  4384  0073                     ??_PIN_MANAGER_Initialize:	
  4385                           ; 1 bytes @ 0x3
  4386                           
  4387  0073                     ??_ADC_Initialize:	
  4388                           ; 1 bytes @ 0x3
  4389                           
  4390  0073                     ??_ADC_SelectChannel:	
  4391                           ; 1 bytes @ 0x3
  4392                           
  4393  0073                     ??_ADC_StartConversion:	
  4394                           ; 1 bytes @ 0x3
  4395                           
  4396  0073                     ?_PWM5_LoadDutyValue:	
  4397                           ; 1 bytes @ 0x3
  4398                           
  4399  0073                     ?_PI_SetSetpoint:	
  4400                           ; 1 bytes @ 0x3
  4401                           
  4402  0073                     ?_PI_SetKp:	
  4403                           ; 1 bytes @ 0x3
  4404                           
  4405  0073                     ?_PI_SetKi:	
  4406                           ; 1 bytes @ 0x3
  4407                           
  4408  0073                     ??___lmul:	
  4409                           ; 1 bytes @ 0x3
  4410                           
  4411  0073                     ?___bmul:	
  4412                           ; 1 bytes @ 0x3
  4413                           
  4414  0073                     ?_ADC_GetConversion:	
  4415                           ; 1 bytes @ 0x3
  4416                           
  4417  0073                     ?_ADC_GetResult:	
  4418                           ; 2 bytes @ 0x3
  4419                           
  4420  0073                     ?_PI_GetSensorHeight:	
  4421                           ; 2 bytes @ 0x3
  4422                           
  4423  0073                     ?___wmul:	
  4424                           ; 2 bytes @ 0x3
  4425                           
  4426  0073                     ?___lwdiv:	
  4427                           ; 2 bytes @ 0x3
  4428                           
  4429  0073                     ?___ftpack:	
  4430                           ; 2 bytes @ 0x3
  4431                           
  4432  0073                     ?___ftneg:	
  4433                           ; 3 bytes @ 0x3
  4434                           
  4435  0073                     PIN_MANAGER_Initialize@state:	
  4436                           ; 3 bytes @ 0x3
  4437                           
  4438  0073                     ___bmul@multiplicand:	
  4439                           ; 1 bytes @ 0x3
  4440                           
  4441  0073                     _isdigit$968:	
  4442                           ; 1 bytes @ 0x3
  4443                           
  4444  0073                     _isspace$971:	
  4445                           ; 1 bytes @ 0x3
  4446                           
  4447  0073                     PWM5_LoadDutyValue@dutyValue:	
  4448                           ; 1 bytes @ 0x3
  4449                           
  4450  0073                     PI_SetSetpoint@value:	
  4451                           ; 2 bytes @ 0x3
  4452                           
  4453  0073                     ___wmul@multiplier:	
  4454                           ; 2 bytes @ 0x3
  4455                           
  4456  0073                     ___lwdiv@divisor:	
  4457                           ; 2 bytes @ 0x3
  4458                           
  4459  0073                     PI_SetKp@value:	
  4460                           ; 2 bytes @ 0x3
  4461                           
  4462  0073                     PI_SetKi@value:	
  4463                           ; 3 bytes @ 0x3
  4464                           
  4465  0073                     ___ftpack@arg:	
  4466                           ; 3 bytes @ 0x3
  4467                           
  4468  0073                     ___ftneg@f1:	
  4469                           ; 3 bytes @ 0x3
  4470                           
  4471  0073                     ___lmul@product:	
  4472                           ; 3 bytes @ 0x3
  4473                           
  4474                           
  4475                           ; 4 bytes @ 0x3
  4476  0073                     	ds	1
  4477  0074                     ??_SYSTEM_Initialize:	
  4478  0074                     ??___bmul:	
  4479                           ; 1 bytes @ 0x4
  4480                           
  4481  0074                     EUSART_Read@readValue:	
  4482                           ; 1 bytes @ 0x4
  4483                           
  4484  0074                     EUSART_Write@txData:	
  4485                           ; 1 bytes @ 0x4
  4486                           
  4487  0074                     ADC_SelectChannel@channel:	
  4488                           ; 1 bytes @ 0x4
  4489                           
  4490  0074                     isdigit@c:	
  4491                           ; 1 bytes @ 0x4
  4492                           
  4493  0074                     isspace@c:	
  4494                           ; 1 bytes @ 0x4
  4495                           
  4496  0074                     toupper@c:	
  4497                           ; 1 bytes @ 0x4
  4498                           
  4499                           
  4500                           ; 1 bytes @ 0x4
  4501  0074                     	ds	1
  4502  0075                     ??_putch:	
  4503  0075                     ??_ADC_GetConversion:	
  4504                           ; 1 bytes @ 0x5
  4505                           
  4506  0075                     ??_ADC_GetResult:	
  4507                           ; 1 bytes @ 0x5
  4508                           
  4509  0075                     ?_ADC_Start:	
  4510                           ; 1 bytes @ 0x5
  4511                           
  4512  0075                     ??_PWM5_LoadDutyValue:	
  4513                           ; 1 bytes @ 0x5
  4514                           
  4515  0075                     ??_PI_GetSensorHeight:	
  4516                           ; 1 bytes @ 0x5
  4517                           
  4518  0075                     ??_PI_SetSetpoint:	
  4519                           ; 1 bytes @ 0x5
  4520                           
  4521  0075                     putch@txData:	
  4522                           ; 1 bytes @ 0x5
  4523                           
  4524  0075                     ___bmul@product:	
  4525                           ; 1 bytes @ 0x5
  4526                           
  4527  0075                     ADC_Start@reference:	
  4528                           ; 1 bytes @ 0x5
  4529                           
  4530  0075                     ___wmul@multiplicand:	
  4531                           ; 2 bytes @ 0x5
  4532                           
  4533  0075                     ___lwdiv@dividend:	
  4534                           ; 2 bytes @ 0x5
  4535                           
  4536                           
  4537                           ; 2 bytes @ 0x5
  4538  0075                     	ds	1
  4539  0076                     ??_PI_SetKp:	
  4540  0076                     ??_PI_SetKi:	
  4541                           ; 1 bytes @ 0x6
  4542                           
  4543  0076                     ??___ftneg:	
  4544                           ; 1 bytes @ 0x6
  4545                           
  4546  0076                     ADC_GetConversion@channel:	
  4547                           ; 1 bytes @ 0x6
  4548                           
  4549  0076                     ___bmul@multiplier:	
  4550                           ; 1 bytes @ 0x6
  4551                           
  4552  0076                     ___ftpack@exp:	
  4553                           ; 1 bytes @ 0x6
  4554                           
  4555                           
  4556                           ; 1 bytes @ 0x6
  4557  0076                     	ds	1
  4558  0077                     ??_ADC_Start:	
  4559  0077                     ??___wmul:	
  4560                           ; 1 bytes @ 0x7
  4561                           
  4562  0077                     ??___lwdiv:	
  4563                           ; 1 bytes @ 0x7
  4564                           
  4565  0077                     ___ftpack@sign:	
  4566                           ; 1 bytes @ 0x7
  4567                           
  4568                           
  4569                           ; 1 bytes @ 0x7
  4570  0077                     	ds	1
  4571  0078                     ??_atof:	
  4572  0078                     ??_main:	
  4573                           ; 1 bytes @ 0x8
  4574                           
  4575                           
  4576                           	psect	cstackBANK0
  4577  0020                     __pcstackBANK0:	
  4578                           ; 1 bytes @ 0x8
  4579                           
  4580  0020                     ??___ftpack:	
  4581  0020                     ?___lmul:	
  4582                           ; 1 bytes @ 0x0
  4583                           
  4584  0020                     ___lwdiv@counter:	
  4585                           ; 4 bytes @ 0x0
  4586                           
  4587  0020                     ___wmul@product:	
  4588                           ; 1 bytes @ 0x0
  4589                           
  4590  0020                     ___lmul@multiplier:	
  4591                           ; 2 bytes @ 0x0
  4592                           
  4593                           
  4594                           ; 4 bytes @ 0x0
  4595  0020                     	ds	1
  4596  0021                     ___lwdiv@quotient:	
  4597                           
  4598                           ; 2 bytes @ 0x1
  4599  0021                     	ds	1
  4600  0022                     ?_atoi:	
  4601                           
  4602                           ; 2 bytes @ 0x2
  4603  0022                     	ds	1
  4604  0023                     ?___lwmod:	
  4605  0023                     ?___altoft:	
  4606                           ; 2 bytes @ 0x3
  4607                           
  4608  0023                     ?___awtoft:	
  4609                           ; 3 bytes @ 0x3
  4610                           
  4611  0023                     ?___ftdiv:	
  4612                           ; 3 bytes @ 0x3
  4613                           
  4614  0023                     ___awtoft@c:	
  4615                           ; 3 bytes @ 0x3
  4616                           
  4617  0023                     ___lwmod@divisor:	
  4618                           ; 2 bytes @ 0x3
  4619                           
  4620  0023                     ___ftdiv@f2:	
  4621                           ; 2 bytes @ 0x3
  4622                           
  4623  0023                     ___altoft@c:	
  4624                           ; 3 bytes @ 0x3
  4625                           
  4626                           
  4627                           ; 4 bytes @ 0x3
  4628  0023                     	ds	1
  4629  0024                     ??_atoi:	
  4630  0024                     ___lmul@multiplicand:	
  4631                           ; 1 bytes @ 0x4
  4632                           
  4633                           
  4634                           ; 4 bytes @ 0x4
  4635  0024                     	ds	1
  4636  0025                     ___lwmod@dividend:	
  4637                           
  4638                           ; 2 bytes @ 0x5
  4639  0025                     	ds	1
  4640  0026                     ??___awtoft:	
  4641  0026                     atoi@sign:	
  4642                           ; 1 bytes @ 0x6
  4643                           
  4644  0026                     ___ftdiv@f1:	
  4645                           ; 1 bytes @ 0x6
  4646                           
  4647                           
  4648                           ; 3 bytes @ 0x6
  4649  0026                     	ds	1
  4650  0027                     ??___altoft:	
  4651  0027                     ??___lwmod:	
  4652                           ; 1 bytes @ 0x7
  4653                           
  4654  0027                     atoi@a:	
  4655                           ; 1 bytes @ 0x7
  4656                           
  4657                           
  4658                           ; 2 bytes @ 0x7
  4659  0027                     	ds	1
  4660  0028                     ___awtoft@sign:	
  4661  0028                     ___lwmod@counter:	
  4662                           ; 1 bytes @ 0x8
  4663                           
  4664                           
  4665                           ; 1 bytes @ 0x8
  4666  0028                     	ds	1
  4667  0029                     ??___ftdiv:	
  4668  0029                     ?_printf:	
  4669                           ; 1 bytes @ 0x9
  4670                           
  4671  0029                     ?___ftmul:	
  4672                           ; 2 bytes @ 0x9
  4673                           
  4674  0029                     ___altoft@exp:	
  4675                           ; 3 bytes @ 0x9
  4676                           
  4677  0029                     atoi@s:	
  4678                           ; 1 bytes @ 0x9
  4679                           
  4680  0029                     printf@f:	
  4681                           ; 1 bytes @ 0x9
  4682                           
  4683  0029                     ___ftmul@f1:	
  4684                           ; 2 bytes @ 0x9
  4685                           
  4686                           
  4687                           ; 3 bytes @ 0x9
  4688  0029                     	ds	1
  4689  002A                     ___altoft@sign:	
  4690                           
  4691                           ; 1 bytes @ 0xA
  4692  002A                     	ds	2
  4693  002C                     ___ftmul@f2:	
  4694                           
  4695                           ; 3 bytes @ 0xC
  4696  002C                     	ds	1
  4697  002D                     ??_printf:	
  4698  002D                     ___ftdiv@cntr:	
  4699                           ; 1 bytes @ 0xD
  4700                           
  4701                           
  4702                           ; 1 bytes @ 0xD
  4703  002D                     	ds	1
  4704  002E                     ___ftdiv@f3:	
  4705                           
  4706                           ; 3 bytes @ 0xE
  4707  002E                     	ds	1
  4708  002F                     ??___ftmul:	
  4709                           
  4710                           ; 1 bytes @ 0xF
  4711  002F                     	ds	2
  4712  0031                     printf@ap:	
  4713  0031                     ___ftdiv@exp:	
  4714                           ; 1 bytes @ 0x11
  4715                           
  4716                           
  4717                           ; 1 bytes @ 0x11
  4718  0031                     	ds	1
  4719  0032                     printf@flag:	
  4720  0032                     ___ftdiv@sign:	
  4721                           ; 1 bytes @ 0x12
  4722                           
  4723                           
  4724                           ; 1 bytes @ 0x12
  4725  0032                     	ds	1
  4726  0033                     printf@prec:	
  4727  0033                     ___ftmul@exp:	
  4728                           ; 1 bytes @ 0x13
  4729                           
  4730                           
  4731                           ; 1 bytes @ 0x13
  4732  0033                     	ds	1
  4733  0034                     printf@val:	
  4734  0034                     ___ftmul@f3_as_product:	
  4735                           ; 2 bytes @ 0x14
  4736                           
  4737                           
  4738                           ; 3 bytes @ 0x14
  4739  0034                     	ds	2
  4740  0036                     printf@c:	
  4741                           
  4742                           ; 1 bytes @ 0x16
  4743  0036                     	ds	1
  4744  0037                     ___ftmul@cntr:	
  4745                           
  4746                           ; 1 bytes @ 0x17
  4747  0037                     	ds	1
  4748  0038                     ___ftmul@sign:	
  4749                           
  4750                           ; 1 bytes @ 0x18
  4751  0038                     	ds	1
  4752  0039                     ?___ftge:	
  4753  0039                     ?___ftadd:	
  4754                           ; 1 bit 
  4755                           
  4756  0039                     ___ftadd@f1:	
  4757                           ; 3 bytes @ 0x19
  4758                           
  4759  0039                     ___ftge@ff1:	
  4760                           ; 3 bytes @ 0x19
  4761                           
  4762                           
  4763                           ; 3 bytes @ 0x19
  4764  0039                     	ds	3
  4765  003C                     ___ftadd@f2:	
  4766  003C                     ___ftge@ff2:	
  4767                           ; 3 bytes @ 0x1C
  4768                           
  4769                           
  4770                           ; 3 bytes @ 0x1C
  4771  003C                     	ds	3
  4772  003F                     ??___ftadd:	
  4773  003F                     ??___ftge:	
  4774                           ; 1 bytes @ 0x1F
  4775                           
  4776                           
  4777                           ; 1 bytes @ 0x1F
  4778  003F                     	ds	3
  4779  0042                     ?_strtod:	
  4780  0042                     strtod@res:	
  4781                           ; 3 bytes @ 0x22
  4782                           
  4783                           
  4784                           ; 1 bytes @ 0x22
  4785  0042                     	ds	1
  4786  0043                     ___ftadd@sign:	
  4787                           
  4788                           ; 1 bytes @ 0x23
  4789  0043                     	ds	1
  4790  0044                     ___ftadd@exp2:	
  4791                           
  4792                           ; 1 bytes @ 0x24
  4793  0044                     	ds	1
  4794  0045                     ??_strtod:	
  4795  0045                     ___ftadd@exp1:	
  4796                           ; 1 bytes @ 0x25
  4797                           
  4798                           
  4799                           ; 1 bytes @ 0x25
  4800  0045                     	ds	1
  4801  0046                     ?___fttol:	
  4802  0046                     ___fttol@f1:	
  4803                           ; 4 bytes @ 0x26
  4804                           
  4805                           
  4806                           ; 3 bytes @ 0x26
  4807  0046                     	ds	3
  4808  0049                     _strtod$893:	
  4809                           
  4810                           ; 3 bytes @ 0x29
  4811  0049                     	ds	1
  4812  004A                     ??___fttol:	
  4813                           
  4814                           ; 1 bytes @ 0x2A
  4815  004A                     	ds	2
  4816  004C                     _strtod$894:	
  4817                           
  4818                           ; 3 bytes @ 0x2C
  4819  004C                     	ds	2
  4820  004E                     ___fttol@sign1:	
  4821                           
  4822                           ; 1 bytes @ 0x2E
  4823  004E                     	ds	1
  4824  004F                     _strtod$895:	
  4825  004F                     ___fttol@lval:	
  4826                           ; 3 bytes @ 0x2F
  4827                           
  4828                           
  4829                           ; 4 bytes @ 0x2F
  4830  004F                     	ds	3
  4831  0052                     _strtod$896:	
  4832                           
  4833                           ; 3 bytes @ 0x32
  4834  0052                     	ds	1
  4835  0053                     ___fttol@exp1:	
  4836                           
  4837                           ; 1 bytes @ 0x33
  4838  0053                     	ds	1
  4839  0054                     ??_PI:	
  4840                           
  4841                           ; 1 bytes @ 0x34
  4842  0054                     	ds	1
  4843  0055                     _strtod$892:	
  4844                           
  4845                           ; 2 bytes @ 0x35
  4846  0055                     	ds	1
  4847  0056                     _PI$1265:	
  4848                           
  4849                           ; 3 bytes @ 0x36
  4850  0056                     	ds	1
  4851  0057                     strtod@eexp:	
  4852                           
  4853                           ; 1 bytes @ 0x37
  4854  0057                     	ds	1
  4855  0058                     strtod@flags:	
  4856                           
  4857                           ; 1 bytes @ 0x38
  4858  0058                     	ds	1
  4859  0059                     strtod@expon:	
  4860                           
  4861                           ; 1 bytes @ 0x39
  4862  0059                     	ds	1
  4863  005A                     strtod@_u:	
  4864                           
  4865                           ; 4 bytes @ 0x3A
  4866  005A                     	ds	4
  4867  005E                     strtod@s:	
  4868                           
  4869                           ; 1 bytes @ 0x3E
  4870  005E                     	ds	1
  4871  005F                     ?_atof:	
  4872                           
  4873                           ; 3 bytes @ 0x3F
  4874  005F                     	ds	4
  4875  0063                     atof@s:	
  4876                           
  4877                           ; 1 bytes @ 0x43
  4878  0063                     	ds	1
  4879  0064                     ??_Java:	
  4880                           
  4881                           ; 1 bytes @ 0x44
  4882  0064                     	ds	2
  4883                           
  4884                           	psect	maintext
  4885  07DB                     __pmaintext:	
  4886 ;;
  4887 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4888 ;;
  4889 ;; *************** function _main *****************
  4890 ;; Defined at:
  4891 ;;		line 25 in file "main.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  threshold       2    2[BANK1 ] int 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : B1F/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4906 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;Total ram usage:        2 bytes
  4910 ;; Hardware stack levels required when called:    7
  4911 ;; This function calls:
  4912 ;;		_ADC_GetConversion
  4913 ;;		_ADC_Start
  4914 ;;		_Java
  4915 ;;		_PI
  4916 ;;		_SYSTEM_Initialize
  4917 ;;		_TMR0_HasOverflowOccured
  4918 ;;		_TMR0_Initialize
  4919 ;; This function is called by:
  4920 ;;		Startup code after reset
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           
  4925                           ;psect for function _main
  4926  07DB                     _main:	
  4927                           
  4928                           ;main.c: 27: SYSTEM_Initialize();
  4929                           
  4930                           ;incstack = 0
  4931                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4932  07DB  318C  245B  3187   	fcall	_SYSTEM_Initialize
  4933                           
  4934                           ;main.c: 33: (INTCONbits.GIE = 1);
  4935  07DE  178B               	bsf	11,7	;volatile
  4936                           
  4937                           ;main.c: 36: (INTCONbits.PEIE = 1);
  4938  07DF  170B               	bsf	11,6	;volatile
  4939                           
  4940                           ;main.c: 48: int threshold = ADC_GetConversion(Potentiometer);
  4941  07E0  3010               	movlw	16
  4942  07E1  318C  2473  3187   	fcall	_ADC_GetConversion
  4943  07E4  0874               	movf	?_ADC_GetConversion+1,w
  4944  07E5  0021               	movlb	1	; select bank1
  4945  07E6  00E1               	movwf	(main@threshold+1)^(0+128)
  4946  07E7  0873               	movf	?_ADC_GetConversion,w
  4947  07E8  00E0               	movwf	main@threshold^(0+128)
  4948                           
  4949                           ;main.c: 51: ADC_Start(threshold);
  4950  07E9  0861               	movf	(main@threshold+1)^(0+128),w
  4951  07EA  00F6               	movwf	ADC_Start@reference+1
  4952  07EB  0860               	movf	main@threshold^(0+128),w
  4953  07EC  00F5               	movwf	ADC_Start@reference
  4954  07ED  318B  23EA  3187   	fcall	_ADC_Start
  4955  07F0                     l336:	
  4956                           ;main.c: 53: while (1) {
  4957                           
  4958                           
  4959                           ;main.c: 55: if (TMR0_HasOverflowOccured()) {
  4960  07F0  318B  2364  3187   	fcall	_TMR0_HasOverflowOccured
  4961  07F3  3A00               	xorlw	0
  4962  07F4  1903               	skipnz
  4963  07F5  2FF0               	goto	l336
  4964                           
  4965                           ;main.c: 56: TMR0_Initialize();
  4966  07F6  318B  23C6  3187   	fcall	_TMR0_Initialize
  4967                           
  4968                           ;main.c: 58: PI();
  4969  07F9  3182  22C4  3187   	fcall	_PI
  4970                           
  4971                           ;main.c: 59: Java();
  4972  07FC  3184  24DC  3187   	fcall	_Java
  4973  07FF  2FF0               	goto	l336
  4974  0800                     __end_of_main:	
  4975                           
  4976                           	psect	text1
  4977  0B64                     __ptext1:	
  4978 ;; *************** function _TMR0_HasOverflowOccured *****************
  4979 ;; Defined at:
  4980 ;;		line 117 in file "mcc_generated_files/tmr0.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      unsigned char 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    2
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_main
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           
  5009                           ;psect for function _TMR0_HasOverflowOccured
  5010  0B64                     _TMR0_HasOverflowOccured:	
  5011                           
  5012                           ;tmr0.c: 120: return(PIR0bits.TMR0IF);
  5013                           
  5014                           ;incstack = 0
  5015                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
  5016  0B64  0020               	movlb	0	; select bank0
  5017  0B65  0E10               	swapf	16,w	;volatile
  5018  0B66  0C89               	rrf	9,f
  5019  0B67  3901               	andlw	1
  5020  0B68  0008               	return
  5021  0B69                     __end_of_TMR0_HasOverflowOccured:	
  5022                           
  5023                           	psect	text2
  5024  0C5B                     __ptext2:	
  5025 ;; *************** function _SYSTEM_Initialize *****************
  5026 ;; Defined at:
  5027 ;;		line 76 in file "mcc_generated_files/mcc.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;Total ram usage:        0 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    4
  5048 ;; This function calls:
  5049 ;;		_ADC_Initialize
  5050 ;;		_EUSART_Initialize
  5051 ;;		_OSCILLATOR_Initialize
  5052 ;;		_PIN_MANAGER_Initialize
  5053 ;;		_PWM5_Initialize
  5054 ;;		_TMR0_Initialize
  5055 ;;		_TMR2_Initialize
  5056 ;;		_WDT_Initialize
  5057 ;; This function is called by:
  5058 ;;		_main
  5059 ;; This function uses a non-reentrant model
  5060 ;;
  5061                           
  5062                           
  5063                           ;psect for function _SYSTEM_Initialize
  5064  0C5B                     _SYSTEM_Initialize:	
  5065                           
  5066                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  5067                           
  5068                           ;incstack = 0
  5069                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5070  0C5B  318E  2667  318C   	fcall	_PIN_MANAGER_Initialize
  5071                           
  5072                           ;mcc.c: 80: OSCILLATOR_Initialize();
  5073  0C5E  318B  239E  318C   	fcall	_OSCILLATOR_Initialize
  5074                           
  5075                           ;mcc.c: 81: WDT_Initialize();
  5076  0C61  318B  235B  318C   	fcall	_WDT_Initialize
  5077                           
  5078                           ;mcc.c: 82: ADC_Initialize();
  5079  0C64  318B  23BB  318C   	fcall	_ADC_Initialize
  5080                           
  5081                           ;mcc.c: 83: PWM5_Initialize();
  5082  0C67  318B  23D1  318C   	fcall	_PWM5_Initialize
  5083                           
  5084                           ;mcc.c: 84: TMR2_Initialize();
  5085  0C6A  318B  23A6  318C   	fcall	_TMR2_Initialize
  5086                           
  5087                           ;mcc.c: 85: TMR0_Initialize();
  5088  0C6D  318B  23C6  318C   	fcall	_TMR0_Initialize
  5089                           
  5090                           ;mcc.c: 86: EUSART_Initialize();
  5091  0C70  318C  24DF         	fcall	_EUSART_Initialize
  5092  0C72  0008               	return
  5093  0C73                     __end_of_SYSTEM_Initialize:	
  5094                           
  5095                           	psect	text3
  5096  0B5B                     __ptext3:	
  5097 ;; *************** function _WDT_Initialize *****************
  5098 ;; Defined at:
  5099 ;;		line 105 in file "mcc_generated_files/mcc.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;		None
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;		None
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  1    wreg      void 
  5106 ;; Registers used:
  5107 ;;		wreg
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;Total ram usage:        0 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; Hardware stack levels required when called:    2
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_SYSTEM_Initialize
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           
  5128                           ;psect for function _WDT_Initialize
  5129  0B5B                     _WDT_Initialize:	
  5130                           
  5131                           ;mcc.c: 108: WDTCON = 0x20;
  5132                           
  5133                           ;incstack = 0
  5134                           ; Regs used in _WDT_Initialize: [wreg]
  5135  0B5B  3020               	movlw	32
  5136  0B5C  0021               	movlb	1	; select bank1
  5137  0B5D  0097               	movwf	23	;volatile
  5138  0B5E  0008               	return
  5139  0B5F                     __end_of_WDT_Initialize:	
  5140                           
  5141                           	psect	text4
  5142  0BC6                     __ptext4:	
  5143 ;; *************** function _TMR0_Initialize *****************
  5144 ;; Defined at:
  5145 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;		None
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;		None
  5150 ;; Return value:  Size  Location     Type
  5151 ;;                  1    wreg      void 
  5152 ;; Registers used:
  5153 ;;		wreg, status,2, status,0, pclath, cstack
  5154 ;; Tracked objects:
  5155 ;;		On entry : 0/0
  5156 ;;		On exit  : 0/0
  5157 ;;		Unchanged: 0/0
  5158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;Total ram usage:        0 bytes
  5164 ;; Hardware stack levels used:    1
  5165 ;; Hardware stack levels required when called:    3
  5166 ;; This function calls:
  5167 ;;		_TMR0_StartTimer
  5168 ;; This function is called by:
  5169 ;;		_SYSTEM_Initialize
  5170 ;;		_main
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           
  5175                           ;psect for function _TMR0_Initialize
  5176  0BC6                     _TMR0_Initialize:	
  5177                           
  5178                           ;tmr0.c: 65: T0CON0 = 0x00;
  5179                           
  5180                           ;incstack = 0
  5181                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5182  0BC6  0020               	movlb	0	; select bank0
  5183  0BC7  0197               	clrf	23	;volatile
  5184                           
  5185                           ;tmr0.c: 68: T0CON1 = 0x83;
  5186  0BC8  3083               	movlw	131
  5187  0BC9  0098               	movwf	24	;volatile
  5188                           
  5189                           ;tmr0.c: 71: TMR0H = 0x26;
  5190  0BCA  3026               	movlw	38
  5191  0BCB  0096               	movwf	22	;volatile
  5192                           
  5193                           ;tmr0.c: 74: TMR0L = 0x00;
  5194  0BCC  0195               	clrf	21	;volatile
  5195                           
  5196                           ;tmr0.c: 78: PIR0bits.TMR0IF = 0;
  5197  0BCD  1290               	bcf	16,5	;volatile
  5198                           
  5199                           ;tmr0.c: 81: TMR0_StartTimer();
  5200  0BCE  318B  2355         	fcall	_TMR0_StartTimer
  5201  0BD0  0008               	return
  5202  0BD1                     __end_of_TMR0_Initialize:	
  5203                           
  5204                           	psect	text5
  5205  0B55                     __ptext5:	
  5206 ;; *************** function _TMR0_StartTimer *****************
  5207 ;; Defined at:
  5208 ;;		line 84 in file "mcc_generated_files/tmr0.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		None
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;Total ram usage:        0 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    2
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_TMR0_Initialize
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           
  5237                           ;psect for function _TMR0_StartTimer
  5238  0B55                     _TMR0_StartTimer:	
  5239                           
  5240                           ;tmr0.c: 87: T0CON0bits.T0EN = 1;
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _TMR0_StartTimer: []
  5244  0B55  0020               	movlb	0	; select bank0
  5245  0B56  1797               	bsf	23,7	;volatile
  5246  0B57  0008               	return
  5247  0B58                     __end_of_TMR0_StartTimer:	
  5248                           
  5249                           	psect	text6
  5250  0BD1                     __ptext6:	
  5251 ;; *************** function _PWM5_Initialize *****************
  5252 ;; Defined at:
  5253 ;;		line 57 in file "mcc_generated_files/pwm5.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2, status,0
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used:    1
  5273 ;; Hardware stack levels required when called:    2
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_SYSTEM_Initialize
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           
  5282                           ;psect for function _PWM5_Initialize
  5283  0BD1                     _PWM5_Initialize:	
  5284                           
  5285                           ;pwm5.c: 61: PWM5CON = 0x80;
  5286                           
  5287                           ;incstack = 0
  5288                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  5289  0BD1  3080               	movlw	128
  5290  0BD2  002C               	movlb	12	; select bank12
  5291  0BD3  0099               	movwf	25	;volatile
  5292                           
  5293                           ;pwm5.c: 64: PWM5DCH = 0x18;
  5294  0BD4  3018               	movlw	24
  5295  0BD5  0098               	movwf	24	;volatile
  5296                           
  5297                           ;pwm5.c: 67: PWM5DCL = 0xC0;
  5298  0BD6  30C0               	movlw	192
  5299  0BD7  0097               	movwf	23	;volatile
  5300                           
  5301                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 0x1;
  5302  0BD8  081F               	movf	31,w	;volatile
  5303  0BD9  39FC               	andlw	-4
  5304  0BDA  3801               	iorlw	1
  5305  0BDB  009F               	movwf	31	;volatile
  5306  0BDC  0008               	return
  5307  0BDD                     __end_of_PWM5_Initialize:	
  5308                           
  5309                           	psect	text7
  5310  0E67                     __ptext7:	
  5311 ;; *************** function _PIN_MANAGER_Initialize *****************
  5312 ;; Defined at:
  5313 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  state           1    3[COMMON] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;Total ram usage:        1 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:    2
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_SYSTEM_Initialize
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           
  5342                           ;psect for function _PIN_MANAGER_Initialize
  5343  0E67                     _PIN_MANAGER_Initialize:	
  5344                           
  5345                           ;pin_manager.c: 56: LATA = 0x00;
  5346                           
  5347                           ;incstack = 0
  5348                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5349  0E67  0022               	movlb	2	; select bank2
  5350  0E68  018C               	clrf	12	;volatile
  5351                           
  5352                           ;pin_manager.c: 57: LATB = 0x00;
  5353  0E69  018D               	clrf	13	;volatile
  5354                           
  5355                           ;pin_manager.c: 58: LATC = 0x00;
  5356  0E6A  018E               	clrf	14	;volatile
  5357                           
  5358                           ;pin_manager.c: 63: TRISA = 0x37;
  5359  0E6B  3037               	movlw	55
  5360  0E6C  0021               	movlb	1	; select bank1
  5361  0E6D  008C               	movwf	12	;volatile
  5362                           
  5363                           ;pin_manager.c: 64: TRISB = 0x30;
  5364  0E6E  3030               	movlw	48
  5365  0E6F  008D               	movwf	13	;volatile
  5366                           
  5367                           ;pin_manager.c: 65: TRISC = 0x7D;
  5368  0E70  307D               	movlw	125
  5369  0E71  008E               	movwf	14	;volatile
  5370                           
  5371                           ;pin_manager.c: 70: ANSELC = 0xFF;
  5372  0E72  30FF               	movlw	255
  5373  0E73  0023               	movlb	3	; select bank3
  5374  0E74  008E               	movwf	14	;volatile
  5375                           
  5376                           ;pin_manager.c: 71: ANSELB = 0xD0;
  5377  0E75  30D0               	movlw	208
  5378  0E76  008D               	movwf	13	;volatile
  5379                           
  5380                           ;pin_manager.c: 72: ANSELA = 0x37;
  5381  0E77  3037               	movlw	55
  5382  0E78  008C               	movwf	12	;volatile
  5383                           
  5384                           ;pin_manager.c: 77: WPUB = 0x00;
  5385  0E79  0024               	movlb	4	; select bank4
  5386  0E7A  018D               	clrf	13	;volatile
  5387                           
  5388                           ;pin_manager.c: 78: WPUA = 0x00;
  5389  0E7B  018C               	clrf	12	;volatile
  5390                           
  5391                           ;pin_manager.c: 79: WPUC = 0x00;
  5392  0E7C  018E               	clrf	14	;volatile
  5393                           
  5394                           ;pin_manager.c: 84: ODCONA = 0x00;
  5395  0E7D  0025               	movlb	5	; select bank5
  5396  0E7E  018C               	clrf	12	;volatile
  5397                           
  5398                           ;pin_manager.c: 85: ODCONB = 0x00;
  5399  0E7F  018D               	clrf	13	;volatile
  5400                           
  5401                           ;pin_manager.c: 86: ODCONC = 0x00;
  5402  0E80  018E               	clrf	14	;volatile
  5403                           
  5404                           ;pin_manager.c: 93: bool state = GIE;
  5405  0E81  3000               	movlw	0
  5406  0E82  1B8B               	btfsc	11,7	;volatile
  5407  0E83  3001               	movlw	1
  5408  0E84  00F3               	movwf	PIN_MANAGER_Initialize@state
  5409                           
  5410                           ;pin_manager.c: 94: GIE = 0;
  5411  0E85  138B               	bcf	11,7	;volatile
  5412                           
  5413                           ;pin_manager.c: 95: PPSLOCK = 0x55;
  5414  0E86  3055               	movlw	85
  5415  0E87  003C               	movlb	28	; select bank28
  5416  0E88  008F               	movwf	15	;volatile
  5417                           
  5418                           ;pin_manager.c: 96: PPSLOCK = 0xAA;
  5419  0E89  30AA               	movlw	170
  5420  0E8A  008F               	movwf	15	;volatile
  5421                           
  5422                           ;pin_manager.c: 97: PPSLOCKbits.PPSLOCKED = 0x00;
  5423  0E8B  100F               	bcf	15,0	;volatile
  5424                           
  5425                           ;pin_manager.c: 99: RC1PPSbits.RC1PPS = 0x02;
  5426  0E8C  003D               	movlb	29	; select bank29
  5427  0E8D  0821               	movf	33,w	;volatile
  5428  0E8E  39E0               	andlw	-32
  5429  0E8F  3802               	iorlw	2
  5430  0E90  00A1               	movwf	33	;volatile
  5431                           
  5432                           ;pin_manager.c: 100: RXPPSbits.RXPPS = 0x0D;
  5433  0E91  003C               	movlb	28	; select bank28
  5434  0E92  0824               	movf	36,w	;volatile
  5435  0E93  39E0               	andlw	-32
  5436  0E94  380D               	iorlw	13
  5437  0E95  00A4               	movwf	36	;volatile
  5438                           
  5439                           ;pin_manager.c: 101: RB7PPSbits.RB7PPS = 0x14;
  5440  0E96  003D               	movlb	29	; select bank29
  5441  0E97  081F               	movf	31,w	;volatile
  5442  0E98  39E0               	andlw	-32
  5443  0E99  3814               	iorlw	20
  5444  0E9A  009F               	movwf	31	;volatile
  5445                           
  5446                           ;pin_manager.c: 103: PPSLOCK = 0x55;
  5447  0E9B  3055               	movlw	85
  5448  0E9C  003C               	movlb	28	; select bank28
  5449  0E9D  008F               	movwf	15	;volatile
  5450                           
  5451                           ;pin_manager.c: 104: PPSLOCK = 0xAA;
  5452  0E9E  30AA               	movlw	170
  5453  0E9F  008F               	movwf	15	;volatile
  5454                           
  5455                           ;pin_manager.c: 105: PPSLOCKbits.PPSLOCKED = 0x01;
  5456  0EA0  140F               	bsf	15,0	;volatile
  5457                           
  5458                           ;pin_manager.c: 107: GIE = state;
  5459  0EA1  1C73               	btfss	PIN_MANAGER_Initialize@state,0
  5460  0EA2  2EA5               	goto	u4730
  5461  0EA3  178B               	bsf	11,7	;volatile
  5462  0EA4  0008               	return
  5463  0EA5                     u4730:	
  5464  0EA5  138B               	bcf	11,7	;volatile
  5465  0EA6  0008               	return
  5466  0EA7                     __end_of_PIN_MANAGER_Initialize:	
  5467                           
  5468                           	psect	text8
  5469  0B9E                     __ptext8:	
  5470 ;; *************** function _OSCILLATOR_Initialize *****************
  5471 ;; Defined at:
  5472 ;;		line 89 in file "mcc_generated_files/mcc.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    2
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_SYSTEM_Initialize
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _OSCILLATOR_Initialize
  5502  0B9E                     _OSCILLATOR_Initialize:	
  5503                           
  5504                           ;mcc.c: 92: OSCCON1 = 0x00;
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5508  0B9E  0032               	movlb	18	; select bank18
  5509  0B9F  0199               	clrf	25	;volatile
  5510                           
  5511                           ;mcc.c: 94: OSCCON3 = 0x00;
  5512  0BA0  019B               	clrf	27	;volatile
  5513                           
  5514                           ;mcc.c: 96: OSCEN = 0x00;
  5515  0BA1  019D               	clrf	29	;volatile
  5516                           
  5517                           ;mcc.c: 98: OSCFRQ = 0x06;
  5518  0BA2  3006               	movlw	6
  5519  0BA3  009F               	movwf	31	;volatile
  5520                           
  5521                           ;mcc.c: 100: OSCTUNE = 0x00;
  5522  0BA4  019E               	clrf	30	;volatile
  5523  0BA5  0008               	return
  5524  0BA6                     __end_of_OSCILLATOR_Initialize:	
  5525                           
  5526                           	psect	text9
  5527  0CDF                     __ptext9:	
  5528 ;; *************** function _EUSART_Initialize *****************
  5529 ;; Defined at:
  5530 ;;		line 75 in file "mcc_generated_files/eusart.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;		None
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;		None
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5548 ;;Total ram usage:        1 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    2
  5551 ;; This function calls:
  5552 ;;		Nothing
  5553 ;; This function is called by:
  5554 ;;		_SYSTEM_Initialize
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function _EUSART_Initialize
  5560  0CDF                     _EUSART_Initialize:	
  5561                           
  5562                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  5563                           
  5564                           ;incstack = 0
  5565                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5566  0CDF  0021               	movlb	1	; select bank1
  5567  0CE0  1291               	bcf	17,5	;volatile
  5568                           
  5569                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  5570  0CE1  1211               	bcf	17,4	;volatile
  5571                           
  5572                           ;eusart.c: 84: BAUD1CON = 0x08;
  5573  0CE2  3008               	movlw	8
  5574  0CE3  0023               	movlb	3	; select bank3
  5575  0CE4  009F               	movwf	31	;volatile
  5576                           
  5577                           ;eusart.c: 87: RC1STA = 0x90;
  5578  0CE5  3090               	movlw	144
  5579  0CE6  009D               	movwf	29	;volatile
  5580                           
  5581                           ;eusart.c: 90: TX1STA = 0x24;
  5582  0CE7  3024               	movlw	36
  5583  0CE8  009E               	movwf	30	;volatile
  5584                           
  5585                           ;eusart.c: 93: SP1BRGL = 0x40;
  5586  0CE9  3040               	movlw	64
  5587  0CEA  009B               	movwf	27	;volatile
  5588                           
  5589                           ;eusart.c: 96: SP1BRGH = 0x03;
  5590  0CEB  3003               	movlw	3
  5591  0CEC  009C               	movwf	28	;volatile
  5592                           
  5593                           ;eusart.c: 100: eusartTxHead = 0;
  5594  0CED  01F9               	clrf	_eusartTxHead
  5595                           
  5596                           ;eusart.c: 101: eusartTxTail = 0;
  5597  0CEE  01FA               	clrf	_eusartTxTail
  5598                           
  5599                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  5600  0CEF  3008               	movlw	8
  5601  0CF0  00F3               	movwf	??_EUSART_Initialize
  5602  0CF1  0873               	movf	??_EUSART_Initialize,w
  5603  0CF2  0021               	movlb	1	; select bank1
  5604  0CF3  00E2               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
  5605                           
  5606                           ;eusart.c: 104: eusartRxHead = 0;
  5607  0CF4  0020               	movlb	0	; select bank0
  5608  0CF5  01EA               	clrf	_eusartRxHead
  5609                           
  5610                           ;eusart.c: 105: eusartRxTail = 0;
  5611  0CF6  01EB               	clrf	_eusartRxTail
  5612                           
  5613                           ;eusart.c: 106: eusartRxCount = 0;
  5614  0CF7  01F8               	clrf	_eusartRxCount	;volatile
  5615                           
  5616                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  5617  0CF8  0021               	movlb	1	; select bank1
  5618  0CF9  1691               	bsf	17,5	;volatile
  5619  0CFA  0008               	return
  5620  0CFB                     __end_of_EUSART_Initialize:	
  5621                           
  5622                           	psect	text10
  5623  0BBB                     __ptext10:	
  5624 ;; *************** function _ADC_Initialize *****************
  5625 ;; Defined at:
  5626 ;;		line 68 in file "mcc_generated_files/adc.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		wreg, status,2
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;Total ram usage:        0 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:    2
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_SYSTEM_Initialize
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           
  5655                           ;psect for function _ADC_Initialize
  5656  0BBB                     _ADC_Initialize:	
  5657                           
  5658                           ;adc.c: 73: ADCON0 = 0x01;
  5659                           
  5660                           ;incstack = 0
  5661                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5662  0BBB  3001               	movlw	1
  5663  0BBC  0021               	movlb	1	; select bank1
  5664  0BBD  009D               	movwf	29	;volatile
  5665                           
  5666                           ;adc.c: 76: ADCON1 = 0x20;
  5667  0BBE  3020               	movlw	32
  5668  0BBF  009E               	movwf	30	;volatile
  5669                           
  5670                           ;adc.c: 79: ADACT = 0x05;
  5671  0BC0  3005               	movlw	5
  5672  0BC1  009F               	movwf	31	;volatile
  5673                           
  5674                           ;adc.c: 82: ADRESL = 0x00;
  5675  0BC2  019B               	clrf	27	;volatile
  5676                           
  5677                           ;adc.c: 85: ADRESH = 0x00;
  5678  0BC3  019C               	clrf	28	;volatile
  5679                           
  5680                           ;adc.c: 88: PIE1bits.ADIE = 1;
  5681  0BC4  1711               	bsf	17,6	;volatile
  5682  0BC5  0008               	return
  5683  0BC6                     __end_of_ADC_Initialize:	
  5684                           
  5685                           	psect	text11
  5686  02C4                     __ptext11:	
  5687 ;; *************** function _PI *****************
  5688 ;; Defined at:
  5689 ;;		line 37 in file "PI.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;		None
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;		None
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      void 
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0, pclath, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5704 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5705 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5706 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5707 ;;Total ram usage:        5 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    4
  5710 ;; This function calls:
  5711 ;;		_ADC_GetResult
  5712 ;;		_PWM5_LoadDutyValue
  5713 ;;		___awtoft
  5714 ;;		___ftadd
  5715 ;;		___ftge
  5716 ;;		___ftmul
  5717 ;;		___fttol
  5718 ;; This function is called by:
  5719 ;;		_main
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           
  5724                           ;psect for function _PI
  5725  02C4                     _PI:	
  5726                           
  5727                           ;PI.c: 38: sensorHeight = (int) ADC_GetResult();
  5728                           
  5729                           ;incstack = 0
  5730                           ; Regs used in _PI: [wreg+status,2+status,0+pclath+cstack]
  5731  02C4  318B  237A  3182   	fcall	_ADC_GetResult
  5732  02C7  0874               	movf	?_ADC_GetResult+1,w
  5733  02C8  0021               	movlb	1	; select bank1
  5734  02C9  00D1               	movwf	(_sensorHeight+1)^(0+128)
  5735  02CA  0873               	movf	?_ADC_GetResult,w
  5736  02CB  00D0               	movwf	_sensorHeight^(0+128)
  5737                           
  5738                           ;PI.c: 40: error = setpoint - sensorHeight;
  5739  02CC  0950               	comf	_sensorHeight^(0+128),w
  5740  02CD  0020               	movlb	0	; select bank0
  5741  02CE  00D4               	movwf	??_PI
  5742  02CF  0021               	movlb	1	; select bank1
  5743  02D0  0951               	comf	(_sensorHeight+1)^(0+128),w
  5744  02D1  0020               	movlb	0	; select bank0
  5745  02D2  00D5               	movwf	??_PI+1
  5746  02D3  0AD4               	incf	??_PI,f
  5747  02D4  1903               	skipnz
  5748  02D5  0AD5               	incf	??_PI+1,f
  5749  02D6  0021               	movlb	1	; select bank1
  5750  02D7  085C               	movf	_setpoint^(0+128),w
  5751  02D8  0020               	movlb	0	; select bank0
  5752  02D9  0754               	addwf	??_PI,w
  5753  02DA  0021               	movlb	1	; select bank1
  5754  02DB  00CA               	movwf	_error^(0+128)
  5755  02DC  085D               	movf	(_setpoint+1)^(0+128),w
  5756  02DD  0020               	movlb	0	; select bank0
  5757  02DE  3D55               	addwfc	??_PI+1,w
  5758  02DF  0021               	movlb	1	; select bank1
  5759  02E0  00CB               	movwf	(_error+1)^(0+128)
  5760                           
  5761                           ;PI.c: 41: dutycycle = (int) ((kp * error) + (ki * integral) + 50);
  5762  02E1  084B               	movf	(_error+1)^(0+128),w
  5763  02E2  0020               	movlb	0	; select bank0
  5764  02E3  00A4               	movwf	___awtoft@c+1
  5765  02E4  0021               	movlb	1	; select bank1
  5766  02E5  084A               	movf	_error^(0+128),w
  5767  02E6  0020               	movlb	0	; select bank0
  5768  02E7  00A3               	movwf	___awtoft@c
  5769  02E8  318D  253A  3182   	fcall	___awtoft
  5770  02EB  0020               	movlb	0	; select bank0
  5771  02EC  0823               	movf	?___awtoft,w
  5772  02ED  00AC               	movwf	___ftmul@f2
  5773  02EE  0824               	movf	?___awtoft+1,w
  5774  02EF  00AD               	movwf	___ftmul@f2+1
  5775  02F0  0825               	movf	?___awtoft+2,w
  5776  02F1  00AE               	movwf	___ftmul@f2+2
  5777  02F2  0021               	movlb	1	; select bank1
  5778  02F3  0859               	movf	_kp^(0+128),w
  5779  02F4  0020               	movlb	0	; select bank0
  5780  02F5  00A9               	movwf	___ftmul@f1
  5781  02F6  0021               	movlb	1	; select bank1
  5782  02F7  085A               	movf	(_kp+1)^(0+128),w
  5783  02F8  0020               	movlb	0	; select bank0
  5784  02F9  00AA               	movwf	___ftmul@f1+1
  5785  02FA  0021               	movlb	1	; select bank1
  5786  02FB  085B               	movf	(_kp+2)^(0+128),w
  5787  02FC  0020               	movlb	0	; select bank0
  5788  02FD  00AB               	movwf	___ftmul@f1+2
  5789  02FE  3186  267E  3182   	fcall	___ftmul
  5790  0301  0020               	movlb	0	; select bank0
  5791  0302  0829               	movf	?___ftmul,w
  5792  0303  00BC               	movwf	___ftadd@f2
  5793  0304  082A               	movf	?___ftmul+1,w
  5794  0305  00BD               	movwf	___ftadd@f2+1
  5795  0306  082B               	movf	?___ftmul+2,w
  5796  0307  00BE               	movwf	___ftadd@f2+2
  5797  0308  086C               	movf	_ki,w
  5798  0309  00AC               	movwf	___ftmul@f2
  5799  030A  086D               	movf	_ki+1,w
  5800  030B  00AD               	movwf	___ftmul@f2+1
  5801  030C  086E               	movf	_ki+2,w
  5802  030D  00AE               	movwf	___ftmul@f2+2
  5803  030E  0866               	movf	_integral,w
  5804  030F  00A9               	movwf	___ftmul@f1
  5805  0310  0867               	movf	_integral+1,w
  5806  0311  00AA               	movwf	___ftmul@f1+1
  5807  0312  0868               	movf	_integral+2,w
  5808  0313  00AB               	movwf	___ftmul@f1+2
  5809  0314  3186  267E  3182   	fcall	___ftmul
  5810  0317  0020               	movlb	0	; select bank0
  5811  0318  0829               	movf	?___ftmul,w
  5812  0319  00B9               	movwf	___ftadd@f1
  5813  031A  082A               	movf	?___ftmul+1,w
  5814  031B  00BA               	movwf	___ftadd@f1+1
  5815  031C  082B               	movf	?___ftmul+2,w
  5816  031D  00BB               	movwf	___ftadd@f1+2
  5817  031E  3183  23E6  3182   	fcall	___ftadd
  5818  0321  0020               	movlb	0	; select bank0
  5819  0322  0839               	movf	?___ftadd,w
  5820  0323  00D6               	movwf	_PI$1265
  5821  0324  083A               	movf	?___ftadd+1,w
  5822  0325  00D7               	movwf	_PI$1265+1
  5823  0326  083B               	movf	?___ftadd+2,w
  5824  0327  00D8               	movwf	_PI$1265+2
  5825                           
  5826                           ;PI.c: 41: dutycycle = (int) ((kp * error) + (ki * integral) + 50);
  5827  0328  0856               	movf	_PI$1265,w
  5828  0329  00BC               	movwf	___ftadd@f2
  5829  032A  0857               	movf	_PI$1265+1,w
  5830  032B  00BD               	movwf	___ftadd@f2+1
  5831  032C  0858               	movf	_PI$1265+2,w
  5832  032D  00BE               	movwf	___ftadd@f2+2
  5833  032E  3000               	movlw	0
  5834  032F  00B9               	movwf	___ftadd@f1
  5835  0330  3048               	movlw	72
  5836  0331  00BA               	movwf	___ftadd@f1+1
  5837  0332  3042               	movlw	66
  5838  0333  00BB               	movwf	___ftadd@f1+2
  5839  0334  3183  23E6  3182   	fcall	___ftadd
  5840  0337  0020               	movlb	0	; select bank0
  5841  0338  0839               	movf	?___ftadd,w
  5842  0339  00C6               	movwf	___fttol@f1
  5843  033A  083A               	movf	?___ftadd+1,w
  5844  033B  00C7               	movwf	___fttol@f1+1
  5845  033C  083B               	movf	?___ftadd+2,w
  5846  033D  00C8               	movwf	___fttol@f1+2
  5847  033E  318F  2779  3182   	fcall	___fttol
  5848  0341  0020               	movlb	0	; select bank0
  5849  0342  0847               	movf	?___fttol+1,w
  5850  0343  0021               	movlb	1	; select bank1
  5851  0344  00C9               	movwf	(_dutycycle+1)^(0+128)
  5852  0345  0020               	movlb	0	; select bank0
  5853  0346  0846               	movf	?___fttol,w
  5854  0347  0021               	movlb	1	; select bank1
  5855  0348  00C8               	movwf	_dutycycle^(0+128)
  5856                           
  5857                           ;PI.c: 42: integral += error;
  5858  0349  084B               	movf	(_error+1)^(0+128),w
  5859  034A  0020               	movlb	0	; select bank0
  5860  034B  00A4               	movwf	___awtoft@c+1
  5861  034C  0021               	movlb	1	; select bank1
  5862  034D  084A               	movf	_error^(0+128),w
  5863  034E  0020               	movlb	0	; select bank0
  5864  034F  00A3               	movwf	___awtoft@c
  5865  0350  318D  253A  3182   	fcall	___awtoft
  5866  0353  0020               	movlb	0	; select bank0
  5867  0354  0823               	movf	?___awtoft,w
  5868  0355  00B9               	movwf	___ftadd@f1
  5869  0356  0824               	movf	?___awtoft+1,w
  5870  0357  00BA               	movwf	___ftadd@f1+1
  5871  0358  0825               	movf	?___awtoft+2,w
  5872  0359  00BB               	movwf	___ftadd@f1+2
  5873  035A  0866               	movf	_integral,w
  5874  035B  00BC               	movwf	___ftadd@f2
  5875  035C  0867               	movf	_integral+1,w
  5876  035D  00BD               	movwf	___ftadd@f2+1
  5877  035E  0868               	movf	_integral+2,w
  5878  035F  00BE               	movwf	___ftadd@f2+2
  5879  0360  3183  23E6  3182   	fcall	___ftadd
  5880  0363  0020               	movlb	0	; select bank0
  5881  0364  0839               	movf	?___ftadd,w
  5882  0365  00E6               	movwf	_integral
  5883  0366  083A               	movf	?___ftadd+1,w
  5884  0367  00E7               	movwf	_integral+1
  5885  0368  083B               	movf	?___ftadd+2,w
  5886  0369  00E8               	movwf	_integral+2
  5887                           
  5888                           ;PI.c: 44: if ((ki*integral) > 250) {
  5889  036A  3000               	movlw	0
  5890  036B  00B9               	movwf	___ftge@ff1
  5891  036C  307A               	movlw	122
  5892  036D  00BA               	movwf	___ftge@ff1+1
  5893  036E  3043               	movlw	67
  5894  036F  00BB               	movwf	___ftge@ff1+2
  5895  0370  0866               	movf	_integral,w
  5896  0371  00A9               	movwf	___ftmul@f1
  5897  0372  0867               	movf	_integral+1,w
  5898  0373  00AA               	movwf	___ftmul@f1+1
  5899  0374  0868               	movf	_integral+2,w
  5900  0375  00AB               	movwf	___ftmul@f1+2
  5901  0376  086C               	movf	_ki,w
  5902  0377  00AC               	movwf	___ftmul@f2
  5903  0378  086D               	movf	_ki+1,w
  5904  0379  00AD               	movwf	___ftmul@f2+1
  5905  037A  086E               	movf	_ki+2,w
  5906  037B  00AE               	movwf	___ftmul@f2+2
  5907  037C  3186  267E  3182   	fcall	___ftmul
  5908  037F  0020               	movlb	0	; select bank0
  5909  0380  0829               	movf	?___ftmul,w
  5910  0381  00BC               	movwf	___ftge@ff2
  5911  0382  082A               	movf	?___ftmul+1,w
  5912  0383  00BD               	movwf	___ftge@ff2+1
  5913  0384  082B               	movf	?___ftmul+2,w
  5914  0385  00BE               	movwf	___ftge@ff2+2
  5915  0386  318D  25EE  3182   	fcall	___ftge
  5916  0389  1803               	btfsc	3,0
  5917  038A  2B92               	goto	l4067
  5918                           
  5919                           ;PI.c: 45: integral = 250;
  5920  038B  3000               	movlw	0
  5921  038C  0020               	movlb	0	; select bank0
  5922  038D  00E6               	movwf	_integral
  5923  038E  307A               	movlw	122
  5924  038F  00E7               	movwf	_integral+1
  5925  0390  3043               	movlw	67
  5926  0391  00E8               	movwf	_integral+2
  5927  0392                     l4067:	
  5928                           
  5929                           ;PI.c: 46: }
  5930                           ;PI.c: 47: if ((ki*integral) < -250) {
  5931  0392  0020               	movlb	0	; select bank0
  5932  0393  0866               	movf	_integral,w
  5933  0394  00A9               	movwf	___ftmul@f1
  5934  0395  0867               	movf	_integral+1,w
  5935  0396  00AA               	movwf	___ftmul@f1+1
  5936  0397  0868               	movf	_integral+2,w
  5937  0398  00AB               	movwf	___ftmul@f1+2
  5938  0399  086C               	movf	_ki,w
  5939  039A  00AC               	movwf	___ftmul@f2
  5940  039B  086D               	movf	_ki+1,w
  5941  039C  00AD               	movwf	___ftmul@f2+1
  5942  039D  086E               	movf	_ki+2,w
  5943  039E  00AE               	movwf	___ftmul@f2+2
  5944  039F  3186  267E  3182   	fcall	___ftmul
  5945  03A2  0020               	movlb	0	; select bank0
  5946  03A3  0829               	movf	?___ftmul,w
  5947  03A4  00B9               	movwf	___ftge@ff1
  5948  03A5  082A               	movf	?___ftmul+1,w
  5949  03A6  00BA               	movwf	___ftge@ff1+1
  5950  03A7  082B               	movf	?___ftmul+2,w
  5951  03A8  00BB               	movwf	___ftge@ff1+2
  5952  03A9  3000               	movlw	0
  5953  03AA  00BC               	movwf	___ftge@ff2
  5954  03AB  307A               	movlw	122
  5955  03AC  00BD               	movwf	___ftge@ff2+1
  5956  03AD  30C3               	movlw	195
  5957  03AE  00BE               	movwf	___ftge@ff2+2
  5958  03AF  318D  25EE  3182   	fcall	___ftge
  5959  03B2  1803               	btfsc	3,0
  5960  03B3  2BBB               	goto	l374
  5961                           
  5962                           ;PI.c: 48: integral = -250;
  5963  03B4  3000               	movlw	0
  5964  03B5  0020               	movlb	0	; select bank0
  5965  03B6  00E6               	movwf	_integral
  5966  03B7  307A               	movlw	122
  5967  03B8  00E7               	movwf	_integral+1
  5968  03B9  30C3               	movlw	195
  5969  03BA  00E8               	movwf	_integral+2
  5970  03BB                     l374:	
  5971                           
  5972                           ;PI.c: 49: }
  5973                           ;PI.c: 50: if(ki ==0){
  5974  03BB  0020               	movlb	0	; select bank0
  5975  03BC  086E               	movf	_ki+2,w
  5976  03BD  046D               	iorwf	_ki+1,w
  5977  03BE  046C               	iorwf	_ki,w
  5978  03BF  1D03               	skipz
  5979  03C0  2BC7               	goto	l375
  5980                           
  5981                           ;PI.c: 51: integral = 0;
  5982  03C1  3000               	movlw	0
  5983  03C2  00E6               	movwf	_integral
  5984  03C3  3000               	movlw	0
  5985  03C4  00E7               	movwf	_integral+1
  5986  03C5  3000               	movlw	0
  5987  03C6  00E8               	movwf	_integral+2
  5988  03C7                     l375:	
  5989                           
  5990                           ;PI.c: 52: }
  5991                           ;PI.c: 54: if (dutycycle >= 200) {
  5992  03C7  0021               	movlb	1	; select bank1
  5993  03C8  0849               	movf	(_dutycycle+1)^(0+128),w
  5994  03C9  3A80               	xorlw	128
  5995  03CA  0020               	movlb	0	; select bank0
  5996  03CB  00D4               	movwf	??_PI
  5997  03CC  3080               	movlw	128
  5998  03CD  0254               	subwf	??_PI,w
  5999  03CE  1D03               	skipz
  6000  03CF  2BD3               	goto	u5305
  6001  03D0  30C8               	movlw	200
  6002  03D1  0021               	movlb	1	; select bank1
  6003  03D2  0248               	subwf	_dutycycle^(0+128),w
  6004  03D3                     u5305:	
  6005  03D3  1C03               	skipc
  6006  03D4  2BDA               	goto	l4075
  6007                           
  6008                           ;PI.c: 55: dutycycle = 200;
  6009  03D5  30C8               	movlw	200
  6010  03D6  0021               	movlb	1	; select bank1
  6011  03D7  00C8               	movwf	_dutycycle^(0+128)
  6012  03D8  3000               	movlw	0
  6013  03D9  00C9               	movwf	(_dutycycle^(0+128)+1)
  6014  03DA                     l4075:	
  6015                           
  6016                           ;PI.c: 56: }
  6017                           ;PI.c: 57: if (dutycycle < 0) {
  6018  03DA  0021               	movlb	1	; select bank1
  6019  03DB  1FC9               	btfss	(_dutycycle+1)^(0+128),7
  6020  03DC  2BDF               	goto	l4079
  6021                           
  6022                           ;PI.c: 58: dutycycle = 0;
  6023  03DD  01C8               	clrf	_dutycycle^(0+128)
  6024  03DE  01C9               	clrf	(_dutycycle+1)^(0+128)
  6025  03DF                     l4079:	
  6026                           
  6027                           ;PI.c: 59: }
  6028                           ;PI.c: 61: PWM5_LoadDutyValue(dutycycle);
  6029  03DF  0849               	movf	(_dutycycle+1)^(0+128),w
  6030  03E0  00F4               	movwf	PWM5_LoadDutyValue@dutyValue+1
  6031  03E1  0848               	movf	_dutycycle^(0+128),w
  6032  03E2  00F3               	movwf	PWM5_LoadDutyValue@dutyValue
  6033  03E3  318C  2445         	fcall	_PWM5_LoadDutyValue
  6034  03E5  0008               	return
  6035  03E6                     __end_of_PI:	
  6036                           
  6037                           	psect	text12
  6038  0F79                     __ptext12:	
  6039 ;; *************** function ___fttol *****************
  6040 ;; Defined at:
  6041 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\fttol.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  f1              3   38[BANK0 ] float 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  lval            4   47[BANK0 ] unsigned long 
  6046 ;;  exp1            1   51[BANK0 ] unsigned char 
  6047 ;;  sign1           1   46[BANK0 ] unsigned char 
  6048 ;; Return value:  Size  Location     Type
  6049 ;;                  4   38[BANK0 ] long 
  6050 ;; Registers used:
  6051 ;;		wreg, status,2, status,0
  6052 ;; Tracked objects:
  6053 ;;		On entry : 0/0
  6054 ;;		On exit  : 0/0
  6055 ;;		Unchanged: 0/0
  6056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6059 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6060 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6061 ;;Total ram usage:       14 bytes
  6062 ;; Hardware stack levels used:    1
  6063 ;; Hardware stack levels required when called:    2
  6064 ;; This function calls:
  6065 ;;		Nothing
  6066 ;; This function is called by:
  6067 ;;		_PI
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           
  6071                           
  6072                           ;psect for function ___fttol
  6073  0F79                     ___fttol:	
  6074                           
  6075                           ;incstack = 0
  6076                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6077  0F79  0020               	movlb	0	; select bank0
  6078  0F7A  0846               	movf	___fttol@f1,w
  6079  0F7B  00CA               	movwf	??___fttol
  6080  0F7C  0847               	movf	___fttol@f1+1,w
  6081  0F7D  00CB               	movwf	??___fttol+1
  6082  0F7E  0848               	movf	___fttol@f1+2,w
  6083  0F7F  00CC               	movwf	??___fttol+2
  6084  0F80  1003               	clrc
  6085  0F81  0D4B               	rlf	??___fttol+1,w
  6086  0F82  0D4C               	rlf	??___fttol+2,w
  6087  0F83  00CD               	movwf	??___fttol+3
  6088  0F84  084D               	movf	??___fttol+3,w
  6089  0F85  00D3               	movwf	___fttol@exp1
  6090  0F86  0853               	movf	___fttol@exp1,w
  6091  0F87  1D03               	btfss	3,2
  6092  0F88  2F92               	goto	l3993
  6093  0F89  3000               	movlw	0
  6094  0F8A  00C9               	movwf	?___fttol+3
  6095  0F8B  3000               	movlw	0
  6096  0F8C  00C8               	movwf	?___fttol+2
  6097  0F8D  3000               	movlw	0
  6098  0F8E  00C7               	movwf	?___fttol+1
  6099  0F8F  3000               	movlw	0
  6100  0F90  00C6               	movwf	?___fttol
  6101  0F91  0008               	return
  6102  0F92                     l3993:	
  6103  0F92  0846               	movf	___fttol@f1,w
  6104  0F93  00CA               	movwf	??___fttol
  6105  0F94  0847               	movf	___fttol@f1+1,w
  6106  0F95  00CB               	movwf	??___fttol+1
  6107  0F96  0848               	movf	___fttol@f1+2,w
  6108  0F97  00CC               	movwf	??___fttol+2
  6109  0F98  3017               	movlw	23
  6110  0F99                     u5175:	
  6111  0F99  36CC               	lsrf	??___fttol+2,f
  6112  0F9A  0CCB               	rrf	??___fttol+1,f
  6113  0F9B  0CCA               	rrf	??___fttol,f
  6114  0F9C  0B89               	decfsz	9,f
  6115  0F9D  2F99               	goto	u5175
  6116  0F9E  084A               	movf	??___fttol,w
  6117  0F9F  00CD               	movwf	??___fttol+3
  6118  0FA0  084D               	movf	??___fttol+3,w
  6119  0FA1  00CE               	movwf	___fttol@sign1
  6120  0FA2  17C7               	bsf	___fttol@f1+1,7
  6121  0FA3  30FF               	movlw	255
  6122  0FA4  05C6               	andwf	___fttol@f1,f
  6123  0FA5  30FF               	movlw	255
  6124  0FA6  05C7               	andwf	___fttol@f1+1,f
  6125  0FA7  3000               	movlw	0
  6126  0FA8  05C8               	andwf	___fttol@f1+2,f
  6127  0FA9  0846               	movf	___fttol@f1,w
  6128  0FAA  00CF               	movwf	___fttol@lval
  6129  0FAB  0847               	movf	___fttol@f1+1,w
  6130  0FAC  00D0               	movwf	___fttol@lval+1
  6131  0FAD  0848               	movf	___fttol@f1+2,w
  6132  0FAE  00D1               	movwf	___fttol@lval+2
  6133  0FAF  01D2               	clrf	___fttol@lval+3
  6134  0FB0  308E               	movlw	142
  6135  0FB1  02D3               	subwf	___fttol@exp1,f
  6136  0FB2  1FD3               	btfss	___fttol@exp1,7
  6137  0FB3  2FD0               	goto	l4013
  6138  0FB4  0853               	movf	___fttol@exp1,w
  6139  0FB5  3A80               	xorlw	128
  6140  0FB6  3E8F               	addlw	143
  6141  0FB7  1803               	skipnc
  6142  0FB8  2FC2               	goto	l4011
  6143  0FB9  3000               	movlw	0
  6144  0FBA  00C9               	movwf	?___fttol+3
  6145  0FBB  3000               	movlw	0
  6146  0FBC  00C8               	movwf	?___fttol+2
  6147  0FBD  3000               	movlw	0
  6148  0FBE  00C7               	movwf	?___fttol+1
  6149  0FBF  3000               	movlw	0
  6150  0FC0  00C6               	movwf	?___fttol
  6151  0FC1  0008               	return
  6152  0FC2                     l4011:	
  6153  0FC2  3001               	movlw	1
  6154  0FC3                     u5205:	
  6155  0FC3  36D2               	lsrf	___fttol@lval+3,f
  6156  0FC4  0CD1               	rrf	___fttol@lval+2,f
  6157  0FC5  0CD0               	rrf	___fttol@lval+1,f
  6158  0FC6  0CCF               	rrf	___fttol@lval,f
  6159  0FC7  0B89               	decfsz	9,f
  6160  0FC8  2FC3               	goto	u5205
  6161  0FC9  3001               	movlw	1
  6162  0FCA  00CA               	movwf	??___fttol
  6163  0FCB  084A               	movf	??___fttol,w
  6164  0FCC  07D3               	addwf	___fttol@exp1,f
  6165  0FCD  1903               	btfsc	3,2
  6166  0FCE  2FE9               	goto	l4021
  6167  0FCF  2FC2               	goto	l4011
  6168  0FD0                     l4013:	
  6169  0FD0  3018               	movlw	24
  6170  0FD1  0253               	subwf	___fttol@exp1,w
  6171  0FD2  1C03               	skipc
  6172  0FD3  2FE6               	goto	l901
  6173  0FD4  3000               	movlw	0
  6174  0FD5  00C9               	movwf	?___fttol+3
  6175  0FD6  3000               	movlw	0
  6176  0FD7  00C8               	movwf	?___fttol+2
  6177  0FD8  3000               	movlw	0
  6178  0FD9  00C7               	movwf	?___fttol+1
  6179  0FDA  3000               	movlw	0
  6180  0FDB  00C6               	movwf	?___fttol
  6181  0FDC  0008               	return
  6182  0FDD                     l4019:	
  6183  0FDD  3001               	movlw	1
  6184  0FDE                     u5235:	
  6185  0FDE  35CF               	lslf	___fttol@lval,f
  6186  0FDF  0DD0               	rlf	___fttol@lval+1,f
  6187  0FE0  0DD1               	rlf	___fttol@lval+2,f
  6188  0FE1  0DD2               	rlf	___fttol@lval+3,f
  6189  0FE2  0B89               	decfsz	9,f
  6190  0FE3  2FDE               	goto	u5235
  6191  0FE4  3001               	movlw	1
  6192  0FE5  02D3               	subwf	___fttol@exp1,f
  6193  0FE6                     l901:	
  6194  0FE6  0853               	movf	___fttol@exp1,w
  6195  0FE7  1D03               	btfss	3,2
  6196  0FE8  2FDD               	goto	l4019
  6197  0FE9                     l4021:	
  6198  0FE9  084E               	movf	___fttol@sign1,w
  6199  0FEA  1903               	btfsc	3,2
  6200  0FEB  2FF7               	goto	l4025
  6201  0FEC  09CF               	comf	___fttol@lval,f
  6202  0FED  09D0               	comf	___fttol@lval+1,f
  6203  0FEE  09D1               	comf	___fttol@lval+2,f
  6204  0FEF  09D2               	comf	___fttol@lval+3,f
  6205  0FF0  0ACF               	incf	___fttol@lval,f
  6206  0FF1  1903               	skipnz
  6207  0FF2  0AD0               	incf	___fttol@lval+1,f
  6208  0FF3  1903               	skipnz
  6209  0FF4  0AD1               	incf	___fttol@lval+2,f
  6210  0FF5  1903               	skipnz
  6211  0FF6  0AD2               	incf	___fttol@lval+3,f
  6212  0FF7                     l4025:	
  6213  0FF7  0852               	movf	___fttol@lval+3,w
  6214  0FF8  00C9               	movwf	?___fttol+3
  6215  0FF9  0851               	movf	___fttol@lval+2,w
  6216  0FFA  00C8               	movwf	?___fttol+2
  6217  0FFB  0850               	movf	___fttol@lval+1,w
  6218  0FFC  00C7               	movwf	?___fttol+1
  6219  0FFD  084F               	movf	___fttol@lval,w
  6220  0FFE  00C6               	movwf	?___fttol
  6221  0FFF  0008               	return
  6222  1000                     __end_of___fttol:	
  6223                           
  6224                           	psect	text13
  6225  03E6                     __ptext13:	
  6226 ;; *************** function ___ftadd *****************
  6227 ;; Defined at:
  6228 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftadd.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  f1              3   25[BANK0 ] float 
  6231 ;;  f2              3   28[BANK0 ] float 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;  exp1            1   37[BANK0 ] unsigned char 
  6234 ;;  exp2            1   36[BANK0 ] unsigned char 
  6235 ;;  sign            1   35[BANK0 ] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  3   25[BANK0 ] float 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0, pclath, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6245 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;Total ram usage:       13 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    3
  6252 ;; This function calls:
  6253 ;;		___ftpack
  6254 ;; This function is called by:
  6255 ;;		_PI
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function ___ftadd
  6261  03E6                     ___ftadd:	
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6265  03E6  0020               	movlb	0	; select bank0
  6266  03E7  0839               	movf	___ftadd@f1,w
  6267  03E8  00BF               	movwf	??___ftadd
  6268  03E9  083A               	movf	___ftadd@f1+1,w
  6269  03EA  00C0               	movwf	??___ftadd+1
  6270  03EB  083B               	movf	___ftadd@f1+2,w
  6271  03EC  00C1               	movwf	??___ftadd+2
  6272  03ED  1003               	clrc
  6273  03EE  0D40               	rlf	??___ftadd+1,w
  6274  03EF  0D41               	rlf	??___ftadd+2,w
  6275  03F0  00C2               	movwf	??___ftadd+3
  6276  03F1  0842               	movf	??___ftadd+3,w
  6277  03F2  00C5               	movwf	___ftadd@exp1
  6278  03F3  083C               	movf	___ftadd@f2,w
  6279  03F4  00BF               	movwf	??___ftadd
  6280  03F5  083D               	movf	___ftadd@f2+1,w
  6281  03F6  00C0               	movwf	??___ftadd+1
  6282  03F7  083E               	movf	___ftadd@f2+2,w
  6283  03F8  00C1               	movwf	??___ftadd+2
  6284  03F9  1003               	clrc
  6285  03FA  0D40               	rlf	??___ftadd+1,w
  6286  03FB  0D41               	rlf	??___ftadd+2,w
  6287  03FC  00C2               	movwf	??___ftadd+3
  6288  03FD  0842               	movf	??___ftadd+3,w
  6289  03FE  00C4               	movwf	___ftadd@exp2
  6290  03FF  0845               	movf	___ftadd@exp1,w
  6291  0400  1903               	btfsc	3,2
  6292  0401  2C0E               	goto	l3923
  6293  0402  0844               	movf	___ftadd@exp2,w
  6294  0403  0245               	subwf	___ftadd@exp1,w
  6295  0404  1803               	skipnc
  6296  0405  2C15               	goto	l3927
  6297  0406  0345               	decf	___ftadd@exp1,w
  6298  0407  3AFF               	xorlw	255
  6299  0408  0744               	addwf	___ftadd@exp2,w
  6300  0409  00BF               	movwf	??___ftadd
  6301  040A  3019               	movlw	25
  6302  040B  023F               	subwf	??___ftadd,w
  6303  040C  1C03               	skipc
  6304  040D  2C15               	goto	l3927
  6305  040E                     l3923:	
  6306  040E  083C               	movf	___ftadd@f2,w
  6307  040F  00B9               	movwf	?___ftadd
  6308  0410  083D               	movf	___ftadd@f2+1,w
  6309  0411  00BA               	movwf	?___ftadd+1
  6310  0412  083E               	movf	___ftadd@f2+2,w
  6311  0413  00BB               	movwf	?___ftadd+2
  6312  0414  0008               	return
  6313  0415                     l3927:	
  6314  0415  0844               	movf	___ftadd@exp2,w
  6315  0416  1903               	btfsc	3,2
  6316  0417  0008               	return
  6317  0418  0845               	movf	___ftadd@exp1,w
  6318  0419  0244               	subwf	___ftadd@exp2,w
  6319  041A  1803               	skipnc
  6320  041B  2C24               	goto	l3933
  6321  041C  0344               	decf	___ftadd@exp2,w
  6322  041D  3AFF               	xorlw	255
  6323  041E  0745               	addwf	___ftadd@exp1,w
  6324  041F  00BF               	movwf	??___ftadd
  6325  0420  3019               	movlw	25
  6326  0421  023F               	subwf	??___ftadd,w
  6327  0422  1803               	btfsc	3,0
  6328  0423  0008               	return
  6329  0424                     l3933:	
  6330  0424  3006               	movlw	6
  6331  0425  00BF               	movwf	??___ftadd
  6332  0426  083F               	movf	??___ftadd,w
  6333  0427  00C3               	movwf	___ftadd@sign
  6334  0428  1BBB               	btfsc	___ftadd@f1+2,7
  6335  0429  17C3               	bsf	___ftadd@sign,7
  6336  042A  1BBE               	btfsc	___ftadd@f2+2,7
  6337  042B  1743               	bsf	___ftadd@sign,6
  6338  042C  17BA               	bsf	___ftadd@f1+1,7
  6339  042D  30FF               	movlw	255
  6340  042E  05B9               	andwf	___ftadd@f1,f
  6341  042F  30FF               	movlw	255
  6342  0430  05BA               	andwf	___ftadd@f1+1,f
  6343  0431  3000               	movlw	0
  6344  0432  05BB               	andwf	___ftadd@f1+2,f
  6345  0433  17BD               	bsf	___ftadd@f2+1,7
  6346  0434  30FF               	movlw	255
  6347  0435  05BC               	andwf	___ftadd@f2,f
  6348  0436  30FF               	movlw	255
  6349  0437  05BD               	andwf	___ftadd@f2+1,f
  6350  0438  3000               	movlw	0
  6351  0439  05BE               	andwf	___ftadd@f2+2,f
  6352  043A  0844               	movf	___ftadd@exp2,w
  6353  043B  0245               	subwf	___ftadd@exp1,w
  6354  043C  1803               	skipnc
  6355  043D  2C60               	goto	l3955
  6356  043E                     l3945:	
  6357  043E  3001               	movlw	1
  6358  043F                     u5025:	
  6359  043F  35BC               	lslf	___ftadd@f2,f
  6360  0440  0DBD               	rlf	___ftadd@f2+1,f
  6361  0441  0DBE               	rlf	___ftadd@f2+2,f
  6362  0442  0B89               	decfsz	9,f
  6363  0443  2C3F               	goto	u5025
  6364  0444  3001               	movlw	1
  6365  0445  02C4               	subwf	___ftadd@exp2,f
  6366  0446  0844               	movf	___ftadd@exp2,w
  6367  0447  0645               	xorwf	___ftadd@exp1,w
  6368  0448  1903               	skipnz
  6369  0449  2C5B               	goto	l3953
  6370  044A  3001               	movlw	1
  6371  044B  02C3               	subwf	___ftadd@sign,f
  6372  044C  0843               	movf	___ftadd@sign,w
  6373  044D  3907               	andlw	7
  6374  044E  1903               	btfsc	3,2
  6375  044F  2C5B               	goto	l3953
  6376  0450  2C3E               	goto	l3945
  6377  0451                     l3951:	
  6378  0451  3001               	movlw	1
  6379  0452                     u5055:	
  6380  0452  36BB               	lsrf	___ftadd@f1+2,f
  6381  0453  0CBA               	rrf	___ftadd@f1+1,f
  6382  0454  0CB9               	rrf	___ftadd@f1,f
  6383  0455  0B89               	decfsz	9,f
  6384  0456  2C52               	goto	u5055
  6385  0457  3001               	movlw	1
  6386  0458  00BF               	movwf	??___ftadd
  6387  0459  083F               	movf	??___ftadd,w
  6388  045A  07C5               	addwf	___ftadd@exp1,f
  6389  045B                     l3953:	
  6390  045B  0845               	movf	___ftadd@exp1,w
  6391  045C  0644               	xorwf	___ftadd@exp2,w
  6392  045D  1903               	btfsc	3,2
  6393  045E  2C85               	goto	l841
  6394  045F  2C51               	goto	l3951
  6395  0460                     l3955:	
  6396  0460  0845               	movf	___ftadd@exp1,w
  6397  0461  0244               	subwf	___ftadd@exp2,w
  6398  0462  1803               	skipnc
  6399  0463  2C85               	goto	l841
  6400  0464                     l3957:	
  6401  0464  3001               	movlw	1
  6402  0465                     u5085:	
  6403  0465  35B9               	lslf	___ftadd@f1,f
  6404  0466  0DBA               	rlf	___ftadd@f1+1,f
  6405  0467  0DBB               	rlf	___ftadd@f1+2,f
  6406  0468  0B89               	decfsz	9,f
  6407  0469  2C65               	goto	u5085
  6408  046A  3001               	movlw	1
  6409  046B  02C5               	subwf	___ftadd@exp1,f
  6410  046C  0844               	movf	___ftadd@exp2,w
  6411  046D  0645               	xorwf	___ftadd@exp1,w
  6412  046E  1903               	skipnz
  6413  046F  2C81               	goto	l3965
  6414  0470  3001               	movlw	1
  6415  0471  02C3               	subwf	___ftadd@sign,f
  6416  0472  0843               	movf	___ftadd@sign,w
  6417  0473  3907               	andlw	7
  6418  0474  1903               	btfsc	3,2
  6419  0475  2C81               	goto	l3965
  6420  0476  2C64               	goto	l3957
  6421  0477                     l3963:	
  6422  0477  3001               	movlw	1
  6423  0478                     u5115:	
  6424  0478  36BE               	lsrf	___ftadd@f2+2,f
  6425  0479  0CBD               	rrf	___ftadd@f2+1,f
  6426  047A  0CBC               	rrf	___ftadd@f2,f
  6427  047B  0B89               	decfsz	9,f
  6428  047C  2C78               	goto	u5115
  6429  047D  3001               	movlw	1
  6430  047E  00BF               	movwf	??___ftadd
  6431  047F  083F               	movf	??___ftadd,w
  6432  0480  07C4               	addwf	___ftadd@exp2,f
  6433  0481                     l3965:	
  6434  0481  0845               	movf	___ftadd@exp1,w
  6435  0482  0644               	xorwf	___ftadd@exp2,w
  6436  0483  1D03               	skipz
  6437  0484  2C77               	goto	l3963
  6438  0485                     l841:	
  6439  0485  1FC3               	btfss	___ftadd@sign,7
  6440  0486  2C97               	goto	l3969
  6441  0487  30FF               	movlw	255
  6442  0488  06B9               	xorwf	___ftadd@f1,f
  6443  0489  30FF               	movlw	255
  6444  048A  06BA               	xorwf	___ftadd@f1+1,f
  6445  048B  30FF               	movlw	255
  6446  048C  06BB               	xorwf	___ftadd@f1+2,f
  6447  048D  3001               	movlw	1
  6448  048E  07B9               	addwf	___ftadd@f1,f
  6449  048F  3000               	movlw	0
  6450  0490  1803               	skipnc
  6451  0491  3001               	movlw	1
  6452  0492  07BA               	addwf	___ftadd@f1+1,f
  6453  0493  3000               	movlw	0
  6454  0494  1803               	skipnc
  6455  0495  3001               	movlw	1
  6456  0496  07BB               	addwf	___ftadd@f1+2,f
  6457  0497                     l3969:	
  6458  0497  1F43               	btfss	___ftadd@sign,6
  6459  0498  2CA9               	goto	l3973
  6460  0499  30FF               	movlw	255
  6461  049A  06BC               	xorwf	___ftadd@f2,f
  6462  049B  30FF               	movlw	255
  6463  049C  06BD               	xorwf	___ftadd@f2+1,f
  6464  049D  30FF               	movlw	255
  6465  049E  06BE               	xorwf	___ftadd@f2+2,f
  6466  049F  3001               	movlw	1
  6467  04A0  07BC               	addwf	___ftadd@f2,f
  6468  04A1  3000               	movlw	0
  6469  04A2  1803               	skipnc
  6470  04A3  3001               	movlw	1
  6471  04A4  07BD               	addwf	___ftadd@f2+1,f
  6472  04A5  3000               	movlw	0
  6473  04A6  1803               	skipnc
  6474  04A7  3001               	movlw	1
  6475  04A8  07BE               	addwf	___ftadd@f2+2,f
  6476  04A9                     l3973:	
  6477  04A9  01C3               	clrf	___ftadd@sign
  6478  04AA  0839               	movf	___ftadd@f1,w
  6479  04AB  07BC               	addwf	___ftadd@f2,f
  6480  04AC  083A               	movf	___ftadd@f1+1,w
  6481  04AD  3DBD               	addwfc	___ftadd@f2+1,f
  6482  04AE  083B               	movf	___ftadd@f1+2,w
  6483  04AF  3DBE               	addwfc	___ftadd@f2+2,f
  6484  04B0  1FBE               	btfss	___ftadd@f2+2,7
  6485  04B1  2CC4               	goto	l3983
  6486  04B2  30FF               	movlw	255
  6487  04B3  06BC               	xorwf	___ftadd@f2,f
  6488  04B4  30FF               	movlw	255
  6489  04B5  06BD               	xorwf	___ftadd@f2+1,f
  6490  04B6  30FF               	movlw	255
  6491  04B7  06BE               	xorwf	___ftadd@f2+2,f
  6492  04B8  3001               	movlw	1
  6493  04B9  07BC               	addwf	___ftadd@f2,f
  6494  04BA  3000               	movlw	0
  6495  04BB  1803               	skipnc
  6496  04BC  3001               	movlw	1
  6497  04BD  07BD               	addwf	___ftadd@f2+1,f
  6498  04BE  3000               	movlw	0
  6499  04BF  1803               	skipnc
  6500  04C0  3001               	movlw	1
  6501  04C1  07BE               	addwf	___ftadd@f2+2,f
  6502  04C2  01C3               	clrf	___ftadd@sign
  6503  04C3  0AC3               	incf	___ftadd@sign,f
  6504  04C4                     l3983:	
  6505  04C4  083C               	movf	___ftadd@f2,w
  6506  04C5  00F3               	movwf	___ftpack@arg
  6507  04C6  083D               	movf	___ftadd@f2+1,w
  6508  04C7  00F4               	movwf	___ftpack@arg+1
  6509  04C8  083E               	movf	___ftadd@f2+2,w
  6510  04C9  00F5               	movwf	___ftpack@arg+2
  6511  04CA  0845               	movf	___ftadd@exp1,w
  6512  04CB  00BF               	movwf	??___ftadd
  6513  04CC  083F               	movf	??___ftadd,w
  6514  04CD  00F6               	movwf	___ftpack@exp
  6515  04CE  0843               	movf	___ftadd@sign,w
  6516  04CF  00C0               	movwf	??___ftadd+1
  6517  04D0  0840               	movf	??___ftadd+1,w
  6518  04D1  00F7               	movwf	___ftpack@sign
  6519  04D2  318E  26A7         	fcall	___ftpack
  6520  04D4  0873               	movf	?___ftpack,w
  6521  04D5  0020               	movlb	0	; select bank0
  6522  04D6  00B9               	movwf	?___ftadd
  6523  04D7  0874               	movf	?___ftpack+1,w
  6524  04D8  00BA               	movwf	?___ftadd+1
  6525  04D9  0875               	movf	?___ftpack+2,w
  6526  04DA  00BB               	movwf	?___ftadd+2
  6527  04DB  0008               	return
  6528  04DC                     __end_of___ftadd:	
  6529                           
  6530                           	psect	text14
  6531  0D3A                     __ptext14:	
  6532 ;; *************** function ___awtoft *****************
  6533 ;; Defined at:
  6534 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\awtoft.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  c               2    3[BANK0 ] int 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  sign            1    8[BANK0 ] unsigned char 
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  3    3[BANK0 ] float 
  6541 ;; Registers used:
  6542 ;;		wreg, status,2, status,0, pclath, cstack
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6548 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;Total ram usage:        6 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    3
  6555 ;; This function calls:
  6556 ;;		___ftpack
  6557 ;; This function is called by:
  6558 ;;		_PI
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           
  6563                           ;psect for function ___awtoft
  6564  0D3A                     ___awtoft:	
  6565                           
  6566                           ;incstack = 0
  6567                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6568  0D3A  0020               	movlb	0	; select bank0
  6569  0D3B  01A8               	clrf	___awtoft@sign
  6570  0D3C  1FA4               	btfss	___awtoft@c+1,7
  6571  0D3D  2D45               	goto	l3913
  6572  0D3E  09A3               	comf	___awtoft@c,f
  6573  0D3F  09A4               	comf	___awtoft@c+1,f
  6574  0D40  0AA3               	incf	___awtoft@c,f
  6575  0D41  1903               	skipnz
  6576  0D42  0AA4               	incf	___awtoft@c+1,f
  6577  0D43  01A8               	clrf	___awtoft@sign
  6578  0D44  0AA8               	incf	___awtoft@sign,f
  6579  0D45                     l3913:	
  6580  0D45  0823               	movf	___awtoft@c,w
  6581  0D46  00F3               	movwf	___ftpack@arg
  6582  0D47  0824               	movf	___awtoft@c+1,w
  6583  0D48  00F4               	movwf	___ftpack@arg+1
  6584  0D49  01F5               	clrf	___ftpack@arg+2
  6585  0D4A  308E               	movlw	142
  6586  0D4B  00A6               	movwf	??___awtoft
  6587  0D4C  0826               	movf	??___awtoft,w
  6588  0D4D  00F6               	movwf	___ftpack@exp
  6589  0D4E  0828               	movf	___awtoft@sign,w
  6590  0D4F  00A7               	movwf	??___awtoft+1
  6591  0D50  0827               	movf	??___awtoft+1,w
  6592  0D51  00F7               	movwf	___ftpack@sign
  6593  0D52  318E  26A7         	fcall	___ftpack
  6594  0D54  0873               	movf	?___ftpack,w
  6595  0D55  0020               	movlb	0	; select bank0
  6596  0D56  00A3               	movwf	?___awtoft
  6597  0D57  0874               	movf	?___ftpack+1,w
  6598  0D58  00A4               	movwf	?___awtoft+1
  6599  0D59  0875               	movf	?___ftpack+2,w
  6600  0D5A  00A5               	movwf	?___awtoft+2
  6601  0D5B  0008               	return
  6602  0D5C                     __end_of___awtoft:	
  6603                           
  6604                           	psect	text15
  6605  0C45                     __ptext15:	
  6606 ;; *************** function _PWM5_LoadDutyValue *****************
  6607 ;; Defined at:
  6608 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  dutyValue       2    3[COMMON] unsigned int 
  6611 ;; Auto vars:     Size  Location     Type
  6612 ;;		None
  6613 ;; Return value:  Size  Location     Type
  6614 ;;                  1    wreg      void 
  6615 ;; Registers used:
  6616 ;;		wreg, status,2, status,0
  6617 ;; Tracked objects:
  6618 ;;		On entry : 0/0
  6619 ;;		On exit  : 0/0
  6620 ;;		Unchanged: 0/0
  6621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;Total ram usage:        4 bytes
  6627 ;; Hardware stack levels used:    1
  6628 ;; Hardware stack levels required when called:    2
  6629 ;; This function calls:
  6630 ;;		Nothing
  6631 ;; This function is called by:
  6632 ;;		_PI
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           
  6637                           ;psect for function _PWM5_LoadDutyValue
  6638  0C45                     _PWM5_LoadDutyValue:	
  6639                           
  6640                           ;pwm5.c: 77: PWM5DCH = (dutyValue & 0x03FC)>>2;
  6641                           
  6642                           ;incstack = 0
  6643                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
  6644  0C45  0874               	movf	PWM5_LoadDutyValue@dutyValue+1,w
  6645  0C46  00F6               	movwf	??_PWM5_LoadDutyValue+1
  6646  0C47  0873               	movf	PWM5_LoadDutyValue@dutyValue,w
  6647  0C48  00F5               	movwf	??_PWM5_LoadDutyValue
  6648  0C49  36F6               	lsrf	??_PWM5_LoadDutyValue+1,f
  6649  0C4A  0CF5               	rrf	??_PWM5_LoadDutyValue,f
  6650  0C4B  36F6               	lsrf	??_PWM5_LoadDutyValue+1,f
  6651  0C4C  0CF5               	rrf	??_PWM5_LoadDutyValue,f
  6652  0C4D  0875               	movf	??_PWM5_LoadDutyValue,w
  6653  0C4E  002C               	movlb	12	; select bank12
  6654  0C4F  0098               	movwf	24	;volatile
  6655                           
  6656                           ;pwm5.c: 80: PWM5DCL = (dutyValue & 0x0003)<<6;
  6657  0C50  0873               	movf	PWM5_LoadDutyValue@dutyValue,w
  6658  0C51  3903               	andlw	3
  6659  0C52  00F5               	movwf	??_PWM5_LoadDutyValue
  6660  0C53  3005               	movlw	5
  6661  0C54                     u4755:	
  6662  0C54  35F5               	lslf	??_PWM5_LoadDutyValue,f
  6663  0C55  3EFF               	addlw	-1
  6664  0C56  1D03               	skipz
  6665  0C57  2C54               	goto	u4755
  6666  0C58  3575               	lslf	??_PWM5_LoadDutyValue,w
  6667  0C59  0097               	movwf	23	;volatile
  6668  0C5A  0008               	return
  6669  0C5B                     __end_of_PWM5_LoadDutyValue:	
  6670                           
  6671                           	psect	text16
  6672  0B7A                     __ptext16:	
  6673 ;; *************** function _ADC_GetResult *****************
  6674 ;; Defined at:
  6675 ;;		line 139 in file "mcc_generated_files/adc.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;		None
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  2    3[COMMON] unsigned int 
  6682 ;; Registers used:
  6683 ;;		wreg
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;Total ram usage:        2 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:    2
  6696 ;; This function calls:
  6697 ;;		Nothing
  6698 ;; This function is called by:
  6699 ;;		_PI
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _ADC_GetResult
  6705  0B7A                     _ADC_GetResult:	
  6706                           
  6707                           ;adc.c: 140: return ADC_result;
  6708                           
  6709                           ;incstack = 0
  6710                           ; Regs used in _ADC_GetResult: [wreg]
  6711  0B7A  0021               	movlb	1	; select bank1
  6712  0B7B  0843               	movf	(_ADC_result+1)^(0+128),w
  6713  0B7C  00F4               	movwf	?_ADC_GetResult+1
  6714  0B7D  0842               	movf	_ADC_result^(0+128),w
  6715  0B7E  00F3               	movwf	?_ADC_GetResult
  6716  0B7F  0008               	return
  6717  0B80                     __end_of_ADC_GetResult:	
  6718                           
  6719                           	psect	text17
  6720  04DC                     __ptext17:	
  6721 ;; *************** function _Java *****************
  6722 ;; Defined at:
  6723 ;;		line 26 in file "UART.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;		None
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  i               2    0[BANK1 ] int 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;Total ram usage:        4 bytes
  6742 ;; Hardware stack levels used:    1
  6743 ;; Hardware stack levels required when called:    6
  6744 ;; This function calls:
  6745 ;;		_EUSART_Read
  6746 ;;		_PI_GetSensorHeight
  6747 ;;		_PI_SetKi
  6748 ;;		_PI_SetKp
  6749 ;;		_PI_SetSetpoint
  6750 ;;		_atof
  6751 ;;		_atoi
  6752 ;;		_printf
  6753 ;;		_toupper
  6754 ;; This function is called by:
  6755 ;;		_main
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           
  6760                           ;psect for function _Java
  6761  04DC                     _Java:	
  6762                           
  6763                           ;UART.c: 28: if (printCycle > 10) {
  6764                           
  6765                           ;incstack = 0
  6766                           ; Regs used in _Java: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6767  04DC  0021               	movlb	1	; select bank1
  6768  04DD  084F               	movf	(_printCycle+1)^(0+128),w
  6769  04DE  3A80               	xorlw	128
  6770  04DF  0020               	movlb	0	; select bank0
  6771  04E0  00E4               	movwf	??_Java
  6772  04E1  3080               	movlw	128
  6773  04E2  0264               	subwf	??_Java,w
  6774  04E3  1D03               	skipz
  6775  04E4  2CE8               	goto	u5325
  6776  04E5  300B               	movlw	11
  6777  04E6  0021               	movlb	1	; select bank1
  6778  04E7  024E               	subwf	_printCycle^(0+128),w
  6779  04E8                     u5325:	
  6780  04E8  1C03               	skipc
  6781  04E9  2D0D               	goto	l4091
  6782                           
  6783                           ;UART.c: 29: sensorHeight = PI_GetSensorHeight();
  6784  04EA  318B  236E  3184   	fcall	_PI_GetSensorHeight
  6785  04ED  0874               	movf	?_PI_GetSensorHeight+1,w
  6786  04EE  0021               	movlb	1	; select bank1
  6787  04EF  00BF               	movwf	(UART@sensorHeight+1)^(0+128)
  6788  04F0  0873               	movf	?_PI_GetSensorHeight,w
  6789  04F1  00BE               	movwf	UART@sensorHeight^(0+128)
  6790                           
  6791                           ;UART.c: 30: printf("%d", sensorHeight);
  6792  04F2  300A               	movlw	low (STR_1| (0+32768))
  6793  04F3  0020               	movlb	0	; select bank0
  6794  04F4  00A9               	movwf	printf@f
  6795  04F5  3090               	movlw	high (STR_1| (0+32768))
  6796  04F6  00AA               	movwf	printf@f+1
  6797  04F7  0021               	movlb	1	; select bank1
  6798  04F8  083F               	movf	(UART@sensorHeight+1)^(0+128),w
  6799  04F9  0020               	movlb	0	; select bank0
  6800  04FA  00AC               	movwf	?_printf+3
  6801  04FB  0021               	movlb	1	; select bank1
  6802  04FC  083E               	movf	UART@sensorHeight^(0+128),w
  6803  04FD  0020               	movlb	0	; select bank0
  6804  04FE  00AB               	movwf	?_printf+2
  6805  04FF  3185  25C6  3184   	fcall	_printf
  6806                           
  6807                           ;UART.c: 31: printf(">");
  6808  0502  300D               	movlw	low (STR_2| (0+32768))
  6809  0503  0020               	movlb	0	; select bank0
  6810  0504  00A9               	movwf	printf@f
  6811  0505  3090               	movlw	high (STR_2| (0+32768))
  6812  0506  00AA               	movwf	printf@f+1
  6813  0507  3185  25C6  3184   	fcall	_printf
  6814                           
  6815                           ;UART.c: 32: printCycle = 0;
  6816  050A  0021               	movlb	1	; select bank1
  6817  050B  01CE               	clrf	_printCycle^(0+128)
  6818  050C  01CF               	clrf	(_printCycle+1)^(0+128)
  6819  050D                     l4091:	
  6820                           
  6821                           ;UART.c: 33: }
  6822                           ;UART.c: 34: printCycle++;
  6823  050D  3001               	movlw	1
  6824  050E  0021               	movlb	1	; select bank1
  6825  050F  07CE               	addwf	_printCycle^(0+128),f
  6826  0510  3000               	movlw	0
  6827  0511  3DCF               	addwfc	(_printCycle+1)^(0+128),f
  6828                           
  6829                           ;UART.c: 37: if ((eusartRxCount)) {
  6830  0512  0878               	movf	_eusartRxCount,w	;volatile
  6831  0513  1903               	btfsc	3,2
  6832  0514  0008               	return
  6833                           
  6834                           ;UART.c: 38: index = 0;
  6835  0515  01CC               	clrf	_index^(0+128)
  6836  0516  01CD               	clrf	(_index+1)^(0+128)
  6837                           
  6838                           ;UART.c: 39: _delay((unsigned long)((30)*(32000000/4000.0)));
  6839  0517  3002               	movlw	2
  6840  0518  0020               	movlb	0	; select bank0
  6841  0519  00E5               	movwf	??_Java+1
  6842  051A  3038               	movlw	56
  6843  051B  00E4               	movwf	??_Java
  6844  051C  30AD               	movlw	173
  6845  051D                     u5387:	
  6846  051D  0B89               	decfsz	9,f
  6847  051E  2D1D               	goto	u5387
  6848  051F  0BE4               	decfsz	??_Java,f
  6849  0520  2D1D               	goto	u5387
  6850  0521  0BE5               	decfsz	??_Java+1,f
  6851  0522  2D1D               	goto	u5387
  6852  0523                     l4103:	
  6853                           ;UART.c: 40: while ((eusartRxCount)) {
  6854                           
  6855  0523  0878               	movf	_eusartRxCount,w	;volatile
  6856  0524  1903               	btfsc	3,2
  6857  0525  2D39               	goto	l4105
  6858                           
  6859                           ;UART.c: 41: data[index] = EUSART_Read();
  6860  0526  318C  24C3  3184   	fcall	_EUSART_Read
  6861  0529  0020               	movlb	0	; select bank0
  6862  052A  00E4               	movwf	??_Java
  6863  052B  0021               	movlb	1	; select bank1
  6864  052C  084C               	movf	_index^(0+128),w
  6865  052D  3EA0               	addlw	(low (_data| 0))& (0+255)
  6866  052E  0086               	movwf	6
  6867  052F  0187               	clrf	7
  6868  0530  0020               	movlb	0	; select bank0
  6869  0531  0864               	movf	??_Java,w
  6870  0532  0081               	movwf	1
  6871                           
  6872                           ;UART.c: 42: index++;
  6873  0533  3001               	movlw	1
  6874  0534  0021               	movlb	1	; select bank1
  6875  0535  07CC               	addwf	_index^(0+128),f
  6876  0536  3000               	movlw	0
  6877  0537  3DCD               	addwfc	(_index+1)^(0+128),f
  6878  0538  2D23               	goto	l4103
  6879  0539                     l4105:	
  6880                           
  6881                           ;UART.c: 43: }
  6882                           ;UART.c: 44: data[index] = '\0';
  6883  0539  0021               	movlb	1	; select bank1
  6884  053A  084C               	movf	_index^(0+128),w
  6885  053B  3EA0               	addlw	(low (_data| 0))& (0+255)
  6886  053C  0086               	movwf	6
  6887  053D  0187               	clrf	7
  6888  053E  0181               	clrf	1
  6889                           
  6890                           ;UART.c: 45: command = data[0];
  6891  053F  0820               	movf	_data^(0+128),w
  6892  0540  0020               	movlb	0	; select bank0
  6893  0541  00E4               	movwf	??_Java
  6894  0542  0864               	movf	??_Java,w
  6895  0543  00E9               	movwf	_command
  6896                           
  6897                           ;UART.c: 46: command = toupper(command);
  6898  0544  0869               	movf	_command,w
  6899  0545  318C  2413  3184   	fcall	_toupper
  6900  0548  0020               	movlb	0	; select bank0
  6901  0549  00E4               	movwf	??_Java
  6902  054A  0864               	movf	??_Java,w
  6903  054B  00E9               	movwf	_command
  6904                           
  6905                           ;UART.c: 47: for (int i = 0; i <8; i++){
  6906  054C  0021               	movlb	1	; select bank1
  6907  054D  01DE               	clrf	Java@i^(0+128)
  6908  054E  01DF               	clrf	(Java@i+1)^(0+128)
  6909  054F                     L1:	
  6910  054F  085F               	movf	(Java@i+1)^(0+128),w
  6911  0550  3A80               	xorlw	128
  6912  0551  0020               	movlb	0	; select bank0
  6913  0552  00E4               	movwf	??_Java
  6914  0553  3080               	movlw	128
  6915  0554  0264               	subwf	??_Java,w
  6916  0555  1D03               	skipz
  6917  0556  2D5A               	goto	u5355
  6918  0557  3008               	movlw	8
  6919  0558  0021               	movlb	1	; select bank1
  6920  0559  025E               	subwf	Java@i^(0+128),w
  6921  055A                     u5355:	
  6922  055A  1803               	btfsc	3,0
  6923  055B  2DB8               	goto	l4137
  6924                           
  6925                           ;UART.c: 48: value[i] = data[i+1];
  6926  055C  0021               	movlb	1	; select bank1
  6927  055D  085E               	movf	Java@i^(0+128),w
  6928  055E  3E01               	addlw	1
  6929  055F  3EA0               	addlw	(low (_data| 0))& (0+255)
  6930  0560  0086               	movwf	6
  6931  0561  0187               	clrf	7
  6932  0562  0801               	movf	1,w
  6933  0563  0020               	movlb	0	; select bank0
  6934  0564  00E4               	movwf	??_Java
  6935  0565  0021               	movlb	1	; select bank1
  6936  0566  085E               	movf	Java@i^(0+128),w
  6937  0567  3ED2               	addlw	(low (_value| 0))& (0+255)
  6938  0568  0086               	movwf	6
  6939  0569  0187               	clrf	7
  6940  056A  0020               	movlb	0	; select bank0
  6941  056B  0864               	movf	??_Java,w
  6942  056C  0081               	movwf	1
  6943  056D  3001               	movlw	1
  6944  056E  0021               	movlb	1	; select bank1
  6945  056F  07DE               	addwf	Java@i^(0+128),f
  6946  0570  3000               	movlw	0
  6947  0571  3DDF               	addwfc	(Java@i+1)^(0+128),f
  6948  0572  2D4F               	goto	L1
  6949  0573                     l4123:	
  6950                           ;UART.c: 52: case 'S':
  6951                           
  6952                           ;UART.c: 49: }
  6953                           ;UART.c: 51: switch (command) {
  6954                           
  6955                           
  6956                           ;UART.c: 53: setpoint = atoi(value);
  6957  0573  30D2               	movlw	(low (_value| 0))& (0+255)
  6958  0574  318F  270E  3184   	fcall	_atoi
  6959  0577  0020               	movlb	0	; select bank0
  6960  0578  0823               	movf	?_atoi+1,w
  6961  0579  0021               	movlb	1	; select bank1
  6962  057A  00C1               	movwf	(UART@setpoint+1)^(0+128)
  6963  057B  0020               	movlb	0	; select bank0
  6964  057C  0822               	movf	?_atoi,w
  6965  057D  0021               	movlb	1	; select bank1
  6966  057E  00C0               	movwf	UART@setpoint^(0+128)
  6967                           
  6968                           ;UART.c: 54: PI_SetSetpoint(setpoint);
  6969  057F  0841               	movf	(UART@setpoint+1)^(0+128),w
  6970  0580  00F4               	movwf	PI_SetSetpoint@value+1
  6971  0581  0840               	movf	UART@setpoint^(0+128),w
  6972  0582  00F3               	movwf	PI_SetSetpoint@value
  6973  0583  318B  2374         	fcall	_PI_SetSetpoint
  6974                           
  6975                           ;UART.c: 55: break;
  6976  0585  0008               	return
  6977  0586                     l4127:	
  6978                           ;UART.c: 56: case 'P':
  6979                           
  6980                           
  6981                           ;UART.c: 57: kp = atof(value);
  6982  0586  30D2               	movlw	(low (_value| 0))& (0+255)
  6983  0587  318C  2405  3184   	fcall	_atof
  6984  058A  0020               	movlb	0	; select bank0
  6985  058B  085F               	movf	?_atof,w
  6986  058C  0021               	movlb	1	; select bank1
  6987  058D  00BB               	movwf	UART@kp^(0+128)
  6988  058E  0020               	movlb	0	; select bank0
  6989  058F  0860               	movf	?_atof+1,w
  6990  0590  0021               	movlb	1	; select bank1
  6991  0591  00BC               	movwf	(UART@kp+1)^(0+128)
  6992  0592  0020               	movlb	0	; select bank0
  6993  0593  0861               	movf	?_atof+2,w
  6994  0594  0021               	movlb	1	; select bank1
  6995  0595  00BD               	movwf	(UART@kp+2)^(0+128)
  6996                           
  6997                           ;UART.c: 58: PI_SetKp(kp);
  6998  0596  083B               	movf	UART@kp^(0+128),w
  6999  0597  00F3               	movwf	PI_SetKp@value
  7000  0598  083C               	movf	(UART@kp+1)^(0+128),w
  7001  0599  00F4               	movwf	PI_SetKp@value+1
  7002  059A  083D               	movf	(UART@kp+2)^(0+128),w
  7003  059B  00F5               	movwf	PI_SetKp@value+2
  7004  059C  318B  238E         	fcall	_PI_SetKp
  7005                           
  7006                           ;UART.c: 59: break;
  7007  059E  0008               	return
  7008  059F                     l4131:	
  7009                           ;UART.c: 60: case 'I':
  7010                           
  7011                           
  7012                           ;UART.c: 61: ki = atof(value);
  7013  059F  30D2               	movlw	(low (_value| 0))& (0+255)
  7014  05A0  318C  2405  3184   	fcall	_atof
  7015  05A3  0020               	movlb	0	; select bank0
  7016  05A4  085F               	movf	?_atof,w
  7017  05A5  0021               	movlb	1	; select bank1
  7018  05A6  00B8               	movwf	UART@ki^(0+128)
  7019  05A7  0020               	movlb	0	; select bank0
  7020  05A8  0860               	movf	?_atof+1,w
  7021  05A9  0021               	movlb	1	; select bank1
  7022  05AA  00B9               	movwf	(UART@ki+1)^(0+128)
  7023  05AB  0020               	movlb	0	; select bank0
  7024  05AC  0861               	movf	?_atof+2,w
  7025  05AD  0021               	movlb	1	; select bank1
  7026  05AE  00BA               	movwf	(UART@ki+2)^(0+128)
  7027                           
  7028                           ;UART.c: 62: PI_SetKi(ki);
  7029  05AF  0838               	movf	UART@ki^(0+128),w
  7030  05B0  00F3               	movwf	PI_SetKi@value
  7031  05B1  0839               	movf	(UART@ki+1)^(0+128),w
  7032  05B2  00F4               	movwf	PI_SetKi@value+1
  7033  05B3  083A               	movf	(UART@ki+2)^(0+128),w
  7034  05B4  00F5               	movwf	PI_SetKi@value+2
  7035  05B5  318B  2386         	fcall	_PI_SetKi
  7036                           
  7037                           ;UART.c: 64: };
  7038                           
  7039                           ;UART.c: 63: break;
  7040  05B7  0008               	return
  7041  05B8                     l4137:	
  7042  05B8  0020               	movlb	0	; select bank0
  7043  05B9  0869               	movf	_command,w
  7044                           
  7045                           ; Switch size 1, requested type "space"
  7046                           ; Number of cases is 3, Range of values is 73 to 83
  7047                           ; switch strategies available:
  7048                           ; Name         Instructions Cycles
  7049                           ; simple_byte           10     6 (average)
  7050                           ; direct_byte           31     9 (fixed)
  7051                           ; jumptable            263     9 (fixed)
  7052                           ;	Chosen strategy is simple_byte
  7053  05BA  3A49               	xorlw	73	; case 73
  7054  05BB  1903               	skipnz
  7055  05BC  2D9F               	goto	l4131
  7056  05BD  3A19               	xorlw	25	; case 80
  7057  05BE  1903               	skipnz
  7058  05BF  2D86               	goto	l4127
  7059  05C0  3A03               	xorlw	3	; case 83
  7060  05C1  1903               	skipnz
  7061  05C2  2D73               	goto	l4123
  7062  05C3  2DC5               	goto	l433
  7063  05C4  0008               	return
  7064  05C5                     l433:	
  7065  05C5  0008               	return
  7066  05C6                     __end_of_Java:	
  7067                           
  7068                           	psect	text18
  7069  0C13                     __ptext18:	
  7070 ;; *************** function _toupper *****************
  7071 ;; Defined at:
  7072 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\toupper.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  c               1    wreg     unsigned char 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  c               1    4[COMMON] unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  1    wreg      unsigned char 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;Total ram usage:        2 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    2
  7093 ;; This function calls:
  7094 ;;		Nothing
  7095 ;; This function is called by:
  7096 ;;		_Java
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _toupper
  7102  0C13                     _toupper:	
  7103                           
  7104                           ;incstack = 0
  7105                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7106                           ;toupper@c stored from wreg
  7107  0C13  00F4               	movwf	toupper@c
  7108  0C14  307B               	movlw	123
  7109  0C15  0274               	subwf	toupper@c,w
  7110  0C16  1803               	skipnc
  7111  0C17  2C20               	goto	l3863
  7112  0C18  3061               	movlw	97
  7113  0C19  0274               	subwf	toupper@c,w
  7114  0C1A  1C03               	skipc
  7115  0C1B  2C20               	goto	l3863
  7116  0C1C  30DF               	movlw	223
  7117  0C1D  00F3               	movwf	??_toupper
  7118  0C1E  0873               	movf	??_toupper,w
  7119  0C1F  05F4               	andwf	toupper@c,f
  7120  0C20                     l3863:	
  7121  0C20  0874               	movf	toupper@c,w
  7122  0C21  0008               	return
  7123  0C22                     __end_of_toupper:	
  7124                           
  7125                           	psect	text19
  7126  05C6                     __ptext19:	
  7127 ;; *************** function _printf *****************
  7128 ;; Defined at:
  7129 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\doprnt.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  f               2    9[BANK0 ] PTR const unsigned char 
  7132 ;;		 -> STR_2(2), STR_1(3), 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  tmpval          4    0        struct .
  7135 ;;  val             2   20[BANK0 ] unsigned int 
  7136 ;;  cp              2    0        PTR const unsigned char 
  7137 ;;  len             2    0        unsigned int 
  7138 ;;  c               1   22[BANK0 ] char 
  7139 ;;  prec            1   19[BANK0 ] char 
  7140 ;;  flag            1   18[BANK0 ] unsigned char 
  7141 ;;  ap              1   17[BANK0 ] PTR void [1]
  7142 ;;		 -> ?_printf(2), 
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  2    9[BANK0 ] int 
  7145 ;; Registers used:
  7146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;Total ram usage:       14 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    4
  7159 ;; This function calls:
  7160 ;;		___lwdiv
  7161 ;;		___lwmod
  7162 ;;		_putch
  7163 ;; This function is called by:
  7164 ;;		_Java
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           
  7169                           ;psect for function _printf
  7170  05C6                     _printf:	
  7171                           
  7172                           ;doprnt.c: 466: va_list ap;
  7173                           ;doprnt.c: 499: signed char c;
  7174                           ;doprnt.c: 506: signed char prec;
  7175                           ;doprnt.c: 508: unsigned char flag;
  7176                           ;doprnt.c: 523: union {
  7177                           ;doprnt.c: 524: unsigned long vd;
  7178                           ;doprnt.c: 525: double integ;
  7179                           ;doprnt.c: 526: } tmpval;
  7180                           ;doprnt.c: 528: unsigned int val;
  7181                           ;doprnt.c: 529: unsigned len;
  7182                           ;doprnt.c: 530: const char * cp;
  7183                           ;doprnt.c: 533: *ap = __va_start();
  7184                           
  7185                           ;incstack = 0
  7186                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7187  05C6  302B               	movlw	(low ((?_printf| 0+2)))& (0+255)
  7188  05C7  0020               	movlb	0	; select bank0
  7189  05C8  00AD               	movwf	??_printf
  7190  05C9  082D               	movf	??_printf,w
  7191  05CA  00B1               	movwf	printf@ap
  7192  05CB                     l3855:	
  7193                           ;doprnt.c: 536: while(c = *f++) {
  7194                           
  7195  05CB  0020               	movlb	0	; select bank0
  7196  05CC  082A               	movf	printf@f+1,w
  7197  05CD  00AE               	movwf	??_printf+1
  7198  05CE  0829               	movf	printf@f,w
  7199  05CF  00AD               	movwf	??_printf
  7200  05D0  0AA9               	incf	printf@f,f
  7201  05D1  1903               	skipnz
  7202  05D2  0AAA               	incf	printf@f+1,f
  7203  05D3  082D               	movf	??_printf,w
  7204  05D4  0084               	movwf	4
  7205  05D5  082E               	movf	??_printf+1,w
  7206  05D6  0085               	movwf	5
  7207  05D7  0800               	movf	0,w	;code access
  7208  05D8  00AF               	movwf	??_printf+2
  7209  05D9  082F               	movf	??_printf+2,w
  7210  05DA  00B6               	movwf	printf@c
  7211  05DB  0836               	movf	printf@c,w
  7212  05DC  1903               	btfsc	3,2
  7213  05DD  0008               	return
  7214                           
  7215                           ;doprnt.c: 538: if(c != '%')
  7216  05DE  3025               	movlw	37
  7217  05DF  0636               	xorwf	printf@c,w
  7218  05E0  1903               	btfsc	3,2
  7219  05E1  2DE7               	goto	l3815
  7220                           
  7221                           ;doprnt.c: 540: {
  7222                           ;doprnt.c: 541: (putch(c) );
  7223  05E2  0836               	movf	printf@c,w
  7224  05E3  318B  235F  3185   	fcall	_putch
  7225                           
  7226                           ;doprnt.c: 542: continue;
  7227  05E6  2DCB               	goto	l3855
  7228  05E7                     l3815:	
  7229                           
  7230                           ;doprnt.c: 543: }
  7231                           ;doprnt.c: 548: flag = 0;
  7232  05E7  0020               	movlb	0	; select bank0
  7233  05E8  01B2               	clrf	printf@flag
  7234                           
  7235                           ;doprnt.c: 822: }
  7236                           
  7237                           ;doprnt.c: 813: continue;
  7238                           
  7239                           ;doprnt.c: 802: default:
  7240                           
  7241                           ;doprnt.c: 698: case 'i':
  7242                           ;doprnt.c: 699: break;
  7243                           
  7244                           ;doprnt.c: 697: case 'd':
  7245                           
  7246                           ;doprnt.c: 638: goto alldone;
  7247                           
  7248                           ;doprnt.c: 637: case 0:
  7249                           
  7250                           ;doprnt.c: 635: switch(c = *f++) {
  7251  05E9  082A               	movf	printf@f+1,w
  7252  05EA  00AE               	movwf	??_printf+1
  7253  05EB  0829               	movf	printf@f,w
  7254  05EC  00AD               	movwf	??_printf
  7255  05ED  0AA9               	incf	printf@f,f
  7256  05EE  1903               	skipnz
  7257  05EF  0AAA               	incf	printf@f+1,f
  7258  05F0  082D               	movf	??_printf,w
  7259  05F1  0084               	movwf	4
  7260  05F2  082E               	movf	??_printf+1,w
  7261  05F3  0085               	movwf	5
  7262  05F4  0800               	movf	0,w	;code access
  7263  05F5  00B6               	movwf	printf@c
  7264                           
  7265                           ; Switch size 1, requested type "space"
  7266                           ; Number of cases is 3, Range of values is 0 to 105
  7267                           ; switch strategies available:
  7268                           ; Name         Instructions Cycles
  7269                           ; simple_byte           10     6 (average)
  7270                           ; direct_byte          218     6 (fixed)
  7271                           ; jumptable            260     6 (fixed)
  7272                           ;	Chosen strategy is simple_byte
  7273  05F6  3A00               	xorlw	0	; case 0
  7274  05F7  1903               	skipnz
  7275  05F8  2E7D               	goto	l463
  7276  05F9  3A64               	xorlw	100	; case 100
  7277  05FA  1903               	skipnz
  7278  05FB  2E00               	goto	l3821
  7279  05FC  3A0D               	xorlw	13	; case 105
  7280  05FD  1903               	skipnz
  7281  05FE  2E00               	goto	l3821
  7282  05FF  2DCB               	goto	l3855
  7283  0600                     l3821:	
  7284                           
  7285                           ;doprnt.c: 1253: {
  7286                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7287  0600  0831               	movf	printf@ap,w
  7288  0601  0086               	movwf	6
  7289  0602  0187               	clrf	7
  7290  0603  3F40               	moviw [0]fsr1
  7291  0604  00B4               	movwf	printf@val
  7292  0605  3F41               	moviw [1]fsr1
  7293  0606  00B5               	movwf	printf@val+1
  7294  0607  3002               	movlw	2
  7295  0608  00AD               	movwf	??_printf
  7296  0609  082D               	movf	??_printf,w
  7297  060A  07B1               	addwf	printf@ap,f
  7298                           
  7299                           ;doprnt.c: 1261: if((int)val < 0) {
  7300  060B  1FB5               	btfss	printf@val+1,7
  7301  060C  2E16               	goto	l3831
  7302                           
  7303                           ;doprnt.c: 1262: flag |= 0x03;
  7304  060D  3003               	movlw	3
  7305  060E  00AD               	movwf	??_printf
  7306  060F  082D               	movf	??_printf,w
  7307  0610  04B2               	iorwf	printf@flag,f
  7308                           
  7309                           ;doprnt.c: 1263: val = -val;
  7310  0611  09B4               	comf	printf@val,f
  7311  0612  09B5               	comf	printf@val+1,f
  7312  0613  0AB4               	incf	printf@val,f
  7313  0614  1903               	skipnz
  7314  0615  0AB5               	incf	printf@val+1,f
  7315  0616                     l3831:	
  7316                           
  7317                           ;doprnt.c: 1264: }
  7318                           ;doprnt.c: 1266: }
  7319                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7320  0616  01B6               	clrf	printf@c
  7321  0617  0AB6               	incf	printf@c,f
  7322  0618  3005               	movlw	5
  7323  0619  0636               	xorwf	printf@c,w
  7324  061A  1903               	btfsc	3,2
  7325  061B  2E3B               	goto	l3843
  7326  061C                     l3837:	
  7327                           
  7328                           ;doprnt.c: 1306: if(val < dpowers[c])
  7329  061C  0836               	movf	printf@c,w
  7330  061D  00AD               	movwf	??_printf
  7331  061E  01AE               	clrf	??_printf+1
  7332  061F  35AD               	lslf	??_printf,f
  7333  0620  0DAE               	rlf	??_printf+1,f
  7334  0621  3000               	movlw	low (_dpowers| (0+32768))
  7335  0622  072D               	addwf	??_printf,w
  7336  0623  0084               	movwf	4
  7337  0624  3090               	movlw	high (_dpowers| (0+32768))
  7338  0625  3D2E               	addwfc	??_printf+1,w
  7339  0626  0085               	movwf	5
  7340  0627  3F00               	moviw [0]fsr0
  7341  0628  00AF               	movwf	??_printf+2
  7342  0629  3F01               	moviw [1]fsr0
  7343  062A  00B0               	movwf	??_printf+3
  7344  062B  0830               	movf	??_printf+3,w
  7345  062C  0235               	subwf	printf@val+1,w
  7346  062D  1D03               	skipz
  7347  062E  2E31               	goto	u4795
  7348  062F  082F               	movf	??_printf+2,w
  7349  0630  0234               	subwf	printf@val,w
  7350  0631                     u4795:	
  7351  0631  1C03               	btfss	3,0
  7352  0632  2E3B               	goto	l3843
  7353                           
  7354                           ;doprnt.c: 1307: break;
  7355  0633  3001               	movlw	1
  7356  0634  00AD               	movwf	??_printf
  7357  0635  082D               	movf	??_printf,w
  7358  0636  07B6               	addwf	printf@c,f
  7359  0637  3005               	movlw	5
  7360  0638  0636               	xorwf	printf@c,w
  7361  0639  1D03               	btfss	3,2
  7362  063A  2E1C               	goto	l3837
  7363  063B                     l3843:	
  7364                           
  7365                           ;doprnt.c: 1422: {
  7366                           ;doprnt.c: 1438: if(flag & 0x03)
  7367  063B  0832               	movf	printf@flag,w
  7368  063C  3903               	andlw	3
  7369  063D  1903               	btfsc	3,2
  7370  063E  2E43               	goto	l3847
  7371                           
  7372                           ;doprnt.c: 1439: (putch('-') );
  7373  063F  302D               	movlw	45
  7374  0640  318B  235F  3185   	fcall	_putch
  7375  0643                     l3847:	
  7376                           
  7377                           ;doprnt.c: 1469: }
  7378                           ;doprnt.c: 1472: prec = c;
  7379  0643  0020               	movlb	0	; select bank0
  7380  0644  0836               	movf	printf@c,w
  7381  0645  00AD               	movwf	??_printf
  7382  0646  082D               	movf	??_printf,w
  7383  0647  00B3               	movwf	printf@prec
  7384  0648                     l3853:	
  7385                           ;doprnt.c: 1474: while(prec--) {
  7386                           
  7387  0648  30FF               	movlw	255
  7388  0649  0020               	movlb	0	; select bank0
  7389  064A  00AD               	movwf	??_printf
  7390  064B  082D               	movf	??_printf,w
  7391  064C  07B3               	addwf	printf@prec,f
  7392  064D  0A33               	incf	printf@prec,w
  7393  064E  1903               	btfsc	3,2
  7394  064F  2DCB               	goto	l3855
  7395                           
  7396                           ;doprnt.c: 1478: {
  7397                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7398  0650  300A               	movlw	10
  7399  0651  00A3               	movwf	___lwmod@divisor
  7400  0652  3000               	movlw	0
  7401  0653  00A4               	movwf	___lwmod@divisor+1
  7402  0654  0833               	movf	printf@prec,w
  7403  0655  00AD               	movwf	??_printf
  7404  0656  01AE               	clrf	??_printf+1
  7405  0657  35AD               	lslf	??_printf,f
  7406  0658  0DAE               	rlf	??_printf+1,f
  7407  0659  3000               	movlw	low (_dpowers| (0+32768))
  7408  065A  072D               	addwf	??_printf,w
  7409  065B  0084               	movwf	4
  7410  065C  3090               	movlw	high (_dpowers| (0+32768))
  7411  065D  3D2E               	addwfc	??_printf+1,w
  7412  065E  0085               	movwf	5
  7413  065F  3F00               	moviw [0]fsr0
  7414  0660  00F3               	movwf	___lwdiv@divisor
  7415  0661  3F01               	moviw [1]fsr0
  7416  0662  00F4               	movwf	___lwdiv@divisor+1
  7417  0663  0835               	movf	printf@val+1,w
  7418  0664  00F6               	movwf	___lwdiv@dividend+1
  7419  0665  0834               	movf	printf@val,w
  7420  0666  00F5               	movwf	___lwdiv@dividend
  7421  0667  318D  25B9  3185   	fcall	___lwdiv
  7422  066A  0874               	movf	?___lwdiv+1,w
  7423  066B  0020               	movlb	0	; select bank0
  7424  066C  00A6               	movwf	___lwmod@dividend+1
  7425  066D  0873               	movf	?___lwdiv,w
  7426  066E  00A5               	movwf	___lwmod@dividend
  7427  066F  318D  255C  3185   	fcall	___lwmod
  7428  0672  0020               	movlb	0	; select bank0
  7429  0673  0823               	movf	?___lwmod,w
  7430  0674  3E30               	addlw	48
  7431  0675  00AF               	movwf	??_printf+2
  7432  0676  082F               	movf	??_printf+2,w
  7433  0677  00B6               	movwf	printf@c
  7434                           
  7435                           ;doprnt.c: 1523: }
  7436                           ;doprnt.c: 1524: (putch(c) );
  7437  0678  0836               	movf	printf@c,w
  7438  0679  318B  235F  3185   	fcall	_putch
  7439  067C  2E48               	goto	l3853
  7440  067D                     l463:	
  7441                           ;doprnt.c: 1540: return 0;
  7442                           ;	Return value of _printf is never used
  7443                           
  7444                           ;doprnt.c: 1525: }
  7445                           ;doprnt.c: 1533: }
  7446                           ;doprnt.c: 1535: alldone:
  7447                           
  7448  067D  0008               	return
  7449  067E                     __end_of_printf:	
  7450                           
  7451                           	psect	text20
  7452  0B5F                     __ptext20:	
  7453 ;; *************** function _putch *****************
  7454 ;; Defined at:
  7455 ;;		line 160 in file "mcc_generated_files/eusart.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  txData          1    wreg     unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  txData          1    5[COMMON] unsigned char 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;Total ram usage:        1 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    3
  7476 ;; This function calls:
  7477 ;;		_EUSART_Write
  7478 ;; This function is called by:
  7479 ;;		_printf
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function _putch
  7485  0B5F                     _putch:	
  7486                           
  7487                           ;incstack = 0
  7488                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7489                           ;putch@txData stored from wreg
  7490  0B5F  00F5               	movwf	putch@txData
  7491                           
  7492                           ;eusart.c: 162: EUSART_Write(txData);
  7493  0B60  0875               	movf	putch@txData,w
  7494  0B61  318D  2519         	fcall	_EUSART_Write
  7495  0B63  0008               	return
  7496  0B64                     __end_of_putch:	
  7497                           
  7498                           	psect	text21
  7499  0D19                     __ptext21:	
  7500 ;; *************** function _EUSART_Write *****************
  7501 ;; Defined at:
  7502 ;;		line 132 in file "mcc_generated_files/eusart.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  txData          1    wreg     unsigned char 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  txData          1    4[COMMON] unsigned char 
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      void 
  7509 ;; Registers used:
  7510 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7520 ;;Total ram usage:        2 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    2
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_putch
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           
  7531                           ;psect for function _EUSART_Write
  7532  0D19                     _EUSART_Write:	
  7533                           
  7534                           ;incstack = 0
  7535                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7536                           ;EUSART_Write@txData stored from wreg
  7537  0D19  00F4               	movwf	EUSART_Write@txData
  7538  0D1A                     l3209:	
  7539                           ;eusart.c: 135: {
  7540                           
  7541                           ;eusart.c: 134: while(0 == eusartTxBufferRemaining)
  7542                           
  7543  0D1A  0021               	movlb	1	; select bank1
  7544  0D1B  0862               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
  7545  0D1C  1903               	btfsc	3,2
  7546  0D1D  2D1A               	goto	l3209
  7547                           
  7548                           ;eusart.c: 136: }
  7549                           ;eusart.c: 138: if(0 == PIE1bits.TXIE)
  7550  0D1E  1A11               	btfsc	17,4	;volatile
  7551  0D1F  2D24               	goto	l86
  7552                           
  7553                           ;eusart.c: 139: {
  7554                           ;eusart.c: 140: TX1REG = txData;
  7555  0D20  0874               	movf	EUSART_Write@txData,w
  7556  0D21  0023               	movlb	3	; select bank3
  7557  0D22  009A               	movwf	26	;volatile
  7558                           
  7559                           ;eusart.c: 141: }
  7560  0D23  2D37               	goto	l3223
  7561  0D24                     l86:	
  7562                           
  7563                           ;eusart.c: 142: else
  7564                           ;eusart.c: 143: {
  7565                           ;eusart.c: 144: PIE1bits.TXIE = 0;
  7566  0D24  1211               	bcf	17,4	;volatile
  7567                           
  7568                           ;eusart.c: 145: eusartTxBuffer[eusartTxHead++] = txData;
  7569  0D25  0874               	movf	EUSART_Write@txData,w
  7570  0D26  00F3               	movwf	??_EUSART_Write
  7571  0D27  0879               	movf	_eusartTxHead,w
  7572  0D28  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7573  0D29  0086               	movwf	6
  7574  0D2A  0187               	clrf	7
  7575  0D2B  0873               	movf	??_EUSART_Write,w
  7576  0D2C  0081               	movwf	1
  7577  0D2D  3001               	movlw	1
  7578  0D2E  00F3               	movwf	??_EUSART_Write
  7579  0D2F  0873               	movf	??_EUSART_Write,w
  7580  0D30  07F9               	addwf	_eusartTxHead,f
  7581                           
  7582                           ;eusart.c: 146: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  7583  0D31  3008               	movlw	8
  7584  0D32  0279               	subwf	_eusartTxHead,w
  7585  0D33  1803               	btfsc	3,0
  7586                           
  7587                           ;eusart.c: 147: {
  7588                           ;eusart.c: 148: eusartTxHead = 0;
  7589  0D34  01F9               	clrf	_eusartTxHead
  7590                           
  7591                           ;eusart.c: 149: }
  7592                           ;eusart.c: 150: eusartTxBufferRemaining--;
  7593  0D35  3001               	movlw	1
  7594  0D36  02E2               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
  7595  0D37                     l3223:	
  7596                           
  7597                           ;eusart.c: 151: }
  7598                           ;eusart.c: 152: PIE1bits.TXIE = 1;
  7599  0D37  0021               	movlb	1	; select bank1
  7600  0D38  1611               	bsf	17,4	;volatile
  7601  0D39  0008               	return
  7602  0D3A                     __end_of_EUSART_Write:	
  7603                           
  7604                           	psect	text22
  7605  0D5C                     __ptext22:	
  7606 ;; *************** function ___lwmod *****************
  7607 ;; Defined at:
  7608 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwmod.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  divisor         2    3[BANK0 ] unsigned int 
  7611 ;;  dividend        2    5[BANK0 ] unsigned int 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  counter         1    8[BANK0 ] unsigned char 
  7614 ;; Return value:  Size  Location     Type
  7615 ;;                  2    3[BANK0 ] unsigned int 
  7616 ;; Registers used:
  7617 ;;		wreg, status,2, status,0
  7618 ;; Tracked objects:
  7619 ;;		On entry : 0/0
  7620 ;;		On exit  : 0/0
  7621 ;;		Unchanged: 0/0
  7622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7623 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;Total ram usage:        6 bytes
  7628 ;; Hardware stack levels used:    1
  7629 ;; Hardware stack levels required when called:    2
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_printf
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           
  7638                           ;psect for function ___lwmod
  7639  0D5C                     ___lwmod:	
  7640                           
  7641                           ;incstack = 0
  7642                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7643  0D5C  0020               	movlb	0	; select bank0
  7644  0D5D  0823               	movf	___lwmod@divisor,w
  7645  0D5E  0424               	iorwf	___lwmod@divisor+1,w
  7646  0D5F  1903               	btfsc	3,2
  7647  0D60  2D84               	goto	l3673
  7648  0D61  01A8               	clrf	___lwmod@counter
  7649  0D62  0AA8               	incf	___lwmod@counter,f
  7650  0D63                     l3663:	
  7651  0D63  1BA4               	btfsc	___lwmod@divisor+1,7
  7652  0D64  2D6F               	goto	l3665
  7653  0D65  3001               	movlw	1
  7654  0D66                     u4665:	
  7655  0D66  35A3               	lslf	___lwmod@divisor,f
  7656  0D67  0DA4               	rlf	___lwmod@divisor+1,f
  7657  0D68  0B89               	decfsz	9,f
  7658  0D69  2D66               	goto	u4665
  7659  0D6A  3001               	movlw	1
  7660  0D6B  00A7               	movwf	??___lwmod
  7661  0D6C  0827               	movf	??___lwmod,w
  7662  0D6D  07A8               	addwf	___lwmod@counter,f
  7663  0D6E  2D63               	goto	l3663
  7664  0D6F                     l3665:	
  7665  0D6F  0824               	movf	___lwmod@divisor+1,w
  7666  0D70  0226               	subwf	___lwmod@dividend+1,w
  7667  0D71  1D03               	skipz
  7668  0D72  2D75               	goto	u4685
  7669  0D73  0823               	movf	___lwmod@divisor,w
  7670  0D74  0225               	subwf	___lwmod@dividend,w
  7671  0D75                     u4685:	
  7672  0D75  1C03               	skipc
  7673  0D76  2D7B               	goto	l3669
  7674  0D77  0823               	movf	___lwmod@divisor,w
  7675  0D78  02A5               	subwf	___lwmod@dividend,f
  7676  0D79  0824               	movf	___lwmod@divisor+1,w
  7677  0D7A  3BA6               	subwfb	___lwmod@dividend+1,f
  7678  0D7B                     l3669:	
  7679  0D7B  3001               	movlw	1
  7680  0D7C                     u4695:	
  7681  0D7C  36A4               	lsrf	___lwmod@divisor+1,f
  7682  0D7D  0CA3               	rrf	___lwmod@divisor,f
  7683  0D7E  0B89               	decfsz	9,f
  7684  0D7F  2D7C               	goto	u4695
  7685  0D80  3001               	movlw	1
  7686  0D81  02A8               	subwf	___lwmod@counter,f
  7687  0D82  1D03               	btfss	3,2
  7688  0D83  2D6F               	goto	l3665
  7689  0D84                     l3673:	
  7690  0D84  0826               	movf	___lwmod@dividend+1,w
  7691  0D85  00A4               	movwf	?___lwmod+1
  7692  0D86  0825               	movf	___lwmod@dividend,w
  7693  0D87  00A3               	movwf	?___lwmod
  7694  0D88  0008               	return
  7695  0D89                     __end_of___lwmod:	
  7696                           
  7697                           	psect	text23
  7698  0DB9                     __ptext23:	
  7699 ;; *************** function ___lwdiv *****************
  7700 ;; Defined at:
  7701 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\lwdiv.c"
  7702 ;; Parameters:    Size  Location     Type
  7703 ;;  divisor         2    3[COMMON] unsigned int 
  7704 ;;  dividend        2    5[COMMON] unsigned int 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;  quotient        2    1[BANK0 ] unsigned int 
  7707 ;;  counter         1    0[BANK0 ] unsigned char 
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  2    3[COMMON] unsigned int 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;Total ram usage:        8 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    2
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_printf
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function ___lwdiv
  7733  0DB9                     ___lwdiv:	
  7734                           
  7735                           ;incstack = 0
  7736                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7737  0DB9  0020               	movlb	0	; select bank0
  7738  0DBA  01A1               	clrf	___lwdiv@quotient
  7739  0DBB  01A2               	clrf	___lwdiv@quotient+1
  7740  0DBC  0873               	movf	___lwdiv@divisor,w
  7741  0DBD  0474               	iorwf	___lwdiv@divisor+1,w
  7742  0DBE  1903               	btfsc	3,2
  7743  0DBF  2DE9               	goto	l3651
  7744  0DC0  01A0               	clrf	___lwdiv@counter
  7745  0DC1  0AA0               	incf	___lwdiv@counter,f
  7746  0DC2                     l3639:	
  7747  0DC2  1BF4               	btfsc	___lwdiv@divisor+1,7
  7748  0DC3  2DCE               	goto	l3641
  7749  0DC4  3001               	movlw	1
  7750  0DC5                     u4595:	
  7751  0DC5  35F3               	lslf	___lwdiv@divisor,f
  7752  0DC6  0DF4               	rlf	___lwdiv@divisor+1,f
  7753  0DC7  0B89               	decfsz	9,f
  7754  0DC8  2DC5               	goto	u4595
  7755  0DC9  3001               	movlw	1
  7756  0DCA  00F7               	movwf	??___lwdiv
  7757  0DCB  0877               	movf	??___lwdiv,w
  7758  0DCC  07A0               	addwf	___lwdiv@counter,f
  7759  0DCD  2DC2               	goto	l3639
  7760  0DCE                     l3641:	
  7761  0DCE  3001               	movlw	1
  7762  0DCF                     u4615:	
  7763  0DCF  35A1               	lslf	___lwdiv@quotient,f
  7764  0DD0  0DA2               	rlf	___lwdiv@quotient+1,f
  7765  0DD1  0B89               	decfsz	9,f
  7766  0DD2  2DCF               	goto	u4615
  7767  0DD3  0874               	movf	___lwdiv@divisor+1,w
  7768  0DD4  0276               	subwf	___lwdiv@dividend+1,w
  7769  0DD5  1D03               	skipz
  7770  0DD6  2DD9               	goto	u4625
  7771  0DD7  0873               	movf	___lwdiv@divisor,w
  7772  0DD8  0275               	subwf	___lwdiv@dividend,w
  7773  0DD9                     u4625:	
  7774  0DD9  1C03               	skipc
  7775  0DDA  2DE0               	goto	l3647
  7776  0DDB  0873               	movf	___lwdiv@divisor,w
  7777  0DDC  02F5               	subwf	___lwdiv@dividend,f
  7778  0DDD  0874               	movf	___lwdiv@divisor+1,w
  7779  0DDE  3BF6               	subwfb	___lwdiv@dividend+1,f
  7780  0DDF  1421               	bsf	___lwdiv@quotient,0
  7781  0DE0                     l3647:	
  7782  0DE0  3001               	movlw	1
  7783  0DE1                     u4635:	
  7784  0DE1  36F4               	lsrf	___lwdiv@divisor+1,f
  7785  0DE2  0CF3               	rrf	___lwdiv@divisor,f
  7786  0DE3  0B89               	decfsz	9,f
  7787  0DE4  2DE1               	goto	u4635
  7788  0DE5  3001               	movlw	1
  7789  0DE6  02A0               	subwf	___lwdiv@counter,f
  7790  0DE7  1D03               	btfss	3,2
  7791  0DE8  2DCE               	goto	l3641
  7792  0DE9                     l3651:	
  7793  0DE9  0822               	movf	___lwdiv@quotient+1,w
  7794  0DEA  00F4               	movwf	?___lwdiv+1
  7795  0DEB  0821               	movf	___lwdiv@quotient,w
  7796  0DEC  00F3               	movwf	?___lwdiv
  7797  0DED  0008               	return
  7798  0DEE                     __end_of___lwdiv:	
  7799                           
  7800                           	psect	text24
  7801  0F0E                     __ptext24:	
  7802 ;; *************** function _atoi *****************
  7803 ;; Defined at:
  7804 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atoi.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  s               1    wreg     PTR const unsigned char 
  7807 ;;		 -> value(7), 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  7810 ;;		 -> value(7), 
  7811 ;;  a               2    7[BANK0 ] int 
  7812 ;;  sign            1    6[BANK0 ] unsigned char 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  2    2[BANK0 ] int 
  7815 ;; Registers used:
  7816 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;Total ram usage:        8 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; Hardware stack levels required when called:    3
  7829 ;; This function calls:
  7830 ;;		___wmul
  7831 ;;		_isdigit
  7832 ;; This function is called by:
  7833 ;;		_Java
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           
  7838                           ;psect for function _atoi
  7839  0F0E                     _atoi:	
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7843                           ;atoi@s stored from wreg
  7844  0F0E  0020               	movlb	0	; select bank0
  7845  0F0F  00A9               	movwf	atoi@s
  7846  0F10                     l3871:	
  7847  0F10  0829               	movf	atoi@s,w
  7848  0F11  0086               	movwf	6
  7849  0F12  0187               	clrf	7
  7850  0F13  3020               	movlw	32
  7851  0F14  0601               	xorwf	1,w
  7852  0F15  1D03               	btfss	3,2
  7853  0F16  2F1C               	goto	l3873
  7854  0F17                     l3869:	
  7855  0F17  3001               	movlw	1
  7856  0F18  00A4               	movwf	??_atoi
  7857  0F19  0824               	movf	??_atoi,w
  7858  0F1A  07A9               	addwf	atoi@s,f
  7859  0F1B  2F10               	goto	l3871
  7860  0F1C                     l3873:	
  7861  0F1C  0829               	movf	atoi@s,w
  7862  0F1D  0086               	movwf	6
  7863  0F1E  0187               	clrf	7
  7864  0F1F  3009               	movlw	9
  7865  0F20  0601               	xorwf	1,w
  7866  0F21  1903               	btfsc	3,2
  7867  0F22  2F17               	goto	l3869
  7868  0F23  01A7               	clrf	atoi@a
  7869  0F24  01A8               	clrf	atoi@a+1
  7870  0F25  01A6               	clrf	atoi@sign
  7871  0F26  0829               	movf	atoi@s,w
  7872  0F27  0086               	movwf	6
  7873  0F28  0187               	clrf	7
  7874  0F29  302D               	movlw	45
  7875  0F2A  0601               	xorwf	1,w
  7876  0F2B  1D03               	btfss	3,2
  7877  0F2C  2F32               	goto	l3881
  7878  0F2D  3001               	movlw	1
  7879  0F2E  00A4               	movwf	??_atoi
  7880  0F2F  0824               	movf	??_atoi,w
  7881  0F30  07A6               	addwf	atoi@sign,f
  7882  0F31  2F39               	goto	l3887
  7883  0F32                     l3881:	
  7884  0F32  0829               	movf	atoi@s,w
  7885  0F33  0086               	movwf	6
  7886  0F34  0187               	clrf	7
  7887  0F35  302B               	movlw	43
  7888  0F36  0601               	xorwf	1,w
  7889  0F37  1D03               	btfss	3,2
  7890  0F38  2F3D               	goto	l3889
  7891  0F39                     l3887:	
  7892  0F39  3001               	movlw	1
  7893  0F3A  00A4               	movwf	??_atoi
  7894  0F3B  0824               	movf	??_atoi,w
  7895  0F3C  07A9               	addwf	atoi@s,f
  7896  0F3D                     l3889:	
  7897  0F3D  0829               	movf	atoi@s,w
  7898  0F3E  0086               	movwf	6
  7899  0F3F  0187               	clrf	7
  7900  0F40  0801               	movf	1,w
  7901  0F41  318B  23F7  318F   	fcall	_isdigit
  7902  0F44  1C03               	btfss	3,0
  7903  0F45  2F64               	goto	l3891
  7904  0F46  0020               	movlb	0	; select bank0
  7905  0F47  0828               	movf	atoi@a+1,w
  7906  0F48  00F4               	movwf	___wmul@multiplier+1
  7907  0F49  0827               	movf	atoi@a,w
  7908  0F4A  00F3               	movwf	___wmul@multiplier
  7909  0F4B  300A               	movlw	10
  7910  0F4C  00F5               	movwf	___wmul@multiplicand
  7911  0F4D  3000               	movlw	0
  7912  0F4E  00F6               	movwf	___wmul@multiplicand+1
  7913  0F4F  318C  24FB  318F   	fcall	___wmul
  7914  0F52  0020               	movlb	0	; select bank0
  7915  0F53  0829               	movf	atoi@s,w
  7916  0F54  0086               	movwf	6
  7917  0F55  0187               	clrf	7
  7918  0F56  0801               	movf	1,w
  7919  0F57  0773               	addwf	?___wmul,w
  7920  0F58  00A4               	movwf	??_atoi
  7921  0F59  0874               	movf	?___wmul+1,w
  7922  0F5A  1803               	skipnc
  7923  0F5B  0A74               	incf	?___wmul+1,w
  7924  0F5C  00A5               	movwf	??_atoi+1
  7925  0F5D  0824               	movf	??_atoi,w
  7926  0F5E  3ED0               	addlw	208
  7927  0F5F  00A7               	movwf	atoi@a
  7928  0F60  30FF               	movlw	255
  7929  0F61  3D25               	addwfc	??_atoi+1,w
  7930  0F62  00A8               	movwf	atoi@a+1
  7931  0F63  2F39               	goto	l3887
  7932  0F64                     l3891:	
  7933  0F64  0020               	movlb	0	; select bank0
  7934  0F65  0826               	movf	atoi@sign,w
  7935  0F66  1903               	btfsc	3,2
  7936  0F67  2F74               	goto	l3897
  7937  0F68  0927               	comf	atoi@a,w
  7938  0F69  00A4               	movwf	??_atoi
  7939  0F6A  0928               	comf	atoi@a+1,w
  7940  0F6B  00A5               	movwf	??_atoi+1
  7941  0F6C  0AA4               	incf	??_atoi,f
  7942  0F6D  1903               	skipnz
  7943  0F6E  0AA5               	incf	??_atoi+1,f
  7944  0F6F  0824               	movf	??_atoi,w
  7945  0F70  00A2               	movwf	?_atoi
  7946  0F71  0825               	movf	??_atoi+1,w
  7947  0F72  00A3               	movwf	?_atoi+1
  7948  0F73  0008               	return
  7949  0F74                     l3897:	
  7950  0F74  0828               	movf	atoi@a+1,w
  7951  0F75  00A3               	movwf	?_atoi+1
  7952  0F76  0827               	movf	atoi@a,w
  7953  0F77  00A2               	movwf	?_atoi
  7954  0F78  0008               	return
  7955  0F79                     __end_of_atoi:	
  7956                           
  7957                           	psect	text25
  7958  0CFB                     __ptext25:	
  7959 ;; *************** function ___wmul *****************
  7960 ;; Defined at:
  7961 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  multiplier      2    3[COMMON] unsigned int 
  7964 ;;  multiplicand    2    5[COMMON] unsigned int 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  product         2    0[BANK0 ] unsigned int 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  2    3[COMMON] unsigned int 
  7969 ;; Registers used:
  7970 ;;		wreg, status,2, status,0
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;Total ram usage:        6 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    2
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_atoi
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           
  7991                           ;psect for function ___wmul
  7992  0CFB                     ___wmul:	
  7993                           
  7994                           ;incstack = 0
  7995                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7996  0CFB  0020               	movlb	0	; select bank0
  7997  0CFC  01A0               	clrf	___wmul@product
  7998  0CFD  01A1               	clrf	___wmul@product+1
  7999  0CFE                     l3423:	
  8000  0CFE  1C73               	btfss	___wmul@multiplier,0
  8001  0CFF  2D05               	goto	l545
  8002  0D00  0875               	movf	___wmul@multiplicand,w
  8003  0D01  0020               	movlb	0	; select bank0
  8004  0D02  07A0               	addwf	___wmul@product,f
  8005  0D03  0876               	movf	___wmul@multiplicand+1,w
  8006  0D04  3DA1               	addwfc	___wmul@product+1,f
  8007  0D05                     l545:	
  8008  0D05  3001               	movlw	1
  8009  0D06                     u4225:	
  8010  0D06  35F5               	lslf	___wmul@multiplicand,f
  8011  0D07  0DF6               	rlf	___wmul@multiplicand+1,f
  8012  0D08  0B89               	decfsz	9,f
  8013  0D09  2D06               	goto	u4225
  8014  0D0A  3001               	movlw	1
  8015  0D0B                     u4235:	
  8016  0D0B  36F4               	lsrf	___wmul@multiplier+1,f
  8017  0D0C  0CF3               	rrf	___wmul@multiplier,f
  8018  0D0D  0B89               	decfsz	9,f
  8019  0D0E  2D0B               	goto	u4235
  8020  0D0F  0873               	movf	___wmul@multiplier,w
  8021  0D10  0474               	iorwf	___wmul@multiplier+1,w
  8022  0D11  1D03               	btfss	3,2
  8023  0D12  2CFE               	goto	l3423
  8024  0D13  0020               	movlb	0	; select bank0
  8025  0D14  0821               	movf	___wmul@product+1,w
  8026  0D15  00F4               	movwf	?___wmul+1
  8027  0D16  0820               	movf	___wmul@product,w
  8028  0D17  00F3               	movwf	?___wmul
  8029  0D18  0008               	return
  8030  0D19                     __end_of___wmul:	
  8031                           
  8032                           	psect	text26
  8033  0C05                     __ptext26:	
  8034 ;; *************** function _atof *****************
  8035 ;; Defined at:
  8036 ;;		line 200 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atof.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  s               1    wreg     PTR const unsigned char 
  8039 ;;		 -> value(7), 
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;  s               1   67[BANK0 ] PTR const unsigned char 
  8042 ;;		 -> value(7), 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  3   63[BANK0 ] PTR const unsigned char 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;Total ram usage:        5 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    5
  8059 ;; This function calls:
  8060 ;;		_strtod
  8061 ;; This function is called by:
  8062 ;;		_Java
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function _atof
  8068  0C05                     _atof:	
  8069                           
  8070                           ;incstack = 0
  8071                           ; Regs used in _atof: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8072                           ;atof@s stored from wreg
  8073  0C05  0020               	movlb	0	; select bank0
  8074  0C06  00E3               	movwf	atof@s
  8075  0C07  01C2               	clrf	strtod@res
  8076  0C08  0863               	movf	atof@s,w
  8077  0C09  3180  2062         	fcall	_strtod
  8078  0C0B  0020               	movlb	0	; select bank0
  8079  0C0C  0842               	movf	?_strtod,w
  8080  0C0D  00DF               	movwf	?_atof
  8081  0C0E  0843               	movf	?_strtod+1,w
  8082  0C0F  00E0               	movwf	?_atof+1
  8083  0C10  0844               	movf	?_strtod+2,w
  8084  0C11  00E1               	movwf	?_atof+2
  8085  0C12  0008               	return
  8086  0C13                     __end_of_atof:	
  8087                           
  8088                           	psect	text27
  8089  0062                     __ptext27:	
  8090 ;; *************** function _strtod *****************
  8091 ;; Defined at:
  8092 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atof.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;  s               1    wreg     PTR const unsigned char 
  8095 ;;		 -> value(7), 
  8096 ;;  res             1   34[BANK0 ] PTR PTR const unsigned c
  8097 ;;		 -> NULL(0), 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  s               1   62[BANK0 ] PTR const unsigned char 
  8100 ;;		 -> value(7), 
  8101 ;;  _u              4   58[BANK0 ] struct .
  8102 ;;  expon           1   57[BANK0 ] char 
  8103 ;;  flags           1   56[BANK0 ] unsigned char 
  8104 ;;  eexp            1   55[BANK0 ] char 
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  3   34[BANK0 ] char 
  8107 ;; Registers used:
  8108 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8114 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8115 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;Total ram usage:       29 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:    4
  8121 ;; This function calls:
  8122 ;;		___altoft
  8123 ;;		___bmul
  8124 ;;		___ftdiv
  8125 ;;		___ftge
  8126 ;;		___ftmul
  8127 ;;		___ftneg
  8128 ;;		___lmul
  8129 ;;		_isdigit
  8130 ;;		_isspace
  8131 ;; This function is called by:
  8132 ;;		_atof
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           
  8137                           ;psect for function _strtod
  8138  0062                     _strtod:	
  8139                           
  8140                           ;incstack = 0
  8141                           ; Regs used in _strtod: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8142                           ;strtod@s stored from wreg
  8143  0062  0020               	movlb	0	; select bank0
  8144  0063  00DE               	movwf	strtod@s
  8145  0064  0842               	movf	strtod@res,w
  8146  0065  1903               	btfsc	3,2
  8147  0066  286E               	goto	l3441
  8148  0067  085E               	movf	strtod@s,w
  8149  0068  00C5               	movwf	??_strtod
  8150  0069  0842               	movf	strtod@res,w
  8151  006A  0086               	movwf	6
  8152  006B  0187               	clrf	7
  8153  006C  0845               	movf	??_strtod,w
  8154  006D  0081               	movwf	1
  8155  006E                     l3441:	
  8156  006E  085E               	movf	strtod@s,w
  8157  006F  0086               	movwf	6
  8158  0070  0187               	clrf	7
  8159  0071  0801               	movf	1,w
  8160  0072  00D7               	movwf	strtod@eexp
  8161  0073  318C  2433  3180   	fcall	_isspace
  8162  0076  1C03               	btfss	3,0
  8163  0077  287E               	goto	l3443
  8164  0078  3001               	movlw	1
  8165  0079  0020               	movlb	0	; select bank0
  8166  007A  00C5               	movwf	??_strtod
  8167  007B  0845               	movf	??_strtod,w
  8168  007C  07DE               	addwf	strtod@s,f
  8169  007D  286E               	goto	l3441
  8170  007E                     l3443:	
  8171  007E  0020               	movlb	0	; select bank0
  8172  007F  01D8               	clrf	strtod@flags
  8173  0080  302D               	movlw	45
  8174  0081  0657               	xorwf	strtod@eexp,w
  8175  0082  1D03               	btfss	3,2
  8176  0083  2887               	goto	l3451
  8177  0084  01D8               	clrf	strtod@flags
  8178  0085  0AD8               	incf	strtod@flags,f
  8179  0086  288B               	goto	l3453
  8180  0087                     l3451:	
  8181  0087  302B               	movlw	43
  8182  0088  0657               	xorwf	strtod@eexp,w
  8183  0089  1D03               	btfss	3,2
  8184  008A  288F               	goto	l3455
  8185  008B                     l3453:	
  8186  008B  3001               	movlw	1
  8187  008C  00C5               	movwf	??_strtod
  8188  008D  0845               	movf	??_strtod,w
  8189  008E  07DE               	addwf	strtod@s,f
  8190  008F                     l3455:	
  8191  008F  01D7               	clrf	strtod@eexp
  8192  0090  3000               	movlw	0
  8193  0091  00DD               	movwf	strtod@_u+3
  8194  0092  3000               	movlw	0
  8195  0093  00DC               	movwf	strtod@_u+2
  8196  0094  3000               	movlw	0
  8197  0095  00DB               	movwf	strtod@_u+1
  8198  0096  3000               	movlw	0
  8199  0097  00DA               	movwf	strtod@_u
  8200  0098  01D9               	clrf	strtod@expon
  8201  0099  28A6               	goto	l3461
  8202  009A                     l3463:	
  8203  009A  085E               	movf	strtod@s,w
  8204  009B  0086               	movwf	6
  8205  009C  0187               	clrf	7
  8206  009D  302E               	movlw	46
  8207  009E  0601               	xorwf	1,w
  8208  009F  1D03               	btfss	3,2
  8209  00A0  28A8               	goto	l3469
  8210  00A1  1658               	bsf	strtod@flags,4
  8211  00A2                     L2:	
  8212  00A2  3001               	movlw	1
  8213  00A3  00C5               	movwf	??_strtod
  8214  00A4  0845               	movf	??_strtod,w
  8215  00A5  07DE               	addwf	strtod@s,f
  8216  00A6                     l3461:	
  8217  00A6  1E58               	btfss	strtod@flags,4
  8218  00A7  289A               	goto	l3463
  8219  00A8                     l3469:	
  8220  00A8  085E               	movf	strtod@s,w
  8221  00A9  0086               	movwf	6
  8222  00AA  0187               	clrf	7
  8223  00AB  0801               	movf	1,w
  8224  00AC  318B  23F7  3180   	fcall	_isdigit
  8225  00AF  1C03               	btfss	3,0
  8226  00B0  2909               	goto	l3489
  8227  00B1  0020               	movlb	0	; select bank0
  8228  00B2  14D8               	bsf	strtod@flags,1
  8229  00B3  3005               	movlw	5
  8230  00B4  00D5               	movwf	_strtod$892
  8231  00B5  3000               	movlw	0
  8232  00B6  00D6               	movwf	_strtod$892+1
  8233  00B7  0857               	movf	strtod@eexp,w
  8234  00B8  00C5               	movwf	??_strtod
  8235  00B9  01C6               	clrf	??_strtod+1
  8236  00BA  1BC5               	btfsc	??_strtod,7
  8237  00BB  03C6               	decf	??_strtod+1,f
  8238  00BC  0855               	movf	_strtod$892,w
  8239  00BD  3E03               	addlw	3
  8240  00BE  00C7               	movwf	??_strtod+2
  8241  00BF  3000               	movlw	0
  8242  00C0  3D56               	addwfc	_strtod$892+1,w
  8243  00C1  00C8               	movwf	??_strtod+3
  8244  00C2  0846               	movf	??_strtod+1,w
  8245  00C3  0648               	xorwf	??_strtod+3,w
  8246  00C4  1D03               	skipz
  8247  00C5  28C8               	goto	u4325
  8248  00C6  0845               	movf	??_strtod,w
  8249  00C7  0647               	xorwf	??_strtod+2,w
  8250  00C8                     u4325:	
  8251  00C8  1903               	skipnz
  8252  00C9  2902               	goto	l677
  8253  00CA  1E58               	btfss	strtod@flags,4
  8254  00CB  28D0               	goto	l682
  8255  00CC  30FF               	movlw	255
  8256  00CD  00C5               	movwf	??_strtod
  8257  00CE  0845               	movf	??_strtod,w
  8258  00CF  07D9               	addwf	strtod@expon,f
  8259  00D0                     l682:	
  8260  00D0  3001               	movlw	1
  8261  00D1  00C5               	movwf	??_strtod
  8262  00D2  0845               	movf	??_strtod,w
  8263  00D3  07D7               	addwf	strtod@eexp,f
  8264  00D4  3000               	movlw	0
  8265  00D5  00A3               	movwf	___lmul@multiplier+3
  8266  00D6  3000               	movlw	0
  8267  00D7  00A2               	movwf	___lmul@multiplier+2
  8268  00D8  3000               	movlw	0
  8269  00D9  00A1               	movwf	___lmul@multiplier+1
  8270  00DA  300A               	movlw	10
  8271  00DB  00A0               	movwf	___lmul@multiplier
  8272  00DC  085D               	movf	strtod@_u+3,w
  8273  00DD  00A7               	movwf	___lmul@multiplicand+3
  8274  00DE  085C               	movf	strtod@_u+2,w
  8275  00DF  00A6               	movwf	___lmul@multiplicand+2
  8276  00E0  085B               	movf	strtod@_u+1,w
  8277  00E1  00A5               	movwf	___lmul@multiplicand+1
  8278  00E2  085A               	movf	strtod@_u,w
  8279  00E3  00A4               	movwf	___lmul@multiplicand
  8280  00E4  318D  2589  3180   	fcall	___lmul
  8281  00E7  0020               	movlb	0	; select bank0
  8282  00E8  0823               	movf	?___lmul+3,w
  8283  00E9  00DD               	movwf	strtod@_u+3
  8284  00EA  0822               	movf	?___lmul+2,w
  8285  00EB  00DC               	movwf	strtod@_u+2
  8286  00EC  0821               	movf	?___lmul+1,w
  8287  00ED  00DB               	movwf	strtod@_u+1
  8288  00EE  0820               	movf	?___lmul,w
  8289  00EF  00DA               	movwf	strtod@_u
  8290  00F0  085E               	movf	strtod@s,w
  8291  00F1  0086               	movwf	6
  8292  00F2  0187               	clrf	7
  8293  00F3  0801               	movf	1,w
  8294  00F4  3ED0               	addlw	208
  8295  00F5  00C5               	movwf	??_strtod
  8296  00F6  01C6               	clrf	??_strtod+1
  8297  00F7  01C7               	clrf	??_strtod+2
  8298  00F8  01C8               	clrf	??_strtod+3
  8299  00F9  0845               	movf	??_strtod,w
  8300  00FA  07DA               	addwf	strtod@_u,f
  8301  00FB  0846               	movf	??_strtod+1,w
  8302  00FC  3DDB               	addwfc	strtod@_u+1,f
  8303  00FD  0847               	movf	??_strtod+2,w
  8304  00FE  3DDC               	addwfc	strtod@_u+2,f
  8305  00FF  0848               	movf	??_strtod+3,w
  8306  0100  3DDD               	addwfc	strtod@_u+3,f
  8307  0101  28A2               	goto	L2
  8308  0102                     l677:	
  8309  0102  1A58               	btfsc	strtod@flags,4
  8310  0103  28A2               	goto	L2
  8311  0104  3001               	movlw	1
  8312  0105  00C5               	movwf	??_strtod
  8313  0106  0845               	movf	??_strtod,w
  8314  0107  07D9               	addwf	strtod@expon,f
  8315  0108  28A2               	goto	L2
  8316  0109                     l3489:	
  8317  0109  0020               	movlb	0	; select bank0
  8318  010A  01D7               	clrf	strtod@eexp
  8319  010B  085E               	movf	strtod@s,w
  8320  010C  0086               	movwf	6
  8321  010D  0187               	clrf	7
  8322  010E  3065               	movlw	101
  8323  010F  0601               	xorwf	1,w
  8324  0110  1903               	btfsc	3,2
  8325  0111  2919               	goto	l3495
  8326  0112  085E               	movf	strtod@s,w
  8327  0113  0086               	movwf	6
  8328  0114  0187               	clrf	7
  8329  0115  3045               	movlw	69
  8330  0116  0601               	xorwf	1,w
  8331  0117  1D03               	btfss	3,2
  8332  0118  298D               	goto	l3529
  8333  0119                     l3495:	
  8334  0119  3001               	movlw	1
  8335  011A  00C5               	movwf	??_strtod
  8336  011B  0845               	movf	??_strtod,w
  8337  011C  07DE               	addwf	strtod@s,f
  8338  011D  085E               	movf	strtod@s,w
  8339  011E  0086               	movwf	6
  8340  011F  0187               	clrf	7
  8341  0120  302D               	movlw	45
  8342  0121  0601               	xorwf	1,w
  8343  0122  1D03               	btfss	3,2
  8344  0123  2926               	goto	l3501
  8345  0124  15D8               	bsf	strtod@flags,3
  8346  0125  292D               	goto	l3505
  8347  0126                     l3501:	
  8348  0126  085E               	movf	strtod@s,w
  8349  0127  0086               	movwf	6
  8350  0128  0187               	clrf	7
  8351  0129  302B               	movlw	43
  8352  012A  0601               	xorwf	1,w
  8353  012B  1D03               	btfss	3,2
  8354  012C  2931               	goto	l3507
  8355  012D                     l3505:	
  8356  012D  3001               	movlw	1
  8357  012E  00C5               	movwf	??_strtod
  8358  012F  0845               	movf	??_strtod,w
  8359  0130  07DE               	addwf	strtod@s,f
  8360  0131                     l3507:	
  8361  0131  085E               	movf	strtod@s,w
  8362  0132  0086               	movwf	6
  8363  0133  0187               	clrf	7
  8364  0134  3030               	movlw	48
  8365  0135  0601               	xorwf	1,w
  8366  0136  1903               	btfsc	3,2
  8367  0137  292D               	goto	l3505
  8368  0138  085E               	movf	strtod@s,w
  8369  0139  0086               	movwf	6
  8370  013A  0187               	clrf	7
  8371  013B  0801               	movf	1,w
  8372  013C  318B  23F7  3180   	fcall	_isdigit
  8373  013F  1C03               	btfss	3,0
  8374  0140  2988               	goto	l3525
  8375  0141  0020               	movlb	0	; select bank0
  8376  0142  085E               	movf	strtod@s,w
  8377  0143  0086               	movwf	6
  8378  0144  0187               	clrf	7
  8379  0145  0801               	movf	1,w
  8380  0146  3ED0               	addlw	208
  8381  0147  00C5               	movwf	??_strtod
  8382  0148  0845               	movf	??_strtod,w
  8383  0149  00D7               	movwf	strtod@eexp
  8384  014A  3001               	movlw	1
  8385  014B  00C5               	movwf	??_strtod
  8386  014C  0845               	movf	??_strtod,w
  8387  014D  07DE               	addwf	strtod@s,f
  8388  014E  085E               	movf	strtod@s,w
  8389  014F  0086               	movwf	6
  8390  0150  0187               	clrf	7
  8391  0151  0801               	movf	1,w
  8392  0152  318B  23F7  3180   	fcall	_isdigit
  8393  0155  1C03               	btfss	3,0
  8394  0156  2988               	goto	l3525
  8395  0157  0020               	movlb	0	; select bank0
  8396  0158  085E               	movf	strtod@s,w
  8397  0159  0086               	movwf	6
  8398  015A  0187               	clrf	7
  8399  015B  300A               	movlw	10
  8400  015C  00C5               	movwf	??_strtod
  8401  015D  0845               	movf	??_strtod,w
  8402  015E  00F3               	movwf	___bmul@multiplicand
  8403  015F  0857               	movf	strtod@eexp,w
  8404  0160  318C  2422  3180   	fcall	___bmul
  8405  0163  0701               	addwf	1,w
  8406  0164  3ED0               	addlw	-48
  8407  0165  0020               	movlb	0	; select bank0
  8408  0166  00C6               	movwf	??_strtod+1
  8409  0167  0846               	movf	??_strtod+1,w
  8410  0168  00D7               	movwf	strtod@eexp
  8411  0169  3001               	movlw	1
  8412  016A  00C5               	movwf	??_strtod
  8413  016B  0845               	movf	??_strtod,w
  8414  016C  07DE               	addwf	strtod@s,f
  8415  016D  085E               	movf	strtod@s,w
  8416  016E  0086               	movwf	6
  8417  016F  0187               	clrf	7
  8418  0170  0801               	movf	1,w
  8419  0171  318B  23F7  3180   	fcall	_isdigit
  8420  0174  1C03               	btfss	3,0
  8421  0175  2988               	goto	l3525
  8422  0176  0020               	movlb	0	; select bank0
  8423  0177  085E               	movf	strtod@s,w
  8424  0178  0086               	movwf	6
  8425  0179  0187               	clrf	7
  8426  017A  300A               	movlw	10
  8427  017B  00C5               	movwf	??_strtod
  8428  017C  0845               	movf	??_strtod,w
  8429  017D  00F3               	movwf	___bmul@multiplicand
  8430  017E  0857               	movf	strtod@eexp,w
  8431  017F  318C  2422  3180   	fcall	___bmul
  8432  0182  0701               	addwf	1,w
  8433  0183  3ED0               	addlw	-48
  8434  0184  0020               	movlb	0	; select bank0
  8435  0185  00C6               	movwf	??_strtod+1
  8436  0186  0846               	movf	??_strtod+1,w
  8437  0187  00D7               	movwf	strtod@eexp
  8438  0188                     l3525:	
  8439  0188  0020               	movlb	0	; select bank0
  8440  0189  1DD8               	btfss	strtod@flags,3
  8441  018A  298D               	goto	l3529
  8442  018B  09D7               	comf	strtod@eexp,f
  8443  018C  0AD7               	incf	strtod@eexp,f
  8444  018D                     l3529:	
  8445  018D  0857               	movf	strtod@eexp,w
  8446  018E  00C5               	movwf	??_strtod
  8447  018F  0845               	movf	??_strtod,w
  8448  0190  07D9               	addwf	strtod@expon,f
  8449  0191  0842               	movf	strtod@res,w
  8450  0192  1D03               	btfss	3,2
  8451  0193  1CD8               	btfss	strtod@flags,1
  8452  0194  299C               	goto	l3537
  8453  0195  085E               	movf	strtod@s,w
  8454  0196  00C5               	movwf	??_strtod
  8455  0197  0842               	movf	strtod@res,w
  8456  0198  0086               	movwf	6
  8457  0199  0187               	clrf	7
  8458  019A  0845               	movf	??_strtod,w
  8459  019B  0081               	movwf	1
  8460  019C                     l3537:	
  8461  019C  085D               	movf	strtod@_u+3,w
  8462  019D  00A6               	movwf	___altoft@c+3
  8463  019E  085C               	movf	strtod@_u+2,w
  8464  019F  00A5               	movwf	___altoft@c+2
  8465  01A0  085B               	movf	strtod@_u+1,w
  8466  01A1  00A4               	movwf	___altoft@c+1
  8467  01A2  085A               	movf	strtod@_u,w
  8468  01A3  00A3               	movwf	___altoft@c
  8469  01A4  318E  262A  3180   	fcall	___altoft
  8470  01A7  0020               	movlb	0	; select bank0
  8471  01A8  0823               	movf	?___altoft,w
  8472  01A9  00DA               	movwf	strtod@_u
  8473  01AA  0824               	movf	?___altoft+1,w
  8474  01AB  00DB               	movwf	strtod@_u+1
  8475  01AC  0825               	movf	?___altoft+2,w
  8476  01AD  00DC               	movwf	strtod@_u+2
  8477  01AE  085C               	movf	strtod@_u+2,w
  8478  01AF  045B               	iorwf	strtod@_u+1,w
  8479  01B0  045A               	iorwf	strtod@_u,w
  8480  01B1  1D03               	skipz
  8481  01B2  29BA               	goto	l699
  8482  01B3  3000               	movlw	0
  8483  01B4  00C2               	movwf	?_strtod
  8484  01B5  3000               	movlw	0
  8485  01B6  00C3               	movwf	?_strtod+1
  8486  01B7  3000               	movlw	0
  8487  01B8  00C4               	movwf	?_strtod+2
  8488  01B9  0008               	return
  8489  01BA                     l699:	
  8490  01BA  1FD9               	btfss	strtod@expon,7
  8491  01BB  2A32               	goto	l3583
  8492  01BC  09D9               	comf	strtod@expon,f
  8493  01BD  0AD9               	incf	strtod@expon,f
  8494  01BE                     l3551:	
  8495  01BE  0859               	movf	strtod@expon,w
  8496  01BF  3A80               	xorlw	128
  8497  01C0  3E76               	addlw	-138
  8498  01C1  1C03               	btfss	3,0
  8499  01C2  29F8               	goto	l3557
  8500  01C3  3003               	movlw	3
  8501  01C4  00A3               	movwf	___ftdiv@f2
  8502  01C5  3015               	movlw	21
  8503  01C6  00A4               	movwf	___ftdiv@f2+1
  8504  01C7  3050               	movlw	80
  8505  01C8  00A5               	movwf	___ftdiv@f2+2
  8506  01C9  085A               	movf	strtod@_u,w
  8507  01CA  00A6               	movwf	___ftdiv@f1
  8508  01CB  085B               	movf	strtod@_u+1,w
  8509  01CC  00A7               	movwf	___ftdiv@f1+1
  8510  01CD  085C               	movf	strtod@_u+2,w
  8511  01CE  00A8               	movwf	___ftdiv@f1+2
  8512  01CF  3187  2732  3180   	fcall	___ftdiv
  8513  01D2  0020               	movlb	0	; select bank0
  8514  01D3  0823               	movf	?___ftdiv,w
  8515  01D4  00DA               	movwf	strtod@_u
  8516  01D5  0824               	movf	?___ftdiv+1,w
  8517  01D6  00DB               	movwf	strtod@_u+1
  8518  01D7  0825               	movf	?___ftdiv+2,w
  8519  01D8  00DC               	movwf	strtod@_u+2
  8520  01D9  30F6               	movlw	246
  8521  01DA  00C5               	movwf	??_strtod
  8522  01DB  0845               	movf	??_strtod,w
  8523  01DC  07D9               	addwf	strtod@expon,f
  8524  01DD  29BE               	goto	l3551
  8525  01DE                     l3553:	
  8526  01DE  3000               	movlw	0
  8527  01DF  00A3               	movwf	___ftdiv@f2
  8528  01E0  3020               	movlw	32
  8529  01E1  00A4               	movwf	___ftdiv@f2+1
  8530  01E2  3041               	movlw	65
  8531  01E3  00A5               	movwf	___ftdiv@f2+2
  8532  01E4  085A               	movf	strtod@_u,w
  8533  01E5  00A6               	movwf	___ftdiv@f1
  8534  01E6  085B               	movf	strtod@_u+1,w
  8535  01E7  00A7               	movwf	___ftdiv@f1+1
  8536  01E8  085C               	movf	strtod@_u+2,w
  8537  01E9  00A8               	movwf	___ftdiv@f1+2
  8538  01EA  3187  2732  3180   	fcall	___ftdiv
  8539  01ED  0020               	movlb	0	; select bank0
  8540  01EE  0823               	movf	?___ftdiv,w
  8541  01EF  00DA               	movwf	strtod@_u
  8542  01F0  0824               	movf	?___ftdiv+1,w
  8543  01F1  00DB               	movwf	strtod@_u+1
  8544  01F2  0825               	movf	?___ftdiv+2,w
  8545  01F3  00DC               	movwf	strtod@_u+2
  8546  01F4  30FF               	movlw	255
  8547  01F5  00C5               	movwf	??_strtod
  8548  01F6  0845               	movf	??_strtod,w
  8549  01F7  07D9               	addwf	strtod@expon,f
  8550  01F8                     l3557:	
  8551  01F8  0859               	movf	strtod@expon,w
  8552  01F9  1D03               	btfss	3,2
  8553  01FA  29DE               	goto	l3553
  8554  01FB  3000               	movlw	0
  8555  01FC  00C9               	movwf	_strtod$893
  8556  01FD  3080               	movlw	128
  8557  01FE  00CA               	movwf	_strtod$893+1
  8558  01FF  3000               	movlw	0
  8559  0200  00CB               	movwf	_strtod$893+2
  8560  0201  085A               	movf	strtod@_u,w
  8561  0202  00B9               	movwf	___ftge@ff1
  8562  0203  085B               	movf	strtod@_u+1,w
  8563  0204  00BA               	movwf	___ftge@ff1+1
  8564  0205  085C               	movf	strtod@_u+2,w
  8565  0206  00BB               	movwf	___ftge@ff1+2
  8566  0207  0849               	movf	_strtod$893,w
  8567  0208  00BC               	movwf	___ftge@ff2
  8568  0209  084A               	movf	_strtod$893+1,w
  8569  020A  00BD               	movwf	___ftge@ff2+1
  8570  020B  084B               	movf	_strtod$893+2,w
  8571  020C  00BE               	movwf	___ftge@ff2+2
  8572  020D  318D  25EE  3180   	fcall	___ftge
  8573  0210  1803               	btfsc	3,0
  8574  0211  2AAB               	goto	l722
  8575  0212  0020               	movlb	0	; select bank0
  8576  0213  1C58               	btfss	strtod@flags,0
  8577  0214  2A2B               	goto	l3579
  8578  0215  3000               	movlw	0
  8579  0216  00CC               	movwf	_strtod$894
  8580  0217  3080               	movlw	128
  8581  0218  00CD               	movwf	_strtod$894+1
  8582  0219  3000               	movlw	0
  8583  021A  00CE               	movwf	_strtod$894+2
  8584  021B  084C               	movf	_strtod$894,w
  8585  021C  00F3               	movwf	___ftneg@f1
  8586  021D  084D               	movf	_strtod$894+1,w
  8587  021E  00F4               	movwf	___ftneg@f1+1
  8588  021F  084E               	movf	_strtod$894+2,w
  8589  0220  00F5               	movwf	___ftneg@f1+2
  8590  0221  318B  2396         	fcall	___ftneg
  8591  0223  0873               	movf	?___ftneg,w
  8592  0224  0020               	movlb	0	; select bank0
  8593  0225  00C2               	movwf	?_strtod
  8594  0226  0874               	movf	?___ftneg+1,w
  8595  0227  00C3               	movwf	?_strtod+1
  8596  0228  0875               	movf	?___ftneg+2,w
  8597  0229  00C4               	movwf	?_strtod+2
  8598  022A  0008               	return
  8599  022B                     l3579:	
  8600  022B  3000               	movlw	0
  8601  022C  00C2               	movwf	?_strtod
  8602  022D  3080               	movlw	128
  8603  022E  00C3               	movwf	?_strtod+1
  8604  022F  3000               	movlw	0
  8605  0230  00C4               	movwf	?_strtod+2
  8606  0231  0008               	return
  8607  0232                     l3583:	
  8608  0232  0859               	movf	strtod@expon,w
  8609  0233  3A80               	xorlw	128
  8610  0234  3E7F               	addlw	-129
  8611  0235  1803               	btfsc	3,0
  8612  0236  2A52               	goto	l3591
  8613  0237  2AAB               	goto	l722
  8614  0238                     l3587:	
  8615  0238  3003               	movlw	3
  8616  0239  00A9               	movwf	___ftmul@f1
  8617  023A  3015               	movlw	21
  8618  023B  00AA               	movwf	___ftmul@f1+1
  8619  023C  3050               	movlw	80
  8620  023D  00AB               	movwf	___ftmul@f1+2
  8621  023E  085A               	movf	strtod@_u,w
  8622  023F  00AC               	movwf	___ftmul@f2
  8623  0240  085B               	movf	strtod@_u+1,w
  8624  0241  00AD               	movwf	___ftmul@f2+1
  8625  0242  085C               	movf	strtod@_u+2,w
  8626  0243  00AE               	movwf	___ftmul@f2+2
  8627  0244  3186  267E  3180   	fcall	___ftmul
  8628  0247  0020               	movlb	0	; select bank0
  8629  0248  0829               	movf	?___ftmul,w
  8630  0249  00DA               	movwf	strtod@_u
  8631  024A  082A               	movf	?___ftmul+1,w
  8632  024B  00DB               	movwf	strtod@_u+1
  8633  024C  082B               	movf	?___ftmul+2,w
  8634  024D  00DC               	movwf	strtod@_u+2
  8635  024E  30F6               	movlw	246
  8636  024F  00C5               	movwf	??_strtod
  8637  0250  0845               	movf	??_strtod,w
  8638  0251  07D9               	addwf	strtod@expon,f
  8639  0252                     l3591:	
  8640  0252  300A               	movlw	10
  8641  0253  0259               	subwf	strtod@expon,w
  8642  0254  1C03               	btfss	3,0
  8643  0255  2A71               	goto	l3597
  8644  0256  2A38               	goto	l3587
  8645  0257                     l3593:	
  8646  0257  3000               	movlw	0
  8647  0258  00A9               	movwf	___ftmul@f1
  8648  0259  3020               	movlw	32
  8649  025A  00AA               	movwf	___ftmul@f1+1
  8650  025B  3041               	movlw	65
  8651  025C  00AB               	movwf	___ftmul@f1+2
  8652  025D  085A               	movf	strtod@_u,w
  8653  025E  00AC               	movwf	___ftmul@f2
  8654  025F  085B               	movf	strtod@_u+1,w
  8655  0260  00AD               	movwf	___ftmul@f2+1
  8656  0261  085C               	movf	strtod@_u+2,w
  8657  0262  00AE               	movwf	___ftmul@f2+2
  8658  0263  3186  267E  3180   	fcall	___ftmul
  8659  0266  0020               	movlb	0	; select bank0
  8660  0267  0829               	movf	?___ftmul,w
  8661  0268  00DA               	movwf	strtod@_u
  8662  0269  082A               	movf	?___ftmul+1,w
  8663  026A  00DB               	movwf	strtod@_u+1
  8664  026B  082B               	movf	?___ftmul+2,w
  8665  026C  00DC               	movwf	strtod@_u+2
  8666  026D  30FF               	movlw	255
  8667  026E  00C5               	movwf	??_strtod
  8668  026F  0845               	movf	??_strtod,w
  8669  0270  07D9               	addwf	strtod@expon,f
  8670  0271                     l3597:	
  8671  0271  0859               	movf	strtod@expon,w
  8672  0272  1D03               	btfss	3,2
  8673  0273  2A57               	goto	l3593
  8674  0274  30FF               	movlw	255
  8675  0275  00CF               	movwf	_strtod$895
  8676  0276  307F               	movlw	127
  8677  0277  00D0               	movwf	_strtod$895+1
  8678  0278  307F               	movlw	127
  8679  0279  00D1               	movwf	_strtod$895+2
  8680  027A  084F               	movf	_strtod$895,w
  8681  027B  00B9               	movwf	___ftge@ff1
  8682  027C  0850               	movf	_strtod$895+1,w
  8683  027D  00BA               	movwf	___ftge@ff1+1
  8684  027E  0851               	movf	_strtod$895+2,w
  8685  027F  00BB               	movwf	___ftge@ff1+2
  8686  0280  085A               	movf	strtod@_u,w
  8687  0281  00BC               	movwf	___ftge@ff2
  8688  0282  085B               	movf	strtod@_u+1,w
  8689  0283  00BD               	movwf	___ftge@ff2+1
  8690  0284  085C               	movf	strtod@_u+2,w
  8691  0285  00BE               	movwf	___ftge@ff2+2
  8692  0286  318D  25EE  3180   	fcall	___ftge
  8693  0289  1803               	btfsc	3,0
  8694  028A  2AAB               	goto	l722
  8695  028B  0020               	movlb	0	; select bank0
  8696  028C  1C58               	btfss	strtod@flags,0
  8697  028D  2AA4               	goto	l3619
  8698  028E  3000               	movlw	0
  8699  028F  00D2               	movwf	_strtod$896
  8700  0290  3080               	movlw	128
  8701  0291  00D3               	movwf	_strtod$896+1
  8702  0292  3000               	movlw	0
  8703  0293  00D4               	movwf	_strtod$896+2
  8704  0294  0852               	movf	_strtod$896,w
  8705  0295  00F3               	movwf	___ftneg@f1
  8706  0296  0853               	movf	_strtod$896+1,w
  8707  0297  00F4               	movwf	___ftneg@f1+1
  8708  0298  0854               	movf	_strtod$896+2,w
  8709  0299  00F5               	movwf	___ftneg@f1+2
  8710  029A  318B  2396         	fcall	___ftneg
  8711  029C  0873               	movf	?___ftneg,w
  8712  029D  0020               	movlb	0	; select bank0
  8713  029E  00C2               	movwf	?_strtod
  8714  029F  0874               	movf	?___ftneg+1,w
  8715  02A0  00C3               	movwf	?_strtod+1
  8716  02A1  0875               	movf	?___ftneg+2,w
  8717  02A2  00C4               	movwf	?_strtod+2
  8718  02A3  0008               	return
  8719  02A4                     l3619:	
  8720  02A4  3000               	movlw	0
  8721  02A5  00C2               	movwf	?_strtod
  8722  02A6  3080               	movlw	128
  8723  02A7  00C3               	movwf	?_strtod+1
  8724  02A8  3000               	movlw	0
  8725  02A9  00C4               	movwf	?_strtod+2
  8726  02AA  0008               	return
  8727  02AB                     l722:	
  8728  02AB  0020               	movlb	0	; select bank0
  8729  02AC  1C58               	btfss	strtod@flags,0
  8730  02AD  2ABD               	goto	l3625
  8731  02AE  085A               	movf	strtod@_u,w
  8732  02AF  00F3               	movwf	___ftneg@f1
  8733  02B0  085B               	movf	strtod@_u+1,w
  8734  02B1  00F4               	movwf	___ftneg@f1+1
  8735  02B2  085C               	movf	strtod@_u+2,w
  8736  02B3  00F5               	movwf	___ftneg@f1+2
  8737  02B4  318B  2396         	fcall	___ftneg
  8738  02B6  0873               	movf	?___ftneg,w
  8739  02B7  0020               	movlb	0	; select bank0
  8740  02B8  00DA               	movwf	strtod@_u
  8741  02B9  0874               	movf	?___ftneg+1,w
  8742  02BA  00DB               	movwf	strtod@_u+1
  8743  02BB  0875               	movf	?___ftneg+2,w
  8744  02BC  00DC               	movwf	strtod@_u+2
  8745  02BD                     l3625:	
  8746  02BD  085A               	movf	strtod@_u,w
  8747  02BE  00C2               	movwf	?_strtod
  8748  02BF  085B               	movf	strtod@_u+1,w
  8749  02C0  00C3               	movwf	?_strtod+1
  8750  02C1  085C               	movf	strtod@_u+2,w
  8751  02C2  00C4               	movwf	?_strtod+2
  8752  02C3  0008               	return
  8753  02C4                     __end_of_strtod:	
  8754                           
  8755                           	psect	text28
  8756  0C33                     __ptext28:	
  8757 ;; *************** function _isspace *****************
  8758 ;; Defined at:
  8759 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isspace.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  c               1    wreg     unsigned char 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  c               1    4[COMMON] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;		None               void
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;Total ram usage:        2 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:    2
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_strtod
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           
  8788                           ;psect for function _isspace
  8789  0C33                     _isspace:	
  8790                           
  8791                           ;incstack = 0
  8792                           ; Regs used in _isspace: [wreg+status,2+status,0]
  8793                           ;isspace@c stored from wreg
  8794  0C33  00F4               	movwf	isspace@c
  8795  0C34  01F3               	clrf	_isspace$971
  8796  0C35  0AF3               	incf	_isspace$971,f
  8797  0C36  3020               	movlw	32
  8798  0C37  0674               	xorwf	isspace@c,w
  8799  0C38  1903               	btfsc	3,2
  8800  0C39  2C43               	goto	l3279
  8801  0C3A  300E               	movlw	14
  8802  0C3B  0274               	subwf	isspace@c,w
  8803  0C3C  1803               	skipnc
  8804  0C3D  2C42               	goto	l3277
  8805  0C3E  3009               	movlw	9
  8806  0C3F  0274               	subwf	isspace@c,w
  8807  0C40  1803               	skipnc
  8808  0C41  2C43               	goto	l3279
  8809  0C42                     l3277:	
  8810  0C42  01F3               	clrf	_isspace$971
  8811  0C43                     l3279:	
  8812  0C43  0C73               	rrf	_isspace$971,w
  8813  0C44  0008               	return
  8814  0C45                     __end_of_isspace:	
  8815                           
  8816                           	psect	text29
  8817  0BF7                     __ptext29:	
  8818 ;; *************** function _isdigit *****************
  8819 ;; Defined at:
  8820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  c               1    wreg     unsigned char 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  c               1    4[COMMON] unsigned char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;		None               void
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8838 ;;Total ram usage:        2 bytes
  8839 ;; Hardware stack levels used:    1
  8840 ;; Hardware stack levels required when called:    2
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_strtod
  8845 ;;		_atoi
  8846 ;; This function uses a non-reentrant model
  8847 ;;
  8848                           
  8849                           
  8850                           ;psect for function _isdigit
  8851  0BF7                     _isdigit:	
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8855                           ;isdigit@c stored from wreg
  8856  0BF7  00F4               	movwf	isdigit@c
  8857  0BF8  01F3               	clrf	_isdigit$968
  8858  0BF9  303A               	movlw	58
  8859  0BFA  0274               	subwf	isdigit@c,w
  8860  0BFB  1803               	skipnc
  8861  0BFC  2C03               	goto	l3291
  8862  0BFD  3030               	movlw	48
  8863  0BFE  0274               	subwf	isdigit@c,w
  8864  0BFF  1C03               	skipc
  8865  0C00  2C03               	goto	l3291
  8866  0C01  01F3               	clrf	_isdigit$968
  8867  0C02  0AF3               	incf	_isdigit$968,f
  8868  0C03                     l3291:	
  8869  0C03  0C73               	rrf	_isdigit$968,w
  8870  0C04  0008               	return
  8871  0C05                     __end_of_isdigit:	
  8872                           
  8873                           	psect	text30
  8874  0D89                     __ptext30:	
  8875 ;; *************** function ___lmul *****************
  8876 ;; Defined at:
  8877 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul32.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8880 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8881 ;; Auto vars:     Size  Location     Type
  8882 ;;  product         4    3[COMMON] unsigned long 
  8883 ;; Return value:  Size  Location     Type
  8884 ;;                  4    0[BANK0 ] unsigned long 
  8885 ;; Registers used:
  8886 ;;		wreg, status,2, status,0
  8887 ;; Tracked objects:
  8888 ;;		On entry : 0/0
  8889 ;;		On exit  : 0/0
  8890 ;;		Unchanged: 0/0
  8891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8892 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8896 ;;Total ram usage:       12 bytes
  8897 ;; Hardware stack levels used:    1
  8898 ;; Hardware stack levels required when called:    2
  8899 ;; This function calls:
  8900 ;;		Nothing
  8901 ;; This function is called by:
  8902 ;;		_strtod
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           
  8907                           ;psect for function ___lmul
  8908  0D89                     ___lmul:	
  8909                           
  8910                           ;incstack = 0
  8911                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8912  0D89  3000               	movlw	0
  8913  0D8A  00F6               	movwf	___lmul@product+3
  8914  0D8B  3000               	movlw	0
  8915  0D8C  00F5               	movwf	___lmul@product+2
  8916  0D8D  3000               	movlw	0
  8917  0D8E  00F4               	movwf	___lmul@product+1
  8918  0D8F  3000               	movlw	0
  8919  0D90  00F3               	movwf	___lmul@product
  8920  0D91                     l3227:	
  8921  0D91  0020               	movlb	0	; select bank0
  8922  0D92  1C20               	btfss	___lmul@multiplier,0
  8923  0D93  2D9C               	goto	l3231
  8924  0D94  0824               	movf	___lmul@multiplicand,w
  8925  0D95  07F3               	addwf	___lmul@product,f
  8926  0D96  0825               	movf	___lmul@multiplicand+1,w
  8927  0D97  3DF4               	addwfc	___lmul@product+1,f
  8928  0D98  0826               	movf	___lmul@multiplicand+2,w
  8929  0D99  3DF5               	addwfc	___lmul@product+2,f
  8930  0D9A  0827               	movf	___lmul@multiplicand+3,w
  8931  0D9B  3DF6               	addwfc	___lmul@product+3,f
  8932  0D9C                     l3231:	
  8933  0D9C  3001               	movlw	1
  8934  0D9D                     u3845:	
  8935  0D9D  35A4               	lslf	___lmul@multiplicand,f
  8936  0D9E  0DA5               	rlf	___lmul@multiplicand+1,f
  8937  0D9F  0DA6               	rlf	___lmul@multiplicand+2,f
  8938  0DA0  0DA7               	rlf	___lmul@multiplicand+3,f
  8939  0DA1  0B89               	decfsz	9,f
  8940  0DA2  2D9D               	goto	u3845
  8941  0DA3  3001               	movlw	1
  8942  0DA4                     u3855:	
  8943  0DA4  36A3               	lsrf	___lmul@multiplier+3,f
  8944  0DA5  0CA2               	rrf	___lmul@multiplier+2,f
  8945  0DA6  0CA1               	rrf	___lmul@multiplier+1,f
  8946  0DA7  0CA0               	rrf	___lmul@multiplier,f
  8947  0DA8  0B89               	decfsz	9,f
  8948  0DA9  2DA4               	goto	u3855
  8949  0DAA  0823               	movf	___lmul@multiplier+3,w
  8950  0DAB  0422               	iorwf	___lmul@multiplier+2,w
  8951  0DAC  0421               	iorwf	___lmul@multiplier+1,w
  8952  0DAD  0420               	iorwf	___lmul@multiplier,w
  8953  0DAE  1D03               	skipz
  8954  0DAF  2D91               	goto	l3227
  8955  0DB0  0876               	movf	___lmul@product+3,w
  8956  0DB1  00A3               	movwf	?___lmul+3
  8957  0DB2  0875               	movf	___lmul@product+2,w
  8958  0DB3  00A2               	movwf	?___lmul+2
  8959  0DB4  0874               	movf	___lmul@product+1,w
  8960  0DB5  00A1               	movwf	?___lmul+1
  8961  0DB6  0873               	movf	___lmul@product,w
  8962  0DB7  00A0               	movwf	?___lmul
  8963  0DB8  0008               	return
  8964  0DB9                     __end_of___lmul:	
  8965                           
  8966                           	psect	text31
  8967  0B96                     __ptext31:	
  8968 ;; *************** function ___ftneg *****************
  8969 ;; Defined at:
  8970 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftneg.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  f1              3    3[COMMON] float 
  8973 ;; Auto vars:     Size  Location     Type
  8974 ;;		None
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  3    3[COMMON] float 
  8977 ;; Registers used:
  8978 ;;		wreg
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8984 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8987 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8988 ;;Total ram usage:        3 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    2
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		_strtod
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           
  8999                           ;psect for function ___ftneg
  9000  0B96                     ___ftneg:	
  9001                           
  9002                           ;incstack = 0
  9003                           ; Regs used in ___ftneg: [wreg]
  9004  0B96  0875               	movf	___ftneg@f1+2,w
  9005  0B97  0474               	iorwf	___ftneg@f1+1,w
  9006  0B98  0473               	iorwf	___ftneg@f1,w
  9007  0B99  1903               	skipnz
  9008  0B9A  0008               	return
  9009  0B9B  3080               	movlw	128
  9010  0B9C  06F5               	xorwf	___ftneg@f1+2,f
  9011  0B9D  0008               	return
  9012  0B9E                     __end_of___ftneg:	
  9013                           
  9014                           	psect	text32
  9015  067E                     __ptext32:	
  9016 ;; *************** function ___ftmul *****************
  9017 ;; Defined at:
  9018 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftmul.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  f1              3    9[BANK0 ] float 
  9021 ;;  f2              3   12[BANK0 ] float 
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;  f3_as_produc    3   20[BANK0 ] unsigned um
  9024 ;;  sign            1   24[BANK0 ] unsigned char 
  9025 ;;  cntr            1   23[BANK0 ] unsigned char 
  9026 ;;  exp             1   19[BANK0 ] unsigned char 
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  3    9[BANK0 ] float 
  9029 ;; Registers used:
  9030 ;;		wreg, status,2, status,0, pclath, cstack
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9036 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9037 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9038 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9039 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;Total ram usage:       16 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:    3
  9043 ;; This function calls:
  9044 ;;		___ftpack
  9045 ;; This function is called by:
  9046 ;;		_PI
  9047 ;;		_strtod
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           
  9052                           ;psect for function ___ftmul
  9053  067E                     ___ftmul:	
  9054                           
  9055                           ;incstack = 0
  9056                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9057  067E  0020               	movlb	0	; select bank0
  9058  067F  0829               	movf	___ftmul@f1,w
  9059  0680  00AF               	movwf	??___ftmul
  9060  0681  082A               	movf	___ftmul@f1+1,w
  9061  0682  00B0               	movwf	??___ftmul+1
  9062  0683  082B               	movf	___ftmul@f1+2,w
  9063  0684  00B1               	movwf	??___ftmul+2
  9064  0685  1003               	clrc
  9065  0686  0D30               	rlf	??___ftmul+1,w
  9066  0687  0D31               	rlf	??___ftmul+2,w
  9067  0688  00B2               	movwf	??___ftmul+3
  9068  0689  0832               	movf	??___ftmul+3,w
  9069  068A  00B3               	movwf	___ftmul@exp
  9070  068B  0833               	movf	___ftmul@exp,w
  9071  068C  1D03               	btfss	3,2
  9072  068D  2E95               	goto	l3363
  9073  068E  3000               	movlw	0
  9074  068F  00A9               	movwf	?___ftmul
  9075  0690  3000               	movlw	0
  9076  0691  00AA               	movwf	?___ftmul+1
  9077  0692  3000               	movlw	0
  9078  0693  00AB               	movwf	?___ftmul+2
  9079  0694  0008               	return
  9080  0695                     l3363:	
  9081  0695  082C               	movf	___ftmul@f2,w
  9082  0696  00AF               	movwf	??___ftmul
  9083  0697  082D               	movf	___ftmul@f2+1,w
  9084  0698  00B0               	movwf	??___ftmul+1
  9085  0699  082E               	movf	___ftmul@f2+2,w
  9086  069A  00B1               	movwf	??___ftmul+2
  9087  069B  1003               	clrc
  9088  069C  0D30               	rlf	??___ftmul+1,w
  9089  069D  0D31               	rlf	??___ftmul+2,w
  9090  069E  00B2               	movwf	??___ftmul+3
  9091  069F  0832               	movf	??___ftmul+3,w
  9092  06A0  00B8               	movwf	___ftmul@sign
  9093  06A1  0838               	movf	___ftmul@sign,w
  9094  06A2  1D03               	btfss	3,2
  9095  06A3  2EAB               	goto	l3369
  9096  06A4  3000               	movlw	0
  9097  06A5  00A9               	movwf	?___ftmul
  9098  06A6  3000               	movlw	0
  9099  06A7  00AA               	movwf	?___ftmul+1
  9100  06A8  3000               	movlw	0
  9101  06A9  00AB               	movwf	?___ftmul+2
  9102  06AA  0008               	return
  9103  06AB                     l3369:	
  9104  06AB  0838               	movf	___ftmul@sign,w
  9105  06AC  3E7B               	addlw	123
  9106  06AD  00AF               	movwf	??___ftmul
  9107  06AE  082F               	movf	??___ftmul,w
  9108  06AF  07B3               	addwf	___ftmul@exp,f
  9109  06B0  0829               	movf	___ftmul@f1,w
  9110  06B1  00AF               	movwf	??___ftmul
  9111  06B2  082A               	movf	___ftmul@f1+1,w
  9112  06B3  00B0               	movwf	??___ftmul+1
  9113  06B4  082B               	movf	___ftmul@f1+2,w
  9114  06B5  00B1               	movwf	??___ftmul+2
  9115  06B6  3010               	movlw	16
  9116  06B7                     u4105:	
  9117  06B7  36B1               	lsrf	??___ftmul+2,f
  9118  06B8  0CB0               	rrf	??___ftmul+1,f
  9119  06B9  0CAF               	rrf	??___ftmul,f
  9120  06BA  0B89               	decfsz	9,f
  9121  06BB  2EB7               	goto	u4105
  9122  06BC  082F               	movf	??___ftmul,w
  9123  06BD  00B2               	movwf	??___ftmul+3
  9124  06BE  0832               	movf	??___ftmul+3,w
  9125  06BF  00B8               	movwf	___ftmul@sign
  9126  06C0  082C               	movf	___ftmul@f2,w
  9127  06C1  00AF               	movwf	??___ftmul
  9128  06C2  082D               	movf	___ftmul@f2+1,w
  9129  06C3  00B0               	movwf	??___ftmul+1
  9130  06C4  082E               	movf	___ftmul@f2+2,w
  9131  06C5  00B1               	movwf	??___ftmul+2
  9132  06C6  3010               	movlw	16
  9133  06C7                     u4115:	
  9134  06C7  36B1               	lsrf	??___ftmul+2,f
  9135  06C8  0CB0               	rrf	??___ftmul+1,f
  9136  06C9  0CAF               	rrf	??___ftmul,f
  9137  06CA  0B89               	decfsz	9,f
  9138  06CB  2EC7               	goto	u4115
  9139  06CC  082F               	movf	??___ftmul,w
  9140  06CD  00B2               	movwf	??___ftmul+3
  9141  06CE  0832               	movf	??___ftmul+3,w
  9142  06CF  06B8               	xorwf	___ftmul@sign,f
  9143  06D0  3080               	movlw	128
  9144  06D1  00AF               	movwf	??___ftmul
  9145  06D2  082F               	movf	??___ftmul,w
  9146  06D3  05B8               	andwf	___ftmul@sign,f
  9147  06D4  17AA               	bsf	___ftmul@f1+1,7
  9148  06D5  17AD               	bsf	___ftmul@f2+1,7
  9149  06D6  30FF               	movlw	255
  9150  06D7  05AC               	andwf	___ftmul@f2,f
  9151  06D8  30FF               	movlw	255
  9152  06D9  05AD               	andwf	___ftmul@f2+1,f
  9153  06DA  3000               	movlw	0
  9154  06DB  05AE               	andwf	___ftmul@f2+2,f
  9155  06DC  3000               	movlw	0
  9156  06DD  00B4               	movwf	___ftmul@f3_as_product
  9157  06DE  3000               	movlw	0
  9158  06DF  00B5               	movwf	___ftmul@f3_as_product+1
  9159  06E0  3000               	movlw	0
  9160  06E1  00B6               	movwf	___ftmul@f3_as_product+2
  9161  06E2  3007               	movlw	7
  9162  06E3  00AF               	movwf	??___ftmul
  9163  06E4  082F               	movf	??___ftmul,w
  9164  06E5  00B7               	movwf	___ftmul@cntr
  9165  06E6                     l3381:	
  9166  06E6  1C29               	btfss	___ftmul@f1,0
  9167  06E7  2EEE               	goto	l3385
  9168  06E8  082C               	movf	___ftmul@f2,w
  9169  06E9  07B4               	addwf	___ftmul@f3_as_product,f
  9170  06EA  082D               	movf	___ftmul@f2+1,w
  9171  06EB  3DB5               	addwfc	___ftmul@f3_as_product+1,f
  9172  06EC  082E               	movf	___ftmul@f2+2,w
  9173  06ED  3DB6               	addwfc	___ftmul@f3_as_product+2,f
  9174  06EE                     l3385:	
  9175  06EE  3001               	movlw	1
  9176  06EF                     u4135:	
  9177  06EF  36AB               	lsrf	___ftmul@f1+2,f
  9178  06F0  0CAA               	rrf	___ftmul@f1+1,f
  9179  06F1  0CA9               	rrf	___ftmul@f1,f
  9180  06F2  0B89               	decfsz	9,f
  9181  06F3  2EEF               	goto	u4135
  9182  06F4  3001               	movlw	1
  9183  06F5                     u4145:	
  9184  06F5  35AC               	lslf	___ftmul@f2,f
  9185  06F6  0DAD               	rlf	___ftmul@f2+1,f
  9186  06F7  0DAE               	rlf	___ftmul@f2+2,f
  9187  06F8  0B89               	decfsz	9,f
  9188  06F9  2EF5               	goto	u4145
  9189  06FA  3001               	movlw	1
  9190  06FB  02B7               	subwf	___ftmul@cntr,f
  9191  06FC  1D03               	btfss	3,2
  9192  06FD  2EE6               	goto	l3381
  9193  06FE  3009               	movlw	9
  9194  06FF  00AF               	movwf	??___ftmul
  9195  0700  082F               	movf	??___ftmul,w
  9196  0701  00B7               	movwf	___ftmul@cntr
  9197  0702                     l3393:	
  9198  0702  1C29               	btfss	___ftmul@f1,0
  9199  0703  2F0A               	goto	l3397
  9200  0704  082C               	movf	___ftmul@f2,w
  9201  0705  07B4               	addwf	___ftmul@f3_as_product,f
  9202  0706  082D               	movf	___ftmul@f2+1,w
  9203  0707  3DB5               	addwfc	___ftmul@f3_as_product+1,f
  9204  0708  082E               	movf	___ftmul@f2+2,w
  9205  0709  3DB6               	addwfc	___ftmul@f3_as_product+2,f
  9206  070A                     l3397:	
  9207  070A  3001               	movlw	1
  9208  070B                     u4175:	
  9209  070B  36AB               	lsrf	___ftmul@f1+2,f
  9210  070C  0CAA               	rrf	___ftmul@f1+1,f
  9211  070D  0CA9               	rrf	___ftmul@f1,f
  9212  070E  0B89               	decfsz	9,f
  9213  070F  2F0B               	goto	u4175
  9214  0710  3001               	movlw	1
  9215  0711                     u4185:	
  9216  0711  36B6               	lsrf	___ftmul@f3_as_product+2,f
  9217  0712  0CB5               	rrf	___ftmul@f3_as_product+1,f
  9218  0713  0CB4               	rrf	___ftmul@f3_as_product,f
  9219  0714  0B89               	decfsz	9,f
  9220  0715  2F11               	goto	u4185
  9221  0716  3001               	movlw	1
  9222  0717  02B7               	subwf	___ftmul@cntr,f
  9223  0718  1D03               	btfss	3,2
  9224  0719  2F02               	goto	l3393
  9225  071A  0834               	movf	___ftmul@f3_as_product,w
  9226  071B  00F3               	movwf	___ftpack@arg
  9227  071C  0835               	movf	___ftmul@f3_as_product+1,w
  9228  071D  00F4               	movwf	___ftpack@arg+1
  9229  071E  0836               	movf	___ftmul@f3_as_product+2,w
  9230  071F  00F5               	movwf	___ftpack@arg+2
  9231  0720  0833               	movf	___ftmul@exp,w
  9232  0721  00AF               	movwf	??___ftmul
  9233  0722  082F               	movf	??___ftmul,w
  9234  0723  00F6               	movwf	___ftpack@exp
  9235  0724  0838               	movf	___ftmul@sign,w
  9236  0725  00B0               	movwf	??___ftmul+1
  9237  0726  0830               	movf	??___ftmul+1,w
  9238  0727  00F7               	movwf	___ftpack@sign
  9239  0728  318E  26A7         	fcall	___ftpack
  9240  072A  0873               	movf	?___ftpack,w
  9241  072B  0020               	movlb	0	; select bank0
  9242  072C  00A9               	movwf	?___ftmul
  9243  072D  0874               	movf	?___ftpack+1,w
  9244  072E  00AA               	movwf	?___ftmul+1
  9245  072F  0875               	movf	?___ftpack+2,w
  9246  0730  00AB               	movwf	?___ftmul+2
  9247  0731  0008               	return
  9248  0732                     __end_of___ftmul:	
  9249                           
  9250                           	psect	text33
  9251  0DEE                     __ptext33:	
  9252 ;; *************** function ___ftge *****************
  9253 ;; Defined at:
  9254 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftge.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  ff1             3   25[BANK0 ] float 
  9257 ;;  ff2             3   28[BANK0 ] float 
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;		None
  9260 ;; Return value:  Size  Location     Type
  9261 ;;		None               void
  9262 ;; Registers used:
  9263 ;;		wreg, status,2, status,0
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9271 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9272 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9273 ;;Total ram usage:        9 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; Hardware stack levels required when called:    2
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_PI
  9280 ;;		_strtod
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function ___ftge
  9286  0DEE                     ___ftge:	
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9290  0DEE  0020               	movlb	0	; select bank0
  9291  0DEF  1FBB               	btfss	___ftge@ff1+2,7
  9292  0DF0  2E05               	goto	l3341
  9293  0DF1  0939               	comf	___ftge@ff1,w
  9294  0DF2  00BF               	movwf	??___ftge
  9295  0DF3  093A               	comf	___ftge@ff1+1,w
  9296  0DF4  00C0               	movwf	??___ftge+1
  9297  0DF5  093B               	comf	___ftge@ff1+2,w
  9298  0DF6  00C1               	movwf	??___ftge+2
  9299  0DF7  0ABF               	incf	??___ftge,f
  9300  0DF8  1903               	skipnz
  9301  0DF9  0AC0               	incf	??___ftge+1,f
  9302  0DFA  1903               	skipnz
  9303  0DFB  0AC1               	incf	??___ftge+2,f
  9304  0DFC  3000               	movlw	0
  9305  0DFD  073F               	addwf	??___ftge,w
  9306  0DFE  00B9               	movwf	___ftge@ff1
  9307  0DFF  3000               	movlw	0
  9308  0E00  3D40               	addwfc	??___ftge+1,w
  9309  0E01  00BA               	movwf	___ftge@ff1+1
  9310  0E02  3080               	movlw	128
  9311  0E03  3D41               	addwfc	??___ftge+2,w
  9312  0E04  00BB               	movwf	___ftge@ff1+2
  9313  0E05                     l3341:	
  9314  0E05  1FBE               	btfss	___ftge@ff2+2,7
  9315  0E06  2E1B               	goto	l3345
  9316  0E07  093C               	comf	___ftge@ff2,w
  9317  0E08  00BF               	movwf	??___ftge
  9318  0E09  093D               	comf	___ftge@ff2+1,w
  9319  0E0A  00C0               	movwf	??___ftge+1
  9320  0E0B  093E               	comf	___ftge@ff2+2,w
  9321  0E0C  00C1               	movwf	??___ftge+2
  9322  0E0D  0ABF               	incf	??___ftge,f
  9323  0E0E  1903               	skipnz
  9324  0E0F  0AC0               	incf	??___ftge+1,f
  9325  0E10  1903               	skipnz
  9326  0E11  0AC1               	incf	??___ftge+2,f
  9327  0E12  3000               	movlw	0
  9328  0E13  073F               	addwf	??___ftge,w
  9329  0E14  00BC               	movwf	___ftge@ff2
  9330  0E15  3000               	movlw	0
  9331  0E16  3D40               	addwfc	??___ftge+1,w
  9332  0E17  00BD               	movwf	___ftge@ff2+1
  9333  0E18  3080               	movlw	128
  9334  0E19  3D41               	addwfc	??___ftge+2,w
  9335  0E1A  00BE               	movwf	___ftge@ff2+2
  9336  0E1B                     l3345:	
  9337  0E1B  3080               	movlw	128
  9338  0E1C  06BB               	xorwf	___ftge@ff1+2,f
  9339  0E1D  3080               	movlw	128
  9340  0E1E  06BE               	xorwf	___ftge@ff2+2,f
  9341  0E1F  083E               	movf	___ftge@ff2+2,w
  9342  0E20  023B               	subwf	___ftge@ff1+2,w
  9343  0E21  1D03               	skipz
  9344  0E22  0008               	return
  9345  0E23  083D               	movf	___ftge@ff2+1,w
  9346  0E24  023A               	subwf	___ftge@ff1+1,w
  9347  0E25  1D03               	skipz
  9348  0E26  0008               	return
  9349  0E27  083C               	movf	___ftge@ff2,w
  9350  0E28  0239               	subwf	___ftge@ff1,w
  9351  0E29  0008               	return
  9352  0E2A                     __end_of___ftge:	
  9353                           
  9354                           	psect	text34
  9355  0732                     __ptext34:	
  9356 ;; *************** function ___ftdiv *****************
  9357 ;; Defined at:
  9358 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\ftdiv.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;  f2              3    3[BANK0 ] float 
  9361 ;;  f1              3    6[BANK0 ] float 
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;  f3              3   14[BANK0 ] float 
  9364 ;;  sign            1   18[BANK0 ] unsigned char 
  9365 ;;  exp             1   17[BANK0 ] unsigned char 
  9366 ;;  cntr            1   13[BANK0 ] unsigned char 
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  3    3[BANK0 ] float 
  9369 ;; Registers used:
  9370 ;;		wreg, status,2, status,0, pclath, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9376 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9379 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;Total ram usage:       16 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:    3
  9383 ;; This function calls:
  9384 ;;		___ftpack
  9385 ;; This function is called by:
  9386 ;;		_strtod
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           
  9391                           ;psect for function ___ftdiv
  9392  0732                     ___ftdiv:	
  9393                           
  9394                           ;incstack = 0
  9395                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9396  0732  0020               	movlb	0	; select bank0
  9397  0733  0826               	movf	___ftdiv@f1,w
  9398  0734  00A9               	movwf	??___ftdiv
  9399  0735  0827               	movf	___ftdiv@f1+1,w
  9400  0736  00AA               	movwf	??___ftdiv+1
  9401  0737  0828               	movf	___ftdiv@f1+2,w
  9402  0738  00AB               	movwf	??___ftdiv+2
  9403  0739  1003               	clrc
  9404  073A  0D2A               	rlf	??___ftdiv+1,w
  9405  073B  0D2B               	rlf	??___ftdiv+2,w
  9406  073C  00AC               	movwf	??___ftdiv+3
  9407  073D  082C               	movf	??___ftdiv+3,w
  9408  073E  00B1               	movwf	___ftdiv@exp
  9409  073F  0831               	movf	___ftdiv@exp,w
  9410  0740  1D03               	btfss	3,2
  9411  0741  2F49               	goto	l3301
  9412  0742  3000               	movlw	0
  9413  0743  00A3               	movwf	?___ftdiv
  9414  0744  3000               	movlw	0
  9415  0745  00A4               	movwf	?___ftdiv+1
  9416  0746  3000               	movlw	0
  9417  0747  00A5               	movwf	?___ftdiv+2
  9418  0748  0008               	return
  9419  0749                     l3301:	
  9420  0749  0823               	movf	___ftdiv@f2,w
  9421  074A  00A9               	movwf	??___ftdiv
  9422  074B  0824               	movf	___ftdiv@f2+1,w
  9423  074C  00AA               	movwf	??___ftdiv+1
  9424  074D  0825               	movf	___ftdiv@f2+2,w
  9425  074E  00AB               	movwf	??___ftdiv+2
  9426  074F  1003               	clrc
  9427  0750  0D2A               	rlf	??___ftdiv+1,w
  9428  0751  0D2B               	rlf	??___ftdiv+2,w
  9429  0752  00AC               	movwf	??___ftdiv+3
  9430  0753  082C               	movf	??___ftdiv+3,w
  9431  0754  00B2               	movwf	___ftdiv@sign
  9432  0755  0832               	movf	___ftdiv@sign,w
  9433  0756  1D03               	btfss	3,2
  9434  0757  2F5F               	goto	l3307
  9435  0758  3000               	movlw	0
  9436  0759  00A3               	movwf	?___ftdiv
  9437  075A  3000               	movlw	0
  9438  075B  00A4               	movwf	?___ftdiv+1
  9439  075C  3000               	movlw	0
  9440  075D  00A5               	movwf	?___ftdiv+2
  9441  075E  0008               	return
  9442  075F                     l3307:	
  9443  075F  3000               	movlw	0
  9444  0760  00AE               	movwf	___ftdiv@f3
  9445  0761  3000               	movlw	0
  9446  0762  00AF               	movwf	___ftdiv@f3+1
  9447  0763  3000               	movlw	0
  9448  0764  00B0               	movwf	___ftdiv@f3+2
  9449  0765  3089               	movlw	137
  9450  0766  0732               	addwf	___ftdiv@sign,w
  9451  0767  00A9               	movwf	??___ftdiv
  9452  0768  0829               	movf	??___ftdiv,w
  9453  0769  02B1               	subwf	___ftdiv@exp,f
  9454  076A  0826               	movf	___ftdiv@f1,w
  9455  076B  00A9               	movwf	??___ftdiv
  9456  076C  0827               	movf	___ftdiv@f1+1,w
  9457  076D  00AA               	movwf	??___ftdiv+1
  9458  076E  0828               	movf	___ftdiv@f1+2,w
  9459  076F  00AB               	movwf	??___ftdiv+2
  9460  0770  3010               	movlw	16
  9461  0771                     u3995:	
  9462  0771  36AB               	lsrf	??___ftdiv+2,f
  9463  0772  0CAA               	rrf	??___ftdiv+1,f
  9464  0773  0CA9               	rrf	??___ftdiv,f
  9465  0774  0B89               	decfsz	9,f
  9466  0775  2F71               	goto	u3995
  9467  0776  0829               	movf	??___ftdiv,w
  9468  0777  00AC               	movwf	??___ftdiv+3
  9469  0778  082C               	movf	??___ftdiv+3,w
  9470  0779  00B2               	movwf	___ftdiv@sign
  9471  077A  0823               	movf	___ftdiv@f2,w
  9472  077B  00A9               	movwf	??___ftdiv
  9473  077C  0824               	movf	___ftdiv@f2+1,w
  9474  077D  00AA               	movwf	??___ftdiv+1
  9475  077E  0825               	movf	___ftdiv@f2+2,w
  9476  077F  00AB               	movwf	??___ftdiv+2
  9477  0780  3010               	movlw	16
  9478  0781                     u4005:	
  9479  0781  36AB               	lsrf	??___ftdiv+2,f
  9480  0782  0CAA               	rrf	??___ftdiv+1,f
  9481  0783  0CA9               	rrf	??___ftdiv,f
  9482  0784  0B89               	decfsz	9,f
  9483  0785  2F81               	goto	u4005
  9484  0786  0829               	movf	??___ftdiv,w
  9485  0787  00AC               	movwf	??___ftdiv+3
  9486  0788  082C               	movf	??___ftdiv+3,w
  9487  0789  06B2               	xorwf	___ftdiv@sign,f
  9488  078A  3080               	movlw	128
  9489  078B  00A9               	movwf	??___ftdiv
  9490  078C  0829               	movf	??___ftdiv,w
  9491  078D  05B2               	andwf	___ftdiv@sign,f
  9492  078E  17A7               	bsf	___ftdiv@f1+1,7
  9493  078F  30FF               	movlw	255
  9494  0790  05A6               	andwf	___ftdiv@f1,f
  9495  0791  30FF               	movlw	255
  9496  0792  05A7               	andwf	___ftdiv@f1+1,f
  9497  0793  3000               	movlw	0
  9498  0794  05A8               	andwf	___ftdiv@f1+2,f
  9499  0795  17A4               	bsf	___ftdiv@f2+1,7
  9500  0796  30FF               	movlw	255
  9501  0797  05A3               	andwf	___ftdiv@f2,f
  9502  0798  30FF               	movlw	255
  9503  0799  05A4               	andwf	___ftdiv@f2+1,f
  9504  079A  3000               	movlw	0
  9505  079B  05A5               	andwf	___ftdiv@f2+2,f
  9506  079C  3018               	movlw	24
  9507  079D  00A9               	movwf	??___ftdiv
  9508  079E  0829               	movf	??___ftdiv,w
  9509  079F  00AD               	movwf	___ftdiv@cntr
  9510  07A0                     l3321:	
  9511  07A0  3001               	movlw	1
  9512  07A1                     u4015:	
  9513  07A1  35AE               	lslf	___ftdiv@f3,f
  9514  07A2  0DAF               	rlf	___ftdiv@f3+1,f
  9515  07A3  0DB0               	rlf	___ftdiv@f3+2,f
  9516  07A4  0B89               	decfsz	9,f
  9517  07A5  2FA1               	goto	u4015
  9518  07A6  0825               	movf	___ftdiv@f2+2,w
  9519  07A7  0228               	subwf	___ftdiv@f1+2,w
  9520  07A8  1D03               	skipz
  9521  07A9  2FB0               	goto	u4025
  9522  07AA  0824               	movf	___ftdiv@f2+1,w
  9523  07AB  0227               	subwf	___ftdiv@f1+1,w
  9524  07AC  1D03               	skipz
  9525  07AD  2FB0               	goto	u4025
  9526  07AE  0823               	movf	___ftdiv@f2,w
  9527  07AF  0226               	subwf	___ftdiv@f1,w
  9528  07B0                     u4025:	
  9529  07B0  1C03               	skipc
  9530  07B1  2FB9               	goto	l3329
  9531  07B2  0823               	movf	___ftdiv@f2,w
  9532  07B3  02A6               	subwf	___ftdiv@f1,f
  9533  07B4  0824               	movf	___ftdiv@f2+1,w
  9534  07B5  3BA7               	subwfb	___ftdiv@f1+1,f
  9535  07B6  0825               	movf	___ftdiv@f2+2,w
  9536  07B7  3BA8               	subwfb	___ftdiv@f1+2,f
  9537  07B8  142E               	bsf	___ftdiv@f3,0
  9538  07B9                     l3329:	
  9539  07B9  3001               	movlw	1
  9540  07BA                     u4035:	
  9541  07BA  35A6               	lslf	___ftdiv@f1,f
  9542  07BB  0DA7               	rlf	___ftdiv@f1+1,f
  9543  07BC  0DA8               	rlf	___ftdiv@f1+2,f
  9544  07BD  0B89               	decfsz	9,f
  9545  07BE  2FBA               	goto	u4035
  9546  07BF  3001               	movlw	1
  9547  07C0  02AD               	subwf	___ftdiv@cntr,f
  9548  07C1  1D03               	btfss	3,2
  9549  07C2  2FA0               	goto	l3321
  9550  07C3  082E               	movf	___ftdiv@f3,w
  9551  07C4  00F3               	movwf	___ftpack@arg
  9552  07C5  082F               	movf	___ftdiv@f3+1,w
  9553  07C6  00F4               	movwf	___ftpack@arg+1
  9554  07C7  0830               	movf	___ftdiv@f3+2,w
  9555  07C8  00F5               	movwf	___ftpack@arg+2
  9556  07C9  0831               	movf	___ftdiv@exp,w
  9557  07CA  00A9               	movwf	??___ftdiv
  9558  07CB  0829               	movf	??___ftdiv,w
  9559  07CC  00F6               	movwf	___ftpack@exp
  9560  07CD  0832               	movf	___ftdiv@sign,w
  9561  07CE  00AA               	movwf	??___ftdiv+1
  9562  07CF  082A               	movf	??___ftdiv+1,w
  9563  07D0  00F7               	movwf	___ftpack@sign
  9564  07D1  318E  26A7         	fcall	___ftpack
  9565  07D3  0873               	movf	?___ftpack,w
  9566  07D4  0020               	movlb	0	; select bank0
  9567  07D5  00A3               	movwf	?___ftdiv
  9568  07D6  0874               	movf	?___ftpack+1,w
  9569  07D7  00A4               	movwf	?___ftdiv+1
  9570  07D8  0875               	movf	?___ftpack+2,w
  9571  07D9  00A5               	movwf	?___ftdiv+2
  9572  07DA  0008               	return
  9573  07DB                     __end_of___ftdiv:	
  9574                           
  9575                           	psect	text35
  9576  0C22                     __ptext35:	
  9577 ;; *************** function ___bmul *****************
  9578 ;; Defined at:
  9579 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul8.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;  multiplier      1    wreg     unsigned char 
  9582 ;;  multiplicand    1    3[COMMON] unsigned char 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;  multiplier      1    6[COMMON] unsigned char 
  9585 ;;  product         1    5[COMMON] unsigned char 
  9586 ;; Return value:  Size  Location     Type
  9587 ;;                  1    wreg      unsigned char 
  9588 ;; Registers used:
  9589 ;;		wreg, status,2, status,0
  9590 ;; Tracked objects:
  9591 ;;		On entry : 0/0
  9592 ;;		On exit  : 0/0
  9593 ;;		Unchanged: 0/0
  9594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9595 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9598 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;Total ram usage:        4 bytes
  9600 ;; Hardware stack levels used:    1
  9601 ;; Hardware stack levels required when called:    2
  9602 ;; This function calls:
  9603 ;;		Nothing
  9604 ;; This function is called by:
  9605 ;;		_strtod
  9606 ;; This function uses a non-reentrant model
  9607 ;;
  9608                           
  9609                           
  9610                           ;psect for function ___bmul
  9611  0C22                     ___bmul:	
  9612                           
  9613                           ;incstack = 0
  9614                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9615                           ;___bmul@multiplier stored from wreg
  9616  0C22  00F6               	movwf	___bmul@multiplier
  9617  0C23  01F5               	clrf	___bmul@product
  9618  0C24                     l3241:	
  9619  0C24  1C76               	btfss	___bmul@multiplier,0
  9620  0C25  2C2A               	goto	l3245
  9621  0C26  0873               	movf	___bmul@multiplicand,w
  9622  0C27  00F4               	movwf	??___bmul
  9623  0C28  0874               	movf	??___bmul,w
  9624  0C29  07F5               	addwf	___bmul@product,f
  9625  0C2A                     l3245:	
  9626  0C2A  1003               	clrc
  9627  0C2B  0DF3               	rlf	___bmul@multiplicand,f
  9628  0C2C  1003               	clrc
  9629  0C2D  0CF6               	rrf	___bmul@multiplier,f
  9630  0C2E  0876               	movf	___bmul@multiplier,w
  9631  0C2F  1D03               	btfss	3,2
  9632  0C30  2C24               	goto	l3241
  9633  0C31  0875               	movf	___bmul@product,w
  9634  0C32  0008               	return
  9635  0C33                     __end_of___bmul:	
  9636                           
  9637                           	psect	text36
  9638  0E2A                     __ptext36:	
  9639 ;; *************** function ___altoft *****************
  9640 ;; Defined at:
  9641 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\altoft.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  c               4    3[BANK0 ] long 
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;  sign            1   10[BANK0 ] unsigned char 
  9646 ;;  exp             1    9[BANK0 ] unsigned char 
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  3    3[BANK0 ] float 
  9649 ;; Registers used:
  9650 ;;		wreg, status,2, status,0, pclath, cstack
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9656 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9658 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9659 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;Total ram usage:        8 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    3
  9663 ;; This function calls:
  9664 ;;		___ftpack
  9665 ;; This function is called by:
  9666 ;;		_strtod
  9667 ;; This function uses a non-reentrant model
  9668 ;;
  9669                           
  9670                           
  9671                           ;psect for function ___altoft
  9672  0E2A                     ___altoft:	
  9673                           
  9674                           ;incstack = 0
  9675                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9676  0E2A  0020               	movlb	0	; select bank0
  9677  0E2B  01AA               	clrf	___altoft@sign
  9678  0E2C  308E               	movlw	142
  9679  0E2D  00A7               	movwf	??___altoft
  9680  0E2E  0827               	movf	??___altoft,w
  9681  0E2F  00A9               	movwf	___altoft@exp
  9682  0E30  1FA6               	btfss	___altoft@c+3,7
  9683  0E31  2E3F               	goto	l3263
  9684  0E32  09A3               	comf	___altoft@c,f
  9685  0E33  09A4               	comf	___altoft@c+1,f
  9686  0E34  09A5               	comf	___altoft@c+2,f
  9687  0E35  09A6               	comf	___altoft@c+3,f
  9688  0E36  0AA3               	incf	___altoft@c,f
  9689  0E37  1903               	skipnz
  9690  0E38  0AA4               	incf	___altoft@c+1,f
  9691  0E39  1903               	skipnz
  9692  0E3A  0AA5               	incf	___altoft@c+2,f
  9693  0E3B  1903               	skipnz
  9694  0E3C  0AA6               	incf	___altoft@c+3,f
  9695  0E3D  01AA               	clrf	___altoft@sign
  9696  0E3E  0AAA               	incf	___altoft@sign,f
  9697  0E3F                     l3263:	
  9698  0E3F  30FF               	movlw	255
  9699  0E40  0526               	andwf	___altoft@c+3,w
  9700  0E41  1903               	btfsc	3,2
  9701  0E42  2E4F               	goto	l3265
  9702  0E43  3001               	movlw	1
  9703  0E44                     u3905:	
  9704  0E44  36A6               	lsrf	___altoft@c+3,f
  9705  0E45  0CA5               	rrf	___altoft@c+2,f
  9706  0E46  0CA4               	rrf	___altoft@c+1,f
  9707  0E47  0CA3               	rrf	___altoft@c,f
  9708  0E48  0B89               	decfsz	9,f
  9709  0E49  2E44               	goto	u3905
  9710  0E4A  3001               	movlw	1
  9711  0E4B  00A7               	movwf	??___altoft
  9712  0E4C  0827               	movf	??___altoft,w
  9713  0E4D  07A9               	addwf	___altoft@exp,f
  9714  0E4E  2E3F               	goto	l3263
  9715  0E4F                     l3265:	
  9716  0E4F  0823               	movf	___altoft@c,w
  9717  0E50  00F3               	movwf	___ftpack@arg
  9718  0E51  0824               	movf	___altoft@c+1,w
  9719  0E52  00F4               	movwf	___ftpack@arg+1
  9720  0E53  0825               	movf	___altoft@c+2,w
  9721  0E54  00F5               	movwf	___ftpack@arg+2
  9722  0E55  0829               	movf	___altoft@exp,w
  9723  0E56  00A7               	movwf	??___altoft
  9724  0E57  0827               	movf	??___altoft,w
  9725  0E58  00F6               	movwf	___ftpack@exp
  9726  0E59  082A               	movf	___altoft@sign,w
  9727  0E5A  00A8               	movwf	??___altoft+1
  9728  0E5B  0828               	movf	??___altoft+1,w
  9729  0E5C  00F7               	movwf	___ftpack@sign
  9730  0E5D  318E  26A7         	fcall	___ftpack
  9731  0E5F  0873               	movf	?___ftpack,w
  9732  0E60  0020               	movlb	0	; select bank0
  9733  0E61  00A3               	movwf	?___altoft
  9734  0E62  0874               	movf	?___ftpack+1,w
  9735  0E63  00A4               	movwf	?___altoft+1
  9736  0E64  0875               	movf	?___ftpack+2,w
  9737  0E65  00A5               	movwf	?___altoft+2
  9738  0E66  0008               	return
  9739  0E67                     __end_of___altoft:	
  9740                           
  9741                           	psect	text37
  9742  0EA7                     __ptext37:	
  9743 ;; *************** function ___ftpack *****************
  9744 ;; Defined at:
  9745 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\float.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;  arg             3    3[COMMON] unsigned um
  9748 ;;  exp             1    6[COMMON] unsigned char 
  9749 ;;  sign            1    7[COMMON] unsigned char 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  3    3[COMMON] float 
  9754 ;; Registers used:
  9755 ;;		wreg, status,2, status,0
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9761 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9763 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9764 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9765 ;;Total ram usage:        8 bytes
  9766 ;; Hardware stack levels used:    1
  9767 ;; Hardware stack levels required when called:    2
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		___altoft
  9772 ;;		___awtoft
  9773 ;;		___ftadd
  9774 ;;		___ftdiv
  9775 ;;		___ftmul
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           
  9780                           ;psect for function ___ftpack
  9781  0EA7                     ___ftpack:	
  9782                           
  9783                           ;incstack = 0
  9784                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9785  0EA7  0876               	movf	___ftpack@exp,w
  9786  0EA8  1903               	btfsc	3,2
  9787  0EA9  2EAF               	goto	l3179
  9788  0EAA  0875               	movf	___ftpack@arg+2,w
  9789  0EAB  0474               	iorwf	___ftpack@arg+1,w
  9790  0EAC  0473               	iorwf	___ftpack@arg,w
  9791  0EAD  1D03               	skipz
  9792  0EAE  2EC1               	goto	l3185
  9793  0EAF                     l3179:	
  9794  0EAF  3000               	movlw	0
  9795  0EB0  00F3               	movwf	?___ftpack
  9796  0EB1  3000               	movlw	0
  9797  0EB2  00F4               	movwf	?___ftpack+1
  9798  0EB3  3000               	movlw	0
  9799  0EB4  00F5               	movwf	?___ftpack+2
  9800  0EB5  0008               	return
  9801  0EB6                     l3183:	
  9802  0EB6  3001               	movlw	1
  9803  0EB7  0020               	movlb	0	; select bank0
  9804  0EB8  00A0               	movwf	??___ftpack
  9805  0EB9  0820               	movf	??___ftpack,w
  9806  0EBA  07F6               	addwf	___ftpack@exp,f
  9807  0EBB  3001               	movlw	1
  9808  0EBC                     u3705:	
  9809  0EBC  36F5               	lsrf	___ftpack@arg+2,f
  9810  0EBD  0CF4               	rrf	___ftpack@arg+1,f
  9811  0EBE  0CF3               	rrf	___ftpack@arg,f
  9812  0EBF  0B89               	decfsz	9,f
  9813  0EC0  2EBC               	goto	u3705
  9814  0EC1                     l3185:	
  9815  0EC1  30FE               	movlw	254
  9816  0EC2  0575               	andwf	___ftpack@arg+2,w
  9817  0EC3  1903               	btfsc	3,2
  9818  0EC4  2EDB               	goto	l810
  9819  0EC5  2EB6               	goto	l3183
  9820  0EC6                     l3187:	
  9821  0EC6  3001               	movlw	1
  9822  0EC7  0020               	movlb	0	; select bank0
  9823  0EC8  00A0               	movwf	??___ftpack
  9824  0EC9  0820               	movf	??___ftpack,w
  9825  0ECA  07F6               	addwf	___ftpack@exp,f
  9826  0ECB  3001               	movlw	1
  9827  0ECC  07F3               	addwf	___ftpack@arg,f
  9828  0ECD  3000               	movlw	0
  9829  0ECE  1803               	skipnc
  9830  0ECF  3001               	movlw	1
  9831  0ED0  07F4               	addwf	___ftpack@arg+1,f
  9832  0ED1  3000               	movlw	0
  9833  0ED2  1803               	skipnc
  9834  0ED3  3001               	movlw	1
  9835  0ED4  07F5               	addwf	___ftpack@arg+2,f
  9836  0ED5  3001               	movlw	1
  9837  0ED6                     u3725:	
  9838  0ED6  36F5               	lsrf	___ftpack@arg+2,f
  9839  0ED7  0CF4               	rrf	___ftpack@arg+1,f
  9840  0ED8  0CF3               	rrf	___ftpack@arg,f
  9841  0ED9  0B89               	decfsz	9,f
  9842  0EDA  2ED6               	goto	u3725
  9843  0EDB                     l810:	
  9844  0EDB  30FF               	movlw	255
  9845  0EDC  0575               	andwf	___ftpack@arg+2,w
  9846  0EDD  1903               	btfsc	3,2
  9847  0EDE  2EE8               	goto	l3195
  9848  0EDF  2EC6               	goto	l3187
  9849  0EE0                     l3193:	
  9850  0EE0  3001               	movlw	1
  9851  0EE1  02F6               	subwf	___ftpack@exp,f
  9852  0EE2  3001               	movlw	1
  9853  0EE3                     u3745:	
  9854  0EE3  35F3               	lslf	___ftpack@arg,f
  9855  0EE4  0DF4               	rlf	___ftpack@arg+1,f
  9856  0EE5  0DF5               	rlf	___ftpack@arg+2,f
  9857  0EE6  0B89               	decfsz	9,f
  9858  0EE7  2EE3               	goto	u3745
  9859  0EE8                     l3195:	
  9860  0EE8  1BF4               	btfsc	___ftpack@arg+1,7
  9861  0EE9  2EEE               	goto	l817
  9862  0EEA  3002               	movlw	2
  9863  0EEB  0276               	subwf	___ftpack@exp,w
  9864  0EEC  1803               	skipnc
  9865  0EED  2EE0               	goto	l3193
  9866  0EEE                     l817:	
  9867  0EEE  1876               	btfsc	___ftpack@exp,0
  9868  0EEF  2EF6               	goto	l818
  9869  0EF0  30FF               	movlw	255
  9870  0EF1  05F3               	andwf	___ftpack@arg,f
  9871  0EF2  307F               	movlw	127
  9872  0EF3  05F4               	andwf	___ftpack@arg+1,f
  9873  0EF4  30FF               	movlw	255
  9874  0EF5  05F5               	andwf	___ftpack@arg+2,f
  9875  0EF6                     l818:	
  9876  0EF6  1003               	clrc
  9877  0EF7  0CF6               	rrf	___ftpack@exp,f
  9878  0EF8  0876               	movf	___ftpack@exp,w
  9879  0EF9  0020               	movlb	0	; select bank0
  9880  0EFA  00A0               	movwf	??___ftpack
  9881  0EFB  01A1               	clrf	??___ftpack+1
  9882  0EFC  01A2               	clrf	??___ftpack+2
  9883  0EFD  3010               	movlw	16
  9884  0EFE                     u3785:	
  9885  0EFE  35A0               	lslf	??___ftpack,f
  9886  0EFF  0DA1               	rlf	??___ftpack+1,f
  9887  0F00  0DA2               	rlf	??___ftpack+2,f
  9888  0F01  0B89               	decfsz	9,f
  9889  0F02  2EFE               	goto	u3785
  9890  0F03  0820               	movf	??___ftpack,w
  9891  0F04  04F3               	iorwf	___ftpack@arg,f
  9892  0F05  0821               	movf	??___ftpack+1,w
  9893  0F06  04F4               	iorwf	___ftpack@arg+1,f
  9894  0F07  0822               	movf	??___ftpack+2,w
  9895  0F08  04F5               	iorwf	___ftpack@arg+2,f
  9896  0F09  0877               	movf	___ftpack@sign,w
  9897  0F0A  1903               	btfsc	3,2
  9898  0F0B  0008               	return
  9899  0F0C  17F5               	bsf	___ftpack@arg+2,7
  9900  0F0D  0008               	return
  9901  0F0E                     __end_of___ftpack:	
  9902                           
  9903                           	psect	text38
  9904  0B74                     __ptext38:	
  9905 ;; *************** function _PI_SetSetpoint *****************
  9906 ;; Defined at:
  9907 ;;		line 25 in file "PI.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  value           2    3[COMMON] int 
  9910 ;; Auto vars:     Size  Location     Type
  9911 ;;		None
  9912 ;; Return value:  Size  Location     Type
  9913 ;;                  1    wreg      void 
  9914 ;; Registers used:
  9915 ;;		wreg
  9916 ;; Tracked objects:
  9917 ;;		On entry : 0/0
  9918 ;;		On exit  : 0/0
  9919 ;;		Unchanged: 0/0
  9920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9925 ;;Total ram usage:        2 bytes
  9926 ;; Hardware stack levels used:    1
  9927 ;; Hardware stack levels required when called:    2
  9928 ;; This function calls:
  9929 ;;		Nothing
  9930 ;; This function is called by:
  9931 ;;		_Java
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           
  9936                           ;psect for function _PI_SetSetpoint
  9937  0B74                     _PI_SetSetpoint:	
  9938                           
  9939                           ;PI.c: 26: setpoint = value;
  9940                           
  9941                           ;incstack = 0
  9942                           ; Regs used in _PI_SetSetpoint: [wreg]
  9943  0B74  0874               	movf	PI_SetSetpoint@value+1,w
  9944  0B75  0021               	movlb	1	; select bank1
  9945  0B76  00DD               	movwf	(_setpoint+1)^(0+128)
  9946  0B77  0873               	movf	PI_SetSetpoint@value,w
  9947  0B78  00DC               	movwf	_setpoint^(0+128)
  9948  0B79  0008               	return
  9949  0B7A                     __end_of_PI_SetSetpoint:	
  9950                           
  9951                           	psect	text39
  9952  0B8E                     __ptext39:	
  9953 ;; *************** function _PI_SetKp *****************
  9954 ;; Defined at:
  9955 ;;		line 29 in file "PI.c"
  9956 ;; Parameters:    Size  Location     Type
  9957 ;;  value           3    3[COMMON] float 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  1    wreg      void 
  9962 ;; Registers used:
  9963 ;;		wreg
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9969 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;Total ram usage:        3 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    2
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_Java
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           
  9984                           ;psect for function _PI_SetKp
  9985  0B8E                     _PI_SetKp:	
  9986                           
  9987                           ;PI.c: 30: kp = value;
  9988                           
  9989                           ;incstack = 0
  9990                           ; Regs used in _PI_SetKp: [wreg]
  9991  0B8E  0873               	movf	PI_SetKp@value,w
  9992  0B8F  0021               	movlb	1	; select bank1
  9993  0B90  00D9               	movwf	_kp^(0+128)
  9994  0B91  0874               	movf	PI_SetKp@value+1,w
  9995  0B92  00DA               	movwf	(_kp+1)^(0+128)
  9996  0B93  0875               	movf	PI_SetKp@value+2,w
  9997  0B94  00DB               	movwf	(_kp+2)^(0+128)
  9998  0B95  0008               	return
  9999  0B96                     __end_of_PI_SetKp:	
 10000                           
 10001                           	psect	text40
 10002  0B86                     __ptext40:	
 10003 ;; *************** function _PI_SetKi *****************
 10004 ;; Defined at:
 10005 ;;		line 33 in file "PI.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  value           3    3[COMMON] float 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;		None
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  1    wreg      void 
 10012 ;; Registers used:
 10013 ;;		wreg
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:        3 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    2
 10026 ;; This function calls:
 10027 ;;		Nothing
 10028 ;; This function is called by:
 10029 ;;		_Java
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           
 10034                           ;psect for function _PI_SetKi
 10035  0B86                     _PI_SetKi:	
 10036                           
 10037                           ;PI.c: 34: ki = value;
 10038                           
 10039                           ;incstack = 0
 10040                           ; Regs used in _PI_SetKi: [wreg]
 10041  0B86  0873               	movf	PI_SetKi@value,w
 10042  0B87  0020               	movlb	0	; select bank0
 10043  0B88  00EC               	movwf	_ki
 10044  0B89  0874               	movf	PI_SetKi@value+1,w
 10045  0B8A  00ED               	movwf	_ki+1
 10046  0B8B  0875               	movf	PI_SetKi@value+2,w
 10047  0B8C  00EE               	movwf	_ki+2
 10048  0B8D  0008               	return
 10049  0B8E                     __end_of_PI_SetKi:	
 10050                           
 10051                           	psect	text41
 10052  0B6E                     __ptext41:	
 10053 ;; *************** function _PI_GetSensorHeight *****************
 10054 ;; Defined at:
 10055 ;;		line 21 in file "PI.c"
 10056 ;; Parameters:    Size  Location     Type
 10057 ;;		None
 10058 ;; Auto vars:     Size  Location     Type
 10059 ;;		None
 10060 ;; Return value:  Size  Location     Type
 10061 ;;                  2    3[COMMON] int 
 10062 ;; Registers used:
 10063 ;;		wreg
 10064 ;; Tracked objects:
 10065 ;;		On entry : 0/0
 10066 ;;		On exit  : 0/0
 10067 ;;		Unchanged: 0/0
 10068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10072 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10073 ;;Total ram usage:        2 bytes
 10074 ;; Hardware stack levels used:    1
 10075 ;; Hardware stack levels required when called:    2
 10076 ;; This function calls:
 10077 ;;		Nothing
 10078 ;; This function is called by:
 10079 ;;		_Java
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           
 10084                           ;psect for function _PI_GetSensorHeight
 10085  0B6E                     _PI_GetSensorHeight:	
 10086                           
 10087                           ;PI.c: 22: return sensorHeight;
 10088                           
 10089                           ;incstack = 0
 10090                           ; Regs used in _PI_GetSensorHeight: [wreg]
 10091  0B6E  0021               	movlb	1	; select bank1
 10092  0B6F  0851               	movf	(_sensorHeight+1)^(0+128),w
 10093  0B70  00F4               	movwf	?_PI_GetSensorHeight+1
 10094  0B71  0850               	movf	_sensorHeight^(0+128),w
 10095  0B72  00F3               	movwf	?_PI_GetSensorHeight
 10096  0B73  0008               	return
 10097  0B74                     __end_of_PI_GetSensorHeight:	
 10098                           
 10099                           	psect	text42
 10100  0CC3                     __ptext42:	
 10101 ;; *************** function _EUSART_Read *****************
 10102 ;; Defined at:
 10103 ;;		line 112 in file "mcc_generated_files/eusart.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;		None
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  readValue       1    4[COMMON] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      unsigned char 
 10110 ;; Registers used:
 10111 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;Total ram usage:        2 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    2
 10124 ;; This function calls:
 10125 ;;		Nothing
 10126 ;; This function is called by:
 10127 ;;		_Java
 10128 ;;		_getch
 10129 ;; This function uses a non-reentrant model
 10130 ;;
 10131                           
 10132                           
 10133                           ;psect for function _EUSART_Read
 10134  0CC3                     _EUSART_Read:	
 10135                           
 10136                           ;eusart.c: 114: uint8_t readValue = 0;
 10137                           
 10138                           ;incstack = 0
 10139                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 10140  0CC3  01F4               	clrf	EUSART_Read@readValue
 10141  0CC4                     l3703:	
 10142                           ;eusart.c: 117: {
 10143                           
 10144                           ;eusart.c: 116: while(0 == eusartRxCount)
 10145                           
 10146  0CC4  0878               	movf	_eusartRxCount,w	;volatile
 10147  0CC5  1903               	btfsc	3,2
 10148  0CC6  2CC4               	goto	l3703
 10149                           
 10150                           ;eusart.c: 118: }
 10151                           ;eusart.c: 120: readValue = eusartRxBuffer[eusartRxTail++];
 10152  0CC7  0020               	movlb	0	; select bank0
 10153  0CC8  086B               	movf	_eusartRxTail,w
 10154  0CC9  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 10155  0CCA  0086               	movwf	6
 10156  0CCB  0187               	clrf	7
 10157  0CCC  0801               	movf	1,w
 10158  0CCD  00F3               	movwf	??_EUSART_Read
 10159  0CCE  0873               	movf	??_EUSART_Read,w
 10160  0CCF  00F4               	movwf	EUSART_Read@readValue
 10161  0CD0  3001               	movlw	1
 10162  0CD1  00F3               	movwf	??_EUSART_Read
 10163  0CD2  0873               	movf	??_EUSART_Read,w
 10164  0CD3  07EB               	addwf	_eusartRxTail,f
 10165                           
 10166                           ;eusart.c: 121: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 10167  0CD4  3008               	movlw	8
 10168  0CD5  026B               	subwf	_eusartRxTail,w
 10169  0CD6  1803               	btfsc	3,0
 10170                           
 10171                           ;eusart.c: 122: {
 10172                           ;eusart.c: 123: eusartRxTail = 0;
 10173  0CD7  01EB               	clrf	_eusartRxTail
 10174                           
 10175                           ;eusart.c: 124: }
 10176                           ;eusart.c: 125: PIE1bits.RCIE = 0;
 10177  0CD8  0021               	movlb	1	; select bank1
 10178  0CD9  1291               	bcf	17,5	;volatile
 10179                           
 10180                           ;eusart.c: 126: eusartRxCount--;
 10181  0CDA  3001               	movlw	1
 10182  0CDB  02F8               	subwf	_eusartRxCount,f	;volatile
 10183                           
 10184                           ;eusart.c: 127: PIE1bits.RCIE = 1;
 10185  0CDC  1691               	bsf	17,5	;volatile
 10186                           
 10187                           ;eusart.c: 129: return readValue;
 10188  0CDD  0874               	movf	EUSART_Read@readValue,w
 10189  0CDE  0008               	return
 10190  0CDF                     __end_of_EUSART_Read:	
 10191                           
 10192                           	psect	text43
 10193  0BEA                     __ptext43:	
 10194 ;; *************** function _ADC_Start *****************
 10195 ;; Defined at:
 10196 ;;		line 144 in file "mcc_generated_files/adc.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  reference       2    5[COMMON] unsigned int 
 10199 ;; Auto vars:     Size  Location     Type
 10200 ;;		None
 10201 ;; Return value:  Size  Location     Type
 10202 ;;                  1    wreg      void 
 10203 ;; Registers used:
 10204 ;;		wreg, status,2, status,0, pclath, cstack
 10205 ;; Tracked objects:
 10206 ;;		On entry : 0/0
 10207 ;;		On exit  : 0/0
 10208 ;;		Unchanged: 0/0
 10209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;Total ram usage:        2 bytes
 10215 ;; Hardware stack levels used:    1
 10216 ;; Hardware stack levels required when called:    4
 10217 ;; This function calls:
 10218 ;;		_ADC_SelectChannel
 10219 ;;		_ADC_StartConversion
 10220 ;;		_TMR2_Initialize
 10221 ;;		_TMR2_StartTimer
 10222 ;; This function is called by:
 10223 ;;		_main
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           
 10228                           ;psect for function _ADC_Start
 10229  0BEA                     _ADC_Start:	
 10230                           
 10231                           ;adc.c: 145: ADC_SelectChannel(Receiver);
 10232                           
 10233                           ;incstack = 0
 10234                           ; Regs used in _ADC_Start: [wreg+status,2+status,0+pclath+cstack]
 10235  0BEA  3012               	movlw	18
 10236  0BEB  318B  23DD  318B   	fcall	_ADC_SelectChannel
 10237                           
 10238                           ;adc.c: 146: ADC_StartConversion();
 10239  0BEE  318B  234F  318B   	fcall	_ADC_StartConversion
 10240                           
 10241                           ;adc.c: 147: TMR2_Initialize();
 10242  0BF1  318B  23A6  318B   	fcall	_TMR2_Initialize
 10243                           
 10244                           ;adc.c: 148: TMR2_StartTimer();
 10245  0BF4  318B  2352         	fcall	_TMR2_StartTimer
 10246  0BF6  0008               	return
 10247  0BF7                     __end_of_ADC_Start:	
 10248                           
 10249                           	psect	text44
 10250  0BA6                     __ptext44:	
 10251 ;; *************** function _TMR2_Initialize *****************
 10252 ;; Defined at:
 10253 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;		None
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;		None
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  1    wreg      void 
 10260 ;; Registers used:
 10261 ;;		wreg, status,2, status,0, pclath, cstack
 10262 ;; Tracked objects:
 10263 ;;		On entry : 0/0
 10264 ;;		On exit  : 0/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;Total ram usage:        0 bytes
 10272 ;; Hardware stack levels used:    1
 10273 ;; Hardware stack levels required when called:    3
 10274 ;; This function calls:
 10275 ;;		_TMR2_StartTimer
 10276 ;; This function is called by:
 10277 ;;		_ADC_Start
 10278 ;;		_SYSTEM_Initialize
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           
 10283                           ;psect for function _TMR2_Initialize
 10284  0BA6                     _TMR2_Initialize:	
 10285                           
 10286                           ;tmr2.c: 68: T2CON = 0x01;
 10287                           
 10288                           ;incstack = 0
 10289                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10290  0BA6  3001               	movlw	1
 10291  0BA7  0020               	movlb	0	; select bank0
 10292  0BA8  009F               	movwf	31	;volatile
 10293                           
 10294                           ;tmr2.c: 71: PR2 = 0x31;
 10295  0BA9  3031               	movlw	49
 10296  0BAA  009E               	movwf	30	;volatile
 10297                           
 10298                           ;tmr2.c: 74: TMR2 = 0x00;
 10299  0BAB  019D               	clrf	29	;volatile
 10300                           
 10301                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 10302  0BAC  1091               	bcf	17,1	;volatile
 10303                           
 10304                           ;tmr2.c: 80: TMR2_StartTimer();
 10305  0BAD  318B  2352         	fcall	_TMR2_StartTimer
 10306  0BAF  0008               	return
 10307  0BB0                     __end_of_TMR2_Initialize:	
 10308                           
 10309                           	psect	text45
 10310  0B52                     __ptext45:	
 10311 ;; *************** function _TMR2_StartTimer *****************
 10312 ;; Defined at:
 10313 ;;		line 83 in file "mcc_generated_files/tmr2.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;		None
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;		None
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  1    wreg      void 
 10320 ;; Registers used:
 10321 ;;		None
 10322 ;; Tracked objects:
 10323 ;;		On entry : 0/0
 10324 ;;		On exit  : 0/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10331 ;;Total ram usage:        0 bytes
 10332 ;; Hardware stack levels used:    1
 10333 ;; Hardware stack levels required when called:    2
 10334 ;; This function calls:
 10335 ;;		Nothing
 10336 ;; This function is called by:
 10337 ;;		_TMR2_Initialize
 10338 ;;		_ADC_Start
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           
 10343                           ;psect for function _TMR2_StartTimer
 10344  0B52                     _TMR2_StartTimer:	
 10345                           
 10346                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
 10347                           
 10348                           ;incstack = 0
 10349                           ; Regs used in _TMR2_StartTimer: []
 10350  0B52  0020               	movlb	0	; select bank0
 10351  0B53  151F               	bsf	31,2	;volatile
 10352  0B54  0008               	return
 10353  0B55                     __end_of_TMR2_StartTimer:	
 10354                           
 10355                           	psect	text46
 10356  0B4F                     __ptext46:	
 10357 ;; *************** function _ADC_StartConversion *****************
 10358 ;; Defined at:
 10359 ;;		line 99 in file "mcc_generated_files/adc.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;		None
 10362 ;; Auto vars:     Size  Location     Type
 10363 ;;		None
 10364 ;; Return value:  Size  Location     Type
 10365 ;;                  1    wreg      void 
 10366 ;; Registers used:
 10367 ;;		None
 10368 ;; Tracked objects:
 10369 ;;		On entry : 0/0
 10370 ;;		On exit  : 0/0
 10371 ;;		Unchanged: 0/0
 10372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10377 ;;Total ram usage:        0 bytes
 10378 ;; Hardware stack levels used:    1
 10379 ;; Hardware stack levels required when called:    2
 10380 ;; This function calls:
 10381 ;;		Nothing
 10382 ;; This function is called by:
 10383 ;;		_ADC_Start
 10384 ;; This function uses a non-reentrant model
 10385 ;;
 10386                           
 10387                           
 10388                           ;psect for function _ADC_StartConversion
 10389  0B4F                     _ADC_StartConversion:	
 10390                           
 10391                           ;adc.c: 102: ADCON0bits.ADGO = 1;
 10392                           
 10393                           ;incstack = 0
 10394                           ; Regs used in _ADC_StartConversion: []
 10395  0B4F  0021               	movlb	1	; select bank1
 10396  0B50  149D               	bsf	29,1	;volatile
 10397  0B51  0008               	return
 10398  0B52                     __end_of_ADC_StartConversion:	
 10399                           
 10400                           	psect	text47
 10401  0BDD                     __ptext47:	
 10402 ;; *************** function _ADC_SelectChannel *****************
 10403 ;; Defined at:
 10404 ;;		line 91 in file "mcc_generated_files/adc.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  channel         1    wreg     enum E7841
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;  channel         1    4[COMMON] enum E7841
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      void 
 10411 ;; Registers used:
 10412 ;;		wreg, status,2, status,0
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;Total ram usage:        2 bytes
 10423 ;; Hardware stack levels used:    1
 10424 ;; Hardware stack levels required when called:    2
 10425 ;; This function calls:
 10426 ;;		Nothing
 10427 ;; This function is called by:
 10428 ;;		_ADC_Start
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432                           
 10433                           ;psect for function _ADC_SelectChannel
 10434  0BDD                     _ADC_SelectChannel:	
 10435                           
 10436                           ;incstack = 0
 10437                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 10438                           ;ADC_SelectChannel@channel stored from wreg
 10439  0BDD  00F4               	movwf	ADC_SelectChannel@channel
 10440                           
 10441                           ;adc.c: 94: ADCON0bits.CHS = channel;
 10442  0BDE  0874               	movf	ADC_SelectChannel@channel,w
 10443  0BDF  00F3               	movwf	??_ADC_SelectChannel
 10444  0BE0  0DF3               	rlf	??_ADC_SelectChannel,f
 10445  0BE1  0DF3               	rlf	??_ADC_SelectChannel,f
 10446  0BE2  0021               	movlb	1	; select bank1
 10447  0BE3  081D               	movf	29,w	;volatile
 10448  0BE4  0673               	xorwf	??_ADC_SelectChannel,w
 10449  0BE5  3903               	andlw	-253
 10450  0BE6  0673               	xorwf	??_ADC_SelectChannel,w
 10451  0BE7  009D               	movwf	29	;volatile
 10452                           
 10453                           ;adc.c: 96: ADCON0bits.ADON = 1;
 10454  0BE8  141D               	bsf	29,0	;volatile
 10455  0BE9  0008               	return
 10456  0BEA                     __end_of_ADC_SelectChannel:	
 10457                           
 10458                           	psect	text48
 10459  0C73                     __ptext48:	
 10460 ;; *************** function _ADC_GetConversion *****************
 10461 ;; Defined at:
 10462 ;;		line 118 in file "mcc_generated_files/adc.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;  channel         1    wreg     enum E7841
 10465 ;; Auto vars:     Size  Location     Type
 10466 ;;  channel         1    6[COMMON] enum E7841
 10467 ;; Return value:  Size  Location     Type
 10468 ;;                  2    3[COMMON] unsigned int 
 10469 ;; Registers used:
 10470 ;;		wreg, status,2, status,0
 10471 ;; Tracked objects:
 10472 ;;		On entry : 0/0
 10473 ;;		On exit  : 0/0
 10474 ;;		Unchanged: 0/0
 10475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10479 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;Total ram usage:        4 bytes
 10481 ;; Hardware stack levels used:    1
 10482 ;; Hardware stack levels required when called:    2
 10483 ;; This function calls:
 10484 ;;		Nothing
 10485 ;; This function is called by:
 10486 ;;		_main
 10487 ;; This function uses a non-reentrant model
 10488 ;;
 10489                           
 10490                           
 10491                           ;psect for function _ADC_GetConversion
 10492  0C73                     _ADC_GetConversion:	
 10493                           
 10494                           ;incstack = 0
 10495                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10496                           ;ADC_GetConversion@channel stored from wreg
 10497  0C73  00F6               	movwf	ADC_GetConversion@channel
 10498                           
 10499                           ;adc.c: 121: ADCON0bits.CHS = channel;
 10500  0C74  0876               	movf	ADC_GetConversion@channel,w
 10501  0C75  00F5               	movwf	??_ADC_GetConversion
 10502  0C76  0DF5               	rlf	??_ADC_GetConversion,f
 10503  0C77  0DF5               	rlf	??_ADC_GetConversion,f
 10504  0C78  0021               	movlb	1	; select bank1
 10505  0C79  081D               	movf	29,w	;volatile
 10506  0C7A  0675               	xorwf	??_ADC_GetConversion,w
 10507  0C7B  3903               	andlw	-253
 10508  0C7C  0675               	xorwf	??_ADC_GetConversion,w
 10509  0C7D  009D               	movwf	29	;volatile
 10510                           
 10511                           ;adc.c: 124: ADCON0bits.ADON = 1;
 10512  0C7E  141D               	bsf	29,0	;volatile
 10513                           
 10514                           ;adc.c: 126: _delay((unsigned long)((5)*(32000000/4000000.0)));
 10515  0C7F  300D               	movlw	13
 10516  0C80                     u5397:	
 10517  0C80  0B89               	decfsz	9,f
 10518  0C81  2C80               	goto	u5397
 10519  0C82  0000               	nop
 10520                           
 10521                           ;adc.c: 129: ADCON0bits.ADGO = 1;
 10522  0C83  0021               	movlb	1	; select bank1
 10523  0C84  149D               	bsf	29,1	;volatile
 10524  0C85                     l233:	
 10525                           ;adc.c: 133: {
 10526                           
 10527                           ;adc.c: 132: while (ADCON0bits.ADGO)
 10528                           
 10529  0C85  189D               	btfsc	29,1	;volatile
 10530  0C86  2C85               	goto	l233
 10531                           
 10532                           ;adc.c: 134: }
 10533                           ;adc.c: 136: return ((ADRESH << 8) + ADRESL);
 10534  0C87  081C               	movf	28,w	;volatile
 10535  0C88  00F4               	movwf	?_ADC_GetConversion+1
 10536  0C89  081B               	movf	27,w	;volatile
 10537  0C8A  00F3               	movwf	?_ADC_GetConversion
 10538  0C8B  0008               	return
 10539  0C8C                     __end_of_ADC_GetConversion:	
 10540                           
 10541                           	psect	intentry
 10542  0004                     __pintentry:	
 10543 ;; *************** function _INTERRUPT_InterruptManager *****************
 10544 ;; Defined at:
 10545 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;		None
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;		None
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;Total ram usage:        1 bytes
 10564 ;; Hardware stack levels used:    1
 10565 ;; Hardware stack levels required when called:    1
 10566 ;; This function calls:
 10567 ;;		_ADC_ISR
 10568 ;;		_EUSART_Receive_ISR
 10569 ;;		_EUSART_Transmit_ISR
 10570 ;; This function is called by:
 10571 ;;		Interrupt level 1
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574                           
 10575  0004                     _INTERRUPT_InterruptManager:	
 10576                           
 10577                           ;incstack = 0
 10578  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10579                           
 10580                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10581  0005  3180               	pagesel	$
 10582  0006  0020               	movlb	0	; select bank0
 10583  0007  087F               	movf	127,w
 10584  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
 10585                           
 10586                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
 10587  0009  1F0B               	btfss	11,6	;volatile
 10588  000A  2815               	goto	i1l297
 10589  000B  0021               	movlb	1	; select bank1
 10590  000C  1E91               	btfss	17,5	;volatile
 10591  000D  2815               	goto	i1l297
 10592  000E  0020               	movlb	0	; select bank0
 10593  000F  1E91               	btfss	17,5	;volatile
 10594  0010  2815               	goto	i1l297
 10595                           
 10596                           ;interrupt_manager.c: 55: {
 10597                           ;interrupt_manager.c: 56: EUSART_Receive_ISR();
 10598  0011  318C  248C  3180   	fcall	_EUSART_Receive_ISR
 10599                           
 10600                           ;interrupt_manager.c: 57: }
 10601  0014  282B               	goto	i1l303
 10602  0015                     i1l297:	
 10603                           
 10604                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits
      +                          .ADIF == 1)
 10605  0015  1F0B               	btfss	11,6	;volatile
 10606  0016  2821               	goto	i1l299
 10607  0017  0021               	movlb	1	; select bank1
 10608  0018  1F11               	btfss	17,6	;volatile
 10609  0019  2821               	goto	i1l299
 10610  001A  0020               	movlb	0	; select bank0
 10611  001B  1F11               	btfss	17,6	;volatile
 10612  001C  2821               	goto	i1l299
 10613                           
 10614                           ;interrupt_manager.c: 59: {
 10615                           ;interrupt_manager.c: 60: ADC_ISR();
 10616  001D  318B  23B0  3180   	fcall	_ADC_ISR
 10617                           
 10618                           ;interrupt_manager.c: 61: }
 10619  0020  282B               	goto	i1l303
 10620  0021                     i1l299:	
 10621                           
 10622                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits
      +                          .TXIF == 1)
 10623  0021  1F0B               	btfss	11,6	;volatile
 10624  0022  282B               	goto	i1l303
 10625  0023  0021               	movlb	1	; select bank1
 10626  0024  1E11               	btfss	17,4	;volatile
 10627  0025  282B               	goto	i1l303
 10628  0026  0020               	movlb	0	; select bank0
 10629  0027  1E11               	btfss	17,4	;volatile
 10630  0028  282B               	goto	i1l303
 10631                           
 10632                           ;interrupt_manager.c: 63: {
 10633                           ;interrupt_manager.c: 64: EUSART_Transmit_ISR();
 10634  0029  318C  24A7         	fcall	_EUSART_Transmit_ISR
 10635  002B                     i1l303:	
 10636                           ;interrupt_manager.c: 66: else
 10637                           ;interrupt_manager.c: 67: {
 10638                           
 10639                           ;interrupt_manager.c: 65: }
 10640                           
 10641  002B  0872               	movf	??_INTERRUPT_InterruptManager,w
 10642  002C  0020               	movlb	0	; select bank0
 10643  002D  00FF               	movwf	127
 10644  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10645  002F  0009               	retfie
 10646  0030                     __end_of_INTERRUPT_InterruptManager:	
 10647                           
 10648                           	psect	text50
 10649  0CA7                     __ptext50:	
 10650 ;; *************** function _EUSART_Transmit_ISR *****************
 10651 ;; Defined at:
 10652 ;;		line 165 in file "mcc_generated_files/eusart.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;		None
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;		None
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;Total ram usage:        1 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; This function calls:
 10673 ;;		Nothing
 10674 ;; This function is called by:
 10675 ;;		_INTERRUPT_InterruptManager
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           
 10680                           ;psect for function _EUSART_Transmit_ISR
 10681  0CA7                     _EUSART_Transmit_ISR:	
 10682                           
 10683                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 10684                           
 10685                           ;incstack = 0
 10686                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10687  0CA7  3008               	movlw	8
 10688  0CA8  0021               	movlb	1	; select bank1
 10689  0CA9  0262               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 10690  0CAA  1803               	skipnc
 10691  0CAB  2CC1               	goto	i1l98
 10692                           
 10693                           ;eusart.c: 170: {
 10694                           ;eusart.c: 171: TX1REG = eusartTxBuffer[eusartTxTail++];
 10695  0CAC  087A               	movf	_eusartTxTail,w
 10696  0CAD  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 10697  0CAE  0086               	movwf	6
 10698  0CAF  0187               	clrf	7
 10699  0CB0  0801               	movf	1,w
 10700  0CB1  0023               	movlb	3	; select bank3
 10701  0CB2  009A               	movwf	26	;volatile
 10702  0CB3  3001               	movlw	1
 10703  0CB4  00F0               	movwf	??_EUSART_Transmit_ISR
 10704  0CB5  0870               	movf	??_EUSART_Transmit_ISR,w
 10705  0CB6  07FA               	addwf	_eusartTxTail,f
 10706                           
 10707                           ;eusart.c: 172: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 10708  0CB7  3008               	movlw	8
 10709  0CB8  027A               	subwf	_eusartTxTail,w
 10710  0CB9  1803               	btfsc	3,0
 10711                           
 10712                           ;eusart.c: 173: {
 10713                           ;eusart.c: 174: eusartTxTail = 0;
 10714  0CBA  01FA               	clrf	_eusartTxTail
 10715                           
 10716                           ;eusart.c: 175: }
 10717                           ;eusart.c: 176: eusartTxBufferRemaining++;
 10718  0CBB  3001               	movlw	1
 10719  0CBC  00F0               	movwf	??_EUSART_Transmit_ISR
 10720  0CBD  0870               	movf	??_EUSART_Transmit_ISR,w
 10721  0CBE  0021               	movlb	1	; select bank1
 10722  0CBF  07E2               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 10723                           
 10724                           ;eusart.c: 177: }
 10725  0CC0  0008               	return
 10726  0CC1                     i1l98:	
 10727                           
 10728                           ;eusart.c: 178: else
 10729                           ;eusart.c: 179: {
 10730                           ;eusart.c: 180: PIE1bits.TXIE = 0;
 10731  0CC1  1211               	bcf	17,4	;volatile
 10732  0CC2  0008               	return
 10733  0CC3                     __end_of_EUSART_Transmit_ISR:	
 10734                           
 10735                           	psect	text51
 10736  0C8C                     __ptext51:	
 10737 ;; *************** function _EUSART_Receive_ISR *****************
 10738 ;; Defined at:
 10739 ;;		line 184 in file "mcc_generated_files/eusart.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;		None
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;		None
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      void 
 10746 ;; Registers used:
 10747 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10755 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10757 ;;Total ram usage:        1 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_INTERRUPT_InterruptManager
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           
 10767                           ;psect for function _EUSART_Receive_ISR
 10768  0C8C                     _EUSART_Receive_ISR:	
 10769                           
 10770                           ;eusart.c: 187: if(1 == RC1STAbits.OERR)
 10771                           
 10772                           ;incstack = 0
 10773                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10774  0C8C  0023               	movlb	3	; select bank3
 10775  0C8D  1C9D               	btfss	29,1	;volatile
 10776  0C8E  2C91               	goto	i1l3011
 10777                           
 10778                           ;eusart.c: 188: {
 10779                           ;eusart.c: 191: RC1STAbits.CREN = 0;
 10780  0C8F  121D               	bcf	29,4	;volatile
 10781                           
 10782                           ;eusart.c: 192: RC1STAbits.CREN = 1;
 10783  0C90  161D               	bsf	29,4	;volatile
 10784  0C91                     i1l3011:	
 10785                           
 10786                           ;eusart.c: 193: }
 10787                           ;eusart.c: 196: eusartRxBuffer[eusartRxHead++] = RC1REG;
 10788  0C91  0819               	movf	25,w	;volatile
 10789  0C92  00F0               	movwf	??_EUSART_Receive_ISR
 10790  0C93  0020               	movlb	0	; select bank0
 10791  0C94  086A               	movf	_eusartRxHead,w
 10792  0C95  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 10793  0C96  0086               	movwf	6
 10794  0C97  0187               	clrf	7
 10795  0C98  0870               	movf	??_EUSART_Receive_ISR,w
 10796  0C99  0081               	movwf	1
 10797  0C9A  3001               	movlw	1
 10798  0C9B  00F0               	movwf	??_EUSART_Receive_ISR
 10799  0C9C  0870               	movf	??_EUSART_Receive_ISR,w
 10800  0C9D  07EA               	addwf	_eusartRxHead,f
 10801                           
 10802                           ;eusart.c: 197: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 10803  0C9E  3008               	movlw	8
 10804  0C9F  026A               	subwf	_eusartRxHead,w
 10805  0CA0  1803               	btfsc	3,0
 10806                           
 10807                           ;eusart.c: 198: {
 10808                           ;eusart.c: 199: eusartRxHead = 0;
 10809  0CA1  01EA               	clrf	_eusartRxHead
 10810                           
 10811                           ;eusart.c: 200: }
 10812                           ;eusart.c: 201: eusartRxCount++;
 10813  0CA2  3001               	movlw	1
 10814  0CA3  00F0               	movwf	??_EUSART_Receive_ISR
 10815  0CA4  0870               	movf	??_EUSART_Receive_ISR,w
 10816  0CA5  07F8               	addwf	_eusartRxCount,f	;volatile
 10817  0CA6  0008               	return
 10818  0CA7                     __end_of_EUSART_Receive_ISR:	
 10819                           
 10820                           	psect	text52
 10821  0BB0                     __ptext52:	
 10822 ;; *************** function _ADC_ISR *****************
 10823 ;; Defined at:
 10824 ;;		line 152 in file "mcc_generated_files/adc.c"
 10825 ;; Parameters:    Size  Location     Type
 10826 ;;		None
 10827 ;; Auto vars:     Size  Location     Type
 10828 ;;		None
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  1    wreg      void 
 10831 ;; Registers used:
 10832 ;;		wreg
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;Total ram usage:        2 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; This function calls:
 10845 ;;		Nothing
 10846 ;; This function is called by:
 10847 ;;		_INTERRUPT_InterruptManager
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           
 10852                           ;psect for function _ADC_ISR
 10853  0BB0                     _ADC_ISR:	
 10854                           
 10855                           ;adc.c: 153: ADC_result=(int) ADRESH;
 10856                           
 10857                           ;incstack = 0
 10858                           ; Regs used in _ADC_ISR: [wreg]
 10859  0BB0  0021               	movlb	1	; select bank1
 10860  0BB1  081C               	movf	28,w	;volatile
 10861  0BB2  00F0               	movwf	??_ADC_ISR
 10862  0BB3  01F1               	clrf	??_ADC_ISR+1
 10863  0BB4  0870               	movf	??_ADC_ISR,w
 10864  0BB5  00C2               	movwf	_ADC_result^(0+128)
 10865  0BB6  0871               	movf	??_ADC_ISR+1,w
 10866  0BB7  00C3               	movwf	(_ADC_result+1)^(0+128)
 10867                           
 10868                           ;adc.c: 156: PIR1bits.ADIF = 0;
 10869  0BB8  0020               	movlb	0	; select bank0
 10870  0BB9  1311               	bcf	17,6	;volatile
 10871  0BBA  0008               	return
 10872  0BBB                     __end_of_ADC_ISR:	
 10873  007E                     btemp	set	126	;btemp
 10874  007E                     int$flags	set	126
 10875  007E                     wtemp0	set	126


Data Sizes:
    Strings     5
    Constant    10
    Data        8
    BSS         66
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     70      79
    BANK1            80      4      67
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 7
		 -> value(BANK1[7]), 

    atof@s	PTR const unsigned char  size(1) Largest target is 7
		 -> value(BANK1[7]), 

    strtod@s	PTR const unsigned char  size(1) Largest target is 7
		 -> value(BANK1[7]), 

    strtod@res	PTR PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[2]), STR_1(CODE[3]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    _printf->___lwdiv
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _atoi->___wmul
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___altoft->___ftpack
    _ADC_Start->_ADC_SelectChannel

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_ADC_ISR

Critical Paths under _main in BANK0

    _main->_Java
    _PI->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _Java->_atof
    _printf->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul
    _atof->_strtod
    _strtod->___ftge
    ___ftmul->___awtoft
    ___ftge->___ftmul
    ___ftdiv->___ftpack
    ___altoft->___ftpack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Java

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29749
                                              2 BANK1      2     2      0
                  _ADC_GetConversion
                          _ADC_Start
                               _Java
                                 _PI
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PI                                                   5     5      0   12507
                                             52 BANK0      5     5      0
                      _ADC_GetResult
                 _PWM5_LoadDutyValue
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             38 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4325
                                             25 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2811
                                              3 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     139
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetResult                                        2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Java                                                 4     4      0   17035
                                             68 BANK0      2     2      0
                                              0 BANK1      2     2      0
                        _EUSART_Read
                 _PI_GetSensorHeight
                           _PI_SetKi
                           _PI_SetKp
                     _PI_SetSetpoint
                               _atof
                               _atoi
                             _printf
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              2     2      0      96
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _printf                                              22    18      4    1591
                                              9 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      93
                                              5 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         2     2      0      62
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     386
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     395
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     756
                                              2 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atof                                                 5     1      4   14101
                                             63 BANK0      5     1      4
                             _strtod
 ---------------------------------------------------------------------------------
 (3) _strtod                                              29    26      3   14004
                                             34 BANK0     29    26      3
                           ___altoft
                             ___bmul
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              2     2      0     130
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     290
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     296
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3936
                                              9 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     814
                                             25 BANK0      9     3      6
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    3252
                                              3 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     290
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2805
                                              3 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2524
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _PI_SetSetpoint                                       2     0      2     108
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PI_SetKp                                             3     0      3     108
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PI_SetKi                                             3     0      3     108
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PI_GetSensorHeight                                   2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      37
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Start                                            2     0      2     108
                                              5 COMMON     2     0      2
                  _ADC_SelectChannel
                _ADC_StartConversion
                    _TMR2_Initialize
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              2 COMMON     1     1      0
                            _ADC_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Start
     _ADC_SelectChannel
     _ADC_StartConversion
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR2_StartTimer
   _Java
     _EUSART_Read
     _PI_GetSensorHeight
     _PI_SetKi
     _PI_SetKp
     _PI_SetSetpoint
     _atof
       _strtod
         ___altoft
           ___ftpack
         ___bmul
         ___ftdiv
           ___ftpack
         ___ftge
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
         ___lmul
         _isdigit
         _isspace
     _atoi
       ___wmul
       _isdigit
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART_Write
     _toupper
   _PI
     _ADC_GetResult
     _PWM5_LoadDutyValue
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftge
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM5_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
     _TMR0_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     46      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      43       7       83.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue Feb 14 09:40:49 2017

                    ?_PI_SetSetpoint 0073                         ___altoft@exp 0029  
                     ___bmul@product 0075      __end_of_TMR0_HasOverflowOccured 0B69  
                        __CFG_CP$OFF 0000                        ___altoft@sign 002A  
                                 l86 0D24                                   _PI 02C4  
                                 _ki 006C                                   _kp 00D9  
                 __size_of_ADC_Start 000D                  ___wmul@multiplicand 0075  
                       ___ftadd@exp1 0045                         ___ftadd@exp2 0044  
                        __CFG_LVP$ON 0000                                  ?_PI 0070  
                       ___ftadd@sign 0043                                  l233 0C85  
                                l336 07F0                                  l433 05C5  
                                l374 03BB                                  l463 067D  
                                l375 03C7                                  l545 0D05  
                                l810 0EDB                                  l722 02AB  
                                l901 0FE6                                  l817 0EEE  
                                l841 0485                                  l818 0EF6  
                                l682 00D0                                  l677 0102  
                                l699 01BA                                  _GIE 005F  
                                _PR2 001E                         __CFG_CPD$OFF 0000  
                    __end_of_ADC_ISR 0BBB                      _TMR2_Initialize 0BA6  
                                wreg 0009                                 ??_PI 0054  
                       ?_EUSART_Read 0070                         ___ftdiv@cntr 002D  
                       ___ftdiv@sign 0032                                 l4011 0FC2  
                               l3301 0749                                 l4021 0FE9  
                               l4013 0FD0                                 l3231 0D9C  
                               l3223 0D37                                 l4103 0523  
                               l3241 0C24                                 l3321 07A0  
                               l3209 0D1A                                 l4105 0539  
                               l4025 0FF7                                 l3307 075F  
                               l3227 0D91                                 l4131 059F  
                               l4123 0573                                 l4019 0FDD  
                               l3245 0C2A                                 l3341 0E05  
                               l3501 0126                                 l3183 0EB6  
                               l3263 0E3F                                 l3423 0CFE  
                               l4127 0586                                 l3193 0EE0  
                               l3185 0EC1                                 l3265 0E4F  
                               l3329 07B9                                 l3345 0E1B  
                               l3505 012D                                 l3441 006E  
                               l4137 05B8                                 l3195 0EE8  
                               l3187 0EC6                                 l3179 0EAF  
                               l3363 0695                                 l3291 0C03  
                               l3507 0131                                 l3451 0087  
                               l3443 007E                                 l4091 050D  
                               l4075 03DA                                 l4067 0392  
                               l3381 06E6                                 l3277 0C42  
                               l3525 0188                                 l3461 00A6  
                               l3453 008B                                 l3703 0CC4  
                               l3279 0C43                                 l3551 01BE  
                               l3463 009A                                 l3455 008F  
                               l4079 03DF                                 l3393 0702  
                               l3385 06EE                                 l3369 06AB  
                               l3625 02BD                                 l3553 01DE  
                               l3537 019C                                 l3529 018D  
                               l3641 0DCE                                 l3619 02A4  
                               l3651 0DE9                                 l3397 070A  
                               l3557 01F8                                 l3469 00A8  
                               l3821 0600                                 l3591 0252  
                               l3583 0232                                 l3495 0119  
                               l3647 0DE0                                 l3639 0DC2  
                               l3663 0D63                                 l3831 0616  
                               l3815 05E7                                 l3593 0257  
                               l3489 0109                                 l3665 0D6F  
                               l3673 0D84                                 l3913 0D45  
                               l3587 0238                                 l3579 022B  
                               l3843 063B                                 l3923 040E  
                               l3597 0271                                 l3669 0D7B  
                               l3853 0648                                 l3837 061C  
                               l3933 0424                                 l3871 0F10  
                               l3847 0643                                 l3855 05CB  
                               l3863 0C20                                 l3951 0451  
                               l3927 0415                                 l3881 0F32  
                               l3873 0F1C                                 l3953 045B  
                               l3945 043E                                 l3891 0F64  
                               l3963 0477                                 l3955 0460  
                               l3869 0F17                                 l3973 04A9  
                               l3965 0481                                 l3957 0464  
                               l3887 0F39                                 l3983 04C4  
                               l3897 0F74                                 l3889 0F3D  
                               l3969 0497                                 l3993 0F92  
                               STR_1 100A                                 STR_2 100D  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 u4005 0781  
                               u4015 07A1                                 u4025 07B0  
                               u4105 06B7                                 u4035 07BA  
                               u4115 06C7                                 u4135 06EF  
                               u4145 06F5                                 u4225 0D06  
                               u5025 043F                                 u4235 0D0B  
                               u5115 0478                                 u4325 00C8  
                               u5205 0FC3                                 u4175 070B  
                               u5055 0452                                 u3705 0EBC  
                               u4185 0711                                 u5305 03D3  
                               u5235 0FDE                                 u3725 0ED6  
                               u5325 04E8                                 u5085 0465  
                               u4615 0DCF                                 u5175 0F99  
                               u3745 0EE3                                 u3905 0E44  
                               u4625 0DD9                                 u4730 0EA5  
                               u4635 0DE1                                 u5355 055A  
                               u3845 0D9D                                 u3855 0DA4  
                               u3785 0EFE                                 u4665 0D66  
                               u4595 0DC5                                 u5387 051D  
                               u4755 0C54                                 u5397 0C80  
                               u4685 0D75                                 u4695 0D7C  
                               i1l98 0CC1                                 u3995 0771  
                               u4795 0631                                 _TMR2 001D  
                               _WPUA 020C                                 _WPUB 020D  
                               _WPUC 020E                                 _Java 04DC  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _data 00A0                                 _atof 0C05  
                               _atoi 0F0E                                 _main 07DB  
                       ___ftpack@arg 0073                         ___ftpack@exp 0076  
                    _TMR0_StartTimer 0B55                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                        __CFG_BORV$LOW 0000  
                               start 0030                      _PWM5_Initialize 0BD1  
                      __CFG_CSWEN$ON 0000                    ___bmul@multiplier 0076  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 0037  
                       ___ftmul@sign 0038           __end_of_PWM5_LoadDutyValue 0C5B  
                       ___fttol@exp1 0053                         ___fttol@lval 004F  
            __end_of_TMR0_Initialize 0BD1                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0008                                ?_Java 0070  
      __end_of_OSCILLATOR_Initialize 0BA6                                ?_atof 005F  
                              _ADACT 009F                                ?_atoi 0022  
                              ?_main 0070                      __end_of___ftadd 04DC  
                      __CFG_WDTE$OFF 0000                      __end_of___ftdiv 07DB  
                    __end_of___ftneg 0B9E                      __end_of___ftmul 0732  
                    __end_of___fttol 1000                                _T2CON 001F  
                     __CFG_DEBUG$OFF 0000                      __end_of___lwdiv 0DEE  
                              i1l303 002B                      __end_of___lwmod 0D89  
                              i1l297 0015                                i1l299 0021  
                              _OSCEN 091D                                Java@i 00DE  
                              _TMR0H 0016                                _TMR0L 0015  
        __size_of_PI_GetSensorHeight 0006                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                 ADC_Start@reference 0075                  ___lmul@multiplicand 0024  
                      ___awtoft@sign 0028                      __end_of_dpowers 100A  
                      PI_SetKi@value 0073                       _WDT_Initialize 0B5B  
                              _index 00CC                                _error 00CA  
                    __end_of_isdigit 0C05                     __end_of_PI_SetKi 0B8E  
                   __end_of_PI_SetKp 0B96                        ___ftpack@sign 0077  
                              _value 00D2                                atoi@a 0027  
                              atof@s 0063                                atoi@s 0029  
                              _putch 0B5F                      __end_of_isspace 0C45  
                      PI_SetKp@value 0073                    __end_of_ADC_Start 0BF7  
                              status 0003                                wtemp0 007E  
                    _TMR2_StartTimer 0B52                      __end_of_toupper 0C22  
                       __end_of_Java 05C6                      __initialization 0032  
                       __end_of_atof 0C13                         __end_of_atoi 0F79  
                       __end_of_main 0800                       ??_EUSART_Write 0073  
             __size_of_ADC_GetResult 0006              __end_of_TMR2_Initialize 0BB0  
                          ??_ADC_ISR 0070          ?_INTERRUPT_InterruptManager 0070  
                             ??_Java 0064                               ??_atof 0078  
                             ??_atoi 0024                               ??_main 0078  
                      ___fttol@sign1 004E               __end_of_WDT_Initialize 0B5F  
                             UART@ki 00B8                               UART@kp 00BB  
            __end_of_TMR0_StartTimer 0B58                               _ADCON0 009D  
                             _ADCON1 009E                     __end_of___altoft 0E67  
                             _ADRESH 009C                               _ADRESL 009B  
                   __end_of___awtoft 0D5C                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELB 018D  
                             _ANSELC 018E                     __end_of___ftpack 0F0E  
                             _T0CON0 0017                               _T0CON1 0018  
                             _RC1REG 0199                               _RC1STA 019D  
                             i1l3011 0C91                               _ODCONA 028C  
                             _ODCONB 028D                               _ODCONC 028E  
            __end_of_PWM5_Initialize 0BDD                               _OSCFRQ 091F  
   __size_of_TMR0_HasOverflowOccured 0005                               _TX1REG 019A  
                             _WDTCON 0097                               _TX1STA 019E  
                     __CFG_PWRTE$OFF 0000                               ___bmul 0C22  
                             ___ftge 0DEE                               ___lmul 0D89  
                             ___wmul 0CFB                            ??___ftadd 003F  
                     __CFG_STVREN$ON 0000                            ??___ftdiv 0029  
                          ??___ftneg 0076                            ??___ftmul 002F  
                          ??___fttol 004A                            ??___lwdiv 0077  
                          ??___lwmod 0027                  _EUSART_Transmit_ISR 0CA7  
                   ?_TMR0_Initialize 0070                               _printf 05C6  
                             _strtod 0062                ___ftmul@f3_as_product 0034  
                          ??_isdigit 0073                        main@threshold 00E0  
                          ??_isspace 0073                      ?_WDT_Initialize 0070  
           ADC_GetConversion@channel 0076              __end_of_TMR2_StartTimer 0B55  
                          ??_toupper 0073                        _ADC_GetResult 0B7A  
               ?_EUSART_Transmit_ISR 0070                 __size_of_EUSART_Read 001C  
                  _SYSTEM_Initialize 0C5B              __end_of__initialization 005E  
                         ___altoft@c 0023                     ??_PI_SetSetpoint 0075  
                         ___ftadd@f1 0039                           ___ftadd@f2 003C  
                         ___ftge@ff1 0039                           ___ftge@ff2 003C  
                 ?_SYSTEM_Initialize 0070                           ___ftdiv@f1 0026  
                         ___ftdiv@f2 0023                           ___ftdiv@f3 002E  
                         ___ftneg@f1 0073                           ___awtoft@c 0023  
                ___bmul@multiplicand 0073                           ___ftmul@f1 0029  
                         ___ftmul@f2 002C                           ___fttol@f1 0046  
       __size_of_ADC_StartConversion 0003                       __pcstackCOMMON 0070  
                       __pidataBANK0 0B58                         __pidataBANK1 0B69  
                ??_SYSTEM_Initialize 0074                        __end_of_putch 0B64  
                          ?_PI_SetKi 0073                            ?_PI_SetKp 0073  
                   ?_TMR2_Initialize 0070                           __end_of_PI 03E6  
                   ?_TMR0_StartTimer 0070                       ?_ADC_GetResult 0073  
          __end_of_SYSTEM_Initialize 0C73                ??_EUSART_Transmit_ISR 0070  
                            ??_putch 0075                           __pbssBANK0 0066  
                         __pbssBANK1 00A0                 __end_of_EUSART_Write 0D3A  
                   ?_PWM5_Initialize 0070                  PI_SetSetpoint@value 0073  
        __size_of_EUSART_Receive_ISR 001B                           __pmaintext 07DB  
                            ?___bmul 0073                              ?___ftge 0039  
                            ?___lmul 0020                              ?___wmul 0073  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                          ?___altoft 0023                              _ADC_ISR 0BB0  
                         ??_PI_SetKi 0076                           ??_PI_SetKp 0076  
                     ___lmul@product 0073                              _PI$1265 0056  
                          ?___awtoft 0023                            ?___ftpack 0073  
                            ?_printf 0029                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_ADC_Initialize 000B                              ?_strtod 0042  
                      _eusartRxCount 0078                   _PWM5_LoadDutyValue 0C45  
                            _SP1BRGH 019C                              _SP1BRGL 019B  
                            _OSCCON1 0919                              _OSCCON3 091B  
                            _OSCTUNE 091E                              _PWM5DCH 0618  
                            _PWM5DCL 0617                              _PWM5CON 0619  
                            _PPSLOCK 0E0F                     ?_TMR2_StartTimer 0070  
            _TMR0_HasOverflowOccured 0B64                  ?_PWM5_LoadDutyValue 0073  
                          _ADC_Start 0BEA                      __size_of___bmul 0011  
                    __size_of___ftge 003C                      __size_of___lmul 0030  
                            ___ftadd 03E6                              ___ftdiv 0732  
                            ___ftneg 0B96                      __size_of___wmul 001E  
                            ___ftmul 067E                              ___fttol 0F79  
                            ___lwdiv 0DB9                              ___lwmod 0D5C  
               ??_PWM5_LoadDutyValue 0075                           ??___altoft 0027  
                         ??___awtoft 0026                           ??___ftpack 0020  
         __end_of_PI_GetSensorHeight 0B74                              __ptext1 0B64  
                            __ptext2 0C5B                              __ptext3 0B5B  
                            __ptext4 0BC6                              __ptext5 0B55  
                            __ptext6 0BD1                              __ptext7 0E67  
                            __ptext8 0B9E                              __ptext9 0CDF  
                    __size_of_printf 00B8                              _command 0069  
                    __size_of_strtod 0262                              _dpowers 1000  
              _OSCILLATOR_Initialize 0B9E                            _T2CONbits 001F  
                            _isdigit 0BF7             ??_PIN_MANAGER_Initialize 0073  
                            _isspace 0C33                      ??_ADC_GetResult 0075  
         __size_of_SYSTEM_Initialize 0018                              clrloop0 0B81  
                            _toupper 0C13                 end_of_initialization 005E  
                  _EUSART_Initialize 0CDF                           ?_ADC_Start 0075  
                 ?_EUSART_Initialize 0070                              printf@c 0036  
                            printf@f 0029                         __pstringtext 1000  
                ??_EUSART_Initialize 0073                     ??_WDT_Initialize 0073  
                            strtod@s 005E                           _printCycle 00CE  
              __size_of_EUSART_Write 0021                  _ADC_StartConversion 0B4F  
          ??_TMR0_HasOverflowOccured 0073                     __CFG_FEXTOSC$OFF 0000  
                          _RXPPSbits 0E24            __end_of_EUSART_Initialize 0CFB  
                        ___ftdiv@exp 0031                          ___ftmul@exp 0033  
               ?_ADC_StartConversion 0070                           _strtod$892 0055  
                         _strtod$893 0049                           _strtod$894 004C  
                         _strtod$895 004F                           _strtod$896 0052  
                     __end_of___bmul 0C33                       __end_of___ftge 0E2A  
                     __end_of___lmul 0DB9                       __end_of___wmul 0D19  
                       _EUSART_Write 0D19                       _ADC_Initialize 0BBB  
             ?_OSCILLATOR_Initialize 0070                    __size_of_PI_SetKi 0008  
                  __size_of_PI_SetKp 0008                       __end_of_printf 067E  
                     __end_of_strtod 02C4                  start_initialization 0032  
           __size_of_TMR0_Initialize 000B      __size_of_PIN_MANAGER_Initialize 0040  
                      ??_EUSART_Read 0073                          putch@txData 0075  
                        ??_ADC_Start 0077                ??_ADC_StartConversion 0073  
                   __CFG_LPBOREN$OFF 0000                             ??___bmul 0074  
                           ??___ftge 003F                             ??___lmul 0073  
                           ??___wmul 0077               __end_of_ADC_Initialize 0BC6  
                        __pdataBANK0 006C                          __pdataBANK1 00D9  
                           ?_ADC_ISR 0070                             ??_printf 002D  
                           ??_strtod 0045                    __size_of___altoft 003D  
                  __size_of___awtoft 0022                    __size_of___ftpack 0067  
        __end_of_EUSART_Transmit_ISR 0CC3          PWM5_LoadDutyValue@dutyValue 0073  
                        __pbssCOMMON 0078                            ___latbits 0002  
                      __pcstackBANK0 0020                        __pcstackBANK1 00DE  
           __size_of_TMR2_Initialize 000A           __end_of_EUSART_Receive_ISR 0CA7  
         __size_of_EUSART_Initialize 001C                  __end_of_EUSART_Read 0CDF  
              _TMR0_InterruptHandler 00C4                            __pnvBANK1 00E2  
           __size_of_TMR0_StartTimer 0003                     ___lwdiv@dividend 0075  
             _PIN_MANAGER_Initialize 0E67             __size_of_PWM5_Initialize 000C  
               EUSART_Read@readValue 0074                    _ADC_SelectChannel 0BDD  
                           ?___ftadd 0039                             ?___ftdiv 0023  
                           ?___ftneg 0073                             ?___ftmul 0029  
                           ?___fttol 0046                             ?___lwdiv 0073  
                           ?___lwmod 0023                      ?_ADC_Initialize 0070  
                       _eusartRxHead 006A              __size_of_PI_SetSetpoint 0006  
                 ?_ADC_SelectChannel 0070                         _eusartTxHead 0079  
                       _eusartRxTail 006B                         _eusartTxTail 007A  
                   UART@sensorHeight 00BE         ??_INTERRUPT_InterruptManager 0072  
            _eusartTxBufferRemaining 00E2                             _BAUD1CON 019F  
                           ?_isdigit 0070                  ??_ADC_SelectChannel 0073  
                           ?_isspace 0070                     ___lwdiv@quotient 0021  
                           ?_toupper 0070                   _PI_GetSensorHeight 0B6E  
                     __size_of_putch 0005                          __size_of_PI 0122  
                     _eusartRxBuffer 00A8                            _dutycycle 00C8  
                  ??_TMR0_Initialize 0073                       _eusartTxBuffer 00B0  
                     ___wmul@product 0020                            clear_ram0 0B80  
                           _PIE1bits 0091                  ?_PI_GetSensorHeight 0073  
           __size_of_TMR2_StartTimer 0003            __end_of_ADC_SelectChannel 0BEA  
__size_of_INTERRUPT_InterruptManager 002C                             _PIR0bits 0010  
                           _PIR1bits 0011                          strtod@flags 0058  
                        strtod@expon 0059          __size_of_PWM5_LoadDutyValue 0016  
                           _PI_SetKi 0B86                             _PI_SetKp 0B8E  
                   __size_of_ADC_ISR 000B                           _ADCON0bits 009D  
                  ___wmul@multiplier 0073             ADC_SelectChannel@channel 0074  
               ??_PI_GetSensorHeight 0075                           printf@flag 0032  
                         printf@prec 0033                          _EUSART_Read 0CC3  
              __end_of_ADC_GetResult 0B80                    ___lmul@multiplier 0020  
                  ??_TMR2_Initialize 0073                         UART@setpoint 00C0  
                  _ADC_GetConversion 0C73                           _ADC_result 00C2  
            ??_OSCILLATOR_Initialize 0073                   ?_ADC_GetConversion 0073  
                  ??_TMR0_StartTimer 0073                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftneg 0008  
                           ___altoft 0E2A                     __size_of___ftmul 00B4  
                   __size_of___fttol 0087                     __size_of___lwdiv 0035  
                   __size_of___lwmod 002D                             ___awtoft 0D3A  
                           ___ftpack 0EA7                    ??_PWM5_Initialize 0073  
                        _isdigit$968 0073                  ??_ADC_GetConversion 0075  
                         _T0CON0bits 0017                     __size_of_isdigit 000E  
                    ___lwdiv@divisor 0073                     __size_of_isspace 0012  
                    ___lwdiv@counter 0020                             __ptext10 0BBB  
                           __ptext11 02C4                             __ptext20 0B5F  
                           __ptext12 0F79                             __ptext21 0D19  
                           __ptext13 03E6                             __ptext30 0D89  
                           __ptext22 0D5C                             __ptext14 0D3A  
                           __ptext31 0B96                             __ptext23 0DB9  
                           __ptext15 0C45                             __ptext40 0B86  
                           __ptext32 067E                             __ptext24 0F0E  
                           __ptext16 0B7A                             __ptext41 0B6E  
                           __ptext33 0DEE                             __ptext25 0CFB  
                           __ptext17 04DC                             __ptext50 0CA7  
                           __ptext42 0CC3                             __ptext34 0732  
                           __ptext26 0C05                             __ptext18 0C13  
                           __ptext51 0C8C                             __ptext43 0BEA  
                           __ptext35 0C22                             __ptext27 0062  
                           __ptext19 05C6                             __ptext52 0BB0  
                           __ptext44 0BA6                             __ptext36 0E2A  
                           __ptext28 0C33                             __ptext45 0B52  
                           __ptext37 0EA7                             __ptext29 0BF7  
                           __ptext46 0B4F                             __ptext38 0B74  
                           __ptext47 0BDD                             __ptext39 0B8E  
                           __ptext48 0C73                     __size_of_toupper 000F  
                      __size_of_Java 00EA                        __size_of_atof 000E  
                      __size_of_atoi 006B                        __size_of_main 0025  
                           _integral 0066            __end_of_ADC_GetConversion 0C8C  
         __size_of_ADC_SelectChannel 000D                           _RC1PPSbits 0EA1  
                         _RC1STAbits 019D                           strtod@eexp 0057  
                           _setpoint 00DC                             int$flags 007E  
                         _RB7PPSbits 0E9F                             atoi@sign 0026  
                     _PI_SetSetpoint 0B74                    ??_TMR2_StartTimer 0073  
 __end_of_INTERRUPT_InterruptManager 0030           _INTERRUPT_InterruptManager 0004  
                          printf@val 0034                          _isspace$971 0073  
        PIN_MANAGER_Initialize@state 0073             ?_TMR0_HasOverflowOccured 0070  
                         _INTCONbits 000B                         _sensorHeight 00D0  
                           isdigit@c 0074              __size_of_WDT_Initialize 0004  
                           intlevel1 0000          __end_of_ADC_StartConversion 0B52  
                   ___lwmod@dividend 0025                             isspace@c 0074  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E0F                     ??_ADC_Initialize 0073  
             __end_of_PI_SetSetpoint 0B7A                            strtod@res 0042  
                           printf@ap 0031                   _EUSART_Receive_ISR 0C8C  
                ?_EUSART_Receive_ISR 0070                      ___lwmod@divisor 0023  
                    _TMR0_Initialize 0BC6                      ___lwmod@counter 0028  
                           toupper@c 0074                             strtod@_u 005A  
                 EUSART_Write@txData 0074         __size_of_EUSART_Transmit_ISR 001C  
     __end_of_PIN_MANAGER_Initialize 0EA7                          _PWMTMRSbits 061F  
               ??_EUSART_Receive_ISR 0070                _TMR2_InterruptHandler 00C6  
         __size_of_ADC_GetConversion 0019  

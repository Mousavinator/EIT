

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 10 17:02:09 2021

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2
    31                           	psect	text9,local,class=CODE,merge=1,delta=2
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text38,local,class=CODE,merge=1,delta=2
    61                           	psect	text39,local,class=CODE,merge=1,delta=2
    62                           	psect	text40,local,class=CODE,merge=1,delta=2
    63                           	psect	text41,local,class=CODE,merge=1,delta=2
    64                           	psect	text42,local,class=CODE,merge=1,delta=2
    65                           	psect	text43,local,class=CODE,merge=1,delta=2
    66                           	psect	text44,local,class=CODE,merge=1,delta=2
    67                           	psect	text45,local,class=CODE,merge=1,delta=2
    68                           	psect	text46,local,class=CODE,merge=1,delta=2
    69                           	psect	text47,local,class=CODE,merge=1,delta=2
    70                           	psect	text48,local,class=CODE,merge=1,delta=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text50,local,class=CODE,merge=1,delta=2
    73                           	psect	text51,local,class=CODE,merge=1,delta=2
    74                           	psect	text52,local,class=CODE,merge=1,delta=2
    75                           	dabs	1,0x7E,2
    76  0000                     
    77                           ; Version 1.45
    78                           ; Generated 16/11/2017 GMT
    79                           ; 
    80                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC16F18345 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0090                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0097                     	;# 
   154  009B                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0113                     	;# 
   166  0114                     	;# 
   167  0115                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0118                     	;# 
   171  0119                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  018E                     	;# 
   175  0197                     	;# 
   176  0199                     	;# 
   177  0199                     	;# 
   178  0199                     	;# 
   179  019A                     	;# 
   180  019A                     	;# 
   181  019A                     	;# 
   182  019B                     	;# 
   183  019B                     	;# 
   184  019B                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019C                     	;# 
   188  019C                     	;# 
   189  019C                     	;# 
   190  019D                     	;# 
   191  019D                     	;# 
   192  019D                     	;# 
   193  019E                     	;# 
   194  019E                     	;# 
   195  019E                     	;# 
   196  019F                     	;# 
   197  019F                     	;# 
   198  019F                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  020C                     	;# 
   202  020D                     	;# 
   203  020E                     	;# 
   204  0211                     	;# 
   205  0211                     	;# 
   206  0212                     	;# 
   207  0212                     	;# 
   208  0213                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0214                     	;# 
   212  0215                     	;# 
   213  0215                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0216                     	;# 
   217  0216                     	;# 
   218  0217                     	;# 
   219  0217                     	;# 
   220  0219                     	;# 
   221  021A                     	;# 
   222  021B                     	;# 
   223  021C                     	;# 
   224  021D                     	;# 
   225  021D                     	;# 
   226  021E                     	;# 
   227  021F                     	;# 
   228  028C                     	;# 
   229  028D                     	;# 
   230  028E                     	;# 
   231  0291                     	;# 
   232  0291                     	;# 
   233  0292                     	;# 
   234  0293                     	;# 
   235  0294                     	;# 
   236  0295                     	;# 
   237  0295                     	;# 
   238  0296                     	;# 
   239  0297                     	;# 
   240  0298                     	;# 
   241  029F                     	;# 
   242  030C                     	;# 
   243  030D                     	;# 
   244  030E                     	;# 
   245  0311                     	;# 
   246  0311                     	;# 
   247  0312                     	;# 
   248  0313                     	;# 
   249  0314                     	;# 
   250  0315                     	;# 
   251  0315                     	;# 
   252  0316                     	;# 
   253  0317                     	;# 
   254  0318                     	;# 
   255  038C                     	;# 
   256  038D                     	;# 
   257  038E                     	;# 
   258  0391                     	;# 
   259  0392                     	;# 
   260  0393                     	;# 
   261  0394                     	;# 
   262  0395                     	;# 
   263  0396                     	;# 
   264  0397                     	;# 
   265  0398                     	;# 
   266  0399                     	;# 
   267  039A                     	;# 
   268  039C                     	;# 
   269  039D                     	;# 
   270  039E                     	;# 
   271  039F                     	;# 
   272  0411                     	;# 
   273  0411                     	;# 
   274  0412                     	;# 
   275  0413                     	;# 
   276  0414                     	;# 
   277  0415                     	;# 
   278  0416                     	;# 
   279  0417                     	;# 
   280  0418                     	;# 
   281  0418                     	;# 
   282  0419                     	;# 
   283  041A                     	;# 
   284  041B                     	;# 
   285  041C                     	;# 
   286  041D                     	;# 
   287  041E                     	;# 
   288  041F                     	;# 
   289  0498                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  049E                     	;# 
   298  049F                     	;# 
   299  0617                     	;# 
   300  0618                     	;# 
   301  0619                     	;# 
   302  0619                     	;# 
   303  061A                     	;# 
   304  061B                     	;# 
   305  061C                     	;# 
   306  061C                     	;# 
   307  061F                     	;# 
   308  0691                     	;# 
   309  0692                     	;# 
   310  0693                     	;# 
   311  0694                     	;# 
   312  0695                     	;# 
   313  0696                     	;# 
   314  0697                     	;# 
   315  0698                     	;# 
   316  0699                     	;# 
   317  0711                     	;# 
   318  0712                     	;# 
   319  0713                     	;# 
   320  0714                     	;# 
   321  0715                     	;# 
   322  0716                     	;# 
   323  0717                     	;# 
   324  0718                     	;# 
   325  0719                     	;# 
   326  0891                     	;# 
   327  0891                     	;# 
   328  0891                     	;# 
   329  0891                     	;# 
   330  0891                     	;# 
   331  0891                     	;# 
   332  0892                     	;# 
   333  0892                     	;# 
   334  0892                     	;# 
   335  0893                     	;# 
   336  0893                     	;# 
   337  0893                     	;# 
   338  0893                     	;# 
   339  0893                     	;# 
   340  0893                     	;# 
   341  0894                     	;# 
   342  0894                     	;# 
   343  0894                     	;# 
   344  0895                     	;# 
   345  0895                     	;# 
   346  0895                     	;# 
   347  0896                     	;# 
   348  0896                     	;# 
   349  0896                     	;# 
   350  089B                     	;# 
   351  0911                     	;# 
   352  0912                     	;# 
   353  0913                     	;# 
   354  0914                     	;# 
   355  0915                     	;# 
   356  0916                     	;# 
   357  0918                     	;# 
   358  0919                     	;# 
   359  091A                     	;# 
   360  091B                     	;# 
   361  091C                     	;# 
   362  091D                     	;# 
   363  091E                     	;# 
   364  091F                     	;# 
   365  0E0F                     	;# 
   366  0E10                     	;# 
   367  0E11                     	;# 
   368  0E12                     	;# 
   369  0E13                     	;# 
   370  0E14                     	;# 
   371  0E15                     	;# 
   372  0E16                     	;# 
   373  0E17                     	;# 
   374  0E18                     	;# 
   375  0E19                     	;# 
   376  0E1A                     	;# 
   377  0E1B                     	;# 
   378  0E1C                     	;# 
   379  0E1D                     	;# 
   380  0E1E                     	;# 
   381  0E1F                     	;# 
   382  0E20                     	;# 
   383  0E21                     	;# 
   384  0E22                     	;# 
   385  0E24                     	;# 
   386  0E25                     	;# 
   387  0E28                     	;# 
   388  0E29                     	;# 
   389  0E2A                     	;# 
   390  0E2B                     	;# 
   391  0E2C                     	;# 
   392  0E2D                     	;# 
   393  0E2E                     	;# 
   394  0E2F                     	;# 
   395  0E90                     	;# 
   396  0E91                     	;# 
   397  0E92                     	;# 
   398  0E94                     	;# 
   399  0E95                     	;# 
   400  0E9C                     	;# 
   401  0E9D                     	;# 
   402  0E9E                     	;# 
   403  0E9F                     	;# 
   404  0EA0                     	;# 
   405  0EA1                     	;# 
   406  0EA2                     	;# 
   407  0EA3                     	;# 
   408  0EA4                     	;# 
   409  0EA5                     	;# 
   410  0EA6                     	;# 
   411  0EA7                     	;# 
   412  0F0F                     	;# 
   413  0F10                     	;# 
   414  0F11                     	;# 
   415  0F12                     	;# 
   416  0F13                     	;# 
   417  0F14                     	;# 
   418  0F15                     	;# 
   419  0F16                     	;# 
   420  0F17                     	;# 
   421  0F18                     	;# 
   422  0F19                     	;# 
   423  0F1A                     	;# 
   424  0F1B                     	;# 
   425  0F1C                     	;# 
   426  0F1D                     	;# 
   427  0F1E                     	;# 
   428  0F1F                     	;# 
   429  0F20                     	;# 
   430  0F21                     	;# 
   431  0F22                     	;# 
   432  0F23                     	;# 
   433  0F24                     	;# 
   434  0F25                     	;# 
   435  0F26                     	;# 
   436  0F27                     	;# 
   437  0F28                     	;# 
   438  0F29                     	;# 
   439  0F2A                     	;# 
   440  0F2B                     	;# 
   441  0F2C                     	;# 
   442  0F2D                     	;# 
   443  0F2E                     	;# 
   444  0F2F                     	;# 
   445  0F30                     	;# 
   446  0F31                     	;# 
   447  0F32                     	;# 
   448  0F33                     	;# 
   449  0F34                     	;# 
   450  0F35                     	;# 
   451  0F36                     	;# 
   452  0F37                     	;# 
   453  0FE4                     	;# 
   454  0FE5                     	;# 
   455  0FE6                     	;# 
   456  0FE7                     	;# 
   457  0FE8                     	;# 
   458  0FE9                     	;# 
   459  0FEA                     	;# 
   460  0FEB                     	;# 
   461  0FED                     	;# 
   462  0FEE                     	;# 
   463  0FEF                     	;# 
   464  0000                     	;# 
   465  0001                     	;# 
   466  0002                     	;# 
   467  0003                     	;# 
   468  0004                     	;# 
   469  0005                     	;# 
   470  0006                     	;# 
   471  0007                     	;# 
   472  0008                     	;# 
   473  0009                     	;# 
   474  000A                     	;# 
   475  000B                     	;# 
   476  000C                     	;# 
   477  000D                     	;# 
   478  000E                     	;# 
   479  0010                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0014                     	;# 
   484  0015                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0016                     	;# 
   488  0017                     	;# 
   489  0018                     	;# 
   490  0019                     	;# 
   491  0019                     	;# 
   492  001A                     	;# 
   493  001B                     	;# 
   494  001C                     	;# 
   495  001D                     	;# 
   496  001E                     	;# 
   497  001F                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0094                     	;# 
   506  0097                     	;# 
   507  009B                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  009F                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  0111                     	;# 
   517  0112                     	;# 
   518  0113                     	;# 
   519  0114                     	;# 
   520  0115                     	;# 
   521  0116                     	;# 
   522  0117                     	;# 
   523  0118                     	;# 
   524  0119                     	;# 
   525  018C                     	;# 
   526  018D                     	;# 
   527  018E                     	;# 
   528  0197                     	;# 
   529  0199                     	;# 
   530  0199                     	;# 
   531  0199                     	;# 
   532  019A                     	;# 
   533  019A                     	;# 
   534  019A                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019B                     	;# 
   540  019C                     	;# 
   541  019C                     	;# 
   542  019C                     	;# 
   543  019D                     	;# 
   544  019D                     	;# 
   545  019D                     	;# 
   546  019E                     	;# 
   547  019E                     	;# 
   548  019E                     	;# 
   549  019F                     	;# 
   550  019F                     	;# 
   551  019F                     	;# 
   552  019F                     	;# 
   553  019F                     	;# 
   554  020C                     	;# 
   555  020D                     	;# 
   556  020E                     	;# 
   557  0211                     	;# 
   558  0211                     	;# 
   559  0212                     	;# 
   560  0212                     	;# 
   561  0213                     	;# 
   562  0213                     	;# 
   563  0214                     	;# 
   564  0214                     	;# 
   565  0215                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0216                     	;# 
   570  0216                     	;# 
   571  0217                     	;# 
   572  0217                     	;# 
   573  0219                     	;# 
   574  021A                     	;# 
   575  021B                     	;# 
   576  021C                     	;# 
   577  021D                     	;# 
   578  021D                     	;# 
   579  021E                     	;# 
   580  021F                     	;# 
   581  028C                     	;# 
   582  028D                     	;# 
   583  028E                     	;# 
   584  0291                     	;# 
   585  0291                     	;# 
   586  0292                     	;# 
   587  0293                     	;# 
   588  0294                     	;# 
   589  0295                     	;# 
   590  0295                     	;# 
   591  0296                     	;# 
   592  0297                     	;# 
   593  0298                     	;# 
   594  029F                     	;# 
   595  030C                     	;# 
   596  030D                     	;# 
   597  030E                     	;# 
   598  0311                     	;# 
   599  0311                     	;# 
   600  0312                     	;# 
   601  0313                     	;# 
   602  0314                     	;# 
   603  0315                     	;# 
   604  0315                     	;# 
   605  0316                     	;# 
   606  0317                     	;# 
   607  0318                     	;# 
   608  038C                     	;# 
   609  038D                     	;# 
   610  038E                     	;# 
   611  0391                     	;# 
   612  0392                     	;# 
   613  0393                     	;# 
   614  0394                     	;# 
   615  0395                     	;# 
   616  0396                     	;# 
   617  0397                     	;# 
   618  0398                     	;# 
   619  0399                     	;# 
   620  039A                     	;# 
   621  039C                     	;# 
   622  039D                     	;# 
   623  039E                     	;# 
   624  039F                     	;# 
   625  0411                     	;# 
   626  0411                     	;# 
   627  0412                     	;# 
   628  0413                     	;# 
   629  0414                     	;# 
   630  0415                     	;# 
   631  0416                     	;# 
   632  0417                     	;# 
   633  0418                     	;# 
   634  0418                     	;# 
   635  0419                     	;# 
   636  041A                     	;# 
   637  041B                     	;# 
   638  041C                     	;# 
   639  041D                     	;# 
   640  041E                     	;# 
   641  041F                     	;# 
   642  0498                     	;# 
   643  0498                     	;# 
   644  0499                     	;# 
   645  049A                     	;# 
   646  049B                     	;# 
   647  049B                     	;# 
   648  049C                     	;# 
   649  049D                     	;# 
   650  049E                     	;# 
   651  049F                     	;# 
   652  0617                     	;# 
   653  0618                     	;# 
   654  0619                     	;# 
   655  0619                     	;# 
   656  061A                     	;# 
   657  061B                     	;# 
   658  061C                     	;# 
   659  061C                     	;# 
   660  061F                     	;# 
   661  0691                     	;# 
   662  0692                     	;# 
   663  0693                     	;# 
   664  0694                     	;# 
   665  0695                     	;# 
   666  0696                     	;# 
   667  0697                     	;# 
   668  0698                     	;# 
   669  0699                     	;# 
   670  0711                     	;# 
   671  0712                     	;# 
   672  0713                     	;# 
   673  0714                     	;# 
   674  0715                     	;# 
   675  0716                     	;# 
   676  0717                     	;# 
   677  0718                     	;# 
   678  0719                     	;# 
   679  0891                     	;# 
   680  0891                     	;# 
   681  0891                     	;# 
   682  0891                     	;# 
   683  0891                     	;# 
   684  0891                     	;# 
   685  0892                     	;# 
   686  0892                     	;# 
   687  0892                     	;# 
   688  0893                     	;# 
   689  0893                     	;# 
   690  0893                     	;# 
   691  0893                     	;# 
   692  0893                     	;# 
   693  0893                     	;# 
   694  0894                     	;# 
   695  0894                     	;# 
   696  0894                     	;# 
   697  0895                     	;# 
   698  0895                     	;# 
   699  0895                     	;# 
   700  0896                     	;# 
   701  0896                     	;# 
   702  0896                     	;# 
   703  089B                     	;# 
   704  0911                     	;# 
   705  0912                     	;# 
   706  0913                     	;# 
   707  0914                     	;# 
   708  0915                     	;# 
   709  0916                     	;# 
   710  0918                     	;# 
   711  0919                     	;# 
   712  091A                     	;# 
   713  091B                     	;# 
   714  091C                     	;# 
   715  091D                     	;# 
   716  091E                     	;# 
   717  091F                     	;# 
   718  0E0F                     	;# 
   719  0E10                     	;# 
   720  0E11                     	;# 
   721  0E12                     	;# 
   722  0E13                     	;# 
   723  0E14                     	;# 
   724  0E15                     	;# 
   725  0E16                     	;# 
   726  0E17                     	;# 
   727  0E18                     	;# 
   728  0E19                     	;# 
   729  0E1A                     	;# 
   730  0E1B                     	;# 
   731  0E1C                     	;# 
   732  0E1D                     	;# 
   733  0E1E                     	;# 
   734  0E1F                     	;# 
   735  0E20                     	;# 
   736  0E21                     	;# 
   737  0E22                     	;# 
   738  0E24                     	;# 
   739  0E25                     	;# 
   740  0E28                     	;# 
   741  0E29                     	;# 
   742  0E2A                     	;# 
   743  0E2B                     	;# 
   744  0E2C                     	;# 
   745  0E2D                     	;# 
   746  0E2E                     	;# 
   747  0E2F                     	;# 
   748  0E90                     	;# 
   749  0E91                     	;# 
   750  0E92                     	;# 
   751  0E94                     	;# 
   752  0E95                     	;# 
   753  0E9C                     	;# 
   754  0E9D                     	;# 
   755  0E9E                     	;# 
   756  0E9F                     	;# 
   757  0EA0                     	;# 
   758  0EA1                     	;# 
   759  0EA2                     	;# 
   760  0EA3                     	;# 
   761  0EA4                     	;# 
   762  0EA5                     	;# 
   763  0EA6                     	;# 
   764  0EA7                     	;# 
   765  0F0F                     	;# 
   766  0F10                     	;# 
   767  0F11                     	;# 
   768  0F12                     	;# 
   769  0F13                     	;# 
   770  0F14                     	;# 
   771  0F15                     	;# 
   772  0F16                     	;# 
   773  0F17                     	;# 
   774  0F18                     	;# 
   775  0F19                     	;# 
   776  0F1A                     	;# 
   777  0F1B                     	;# 
   778  0F1C                     	;# 
   779  0F1D                     	;# 
   780  0F1E                     	;# 
   781  0F1F                     	;# 
   782  0F20                     	;# 
   783  0F21                     	;# 
   784  0F22                     	;# 
   785  0F23                     	;# 
   786  0F24                     	;# 
   787  0F25                     	;# 
   788  0F26                     	;# 
   789  0F27                     	;# 
   790  0F28                     	;# 
   791  0F29                     	;# 
   792  0F2A                     	;# 
   793  0F2B                     	;# 
   794  0F2C                     	;# 
   795  0F2D                     	;# 
   796  0F2E                     	;# 
   797  0F2F                     	;# 
   798  0F30                     	;# 
   799  0F31                     	;# 
   800  0F32                     	;# 
   801  0F33                     	;# 
   802  0F34                     	;# 
   803  0F35                     	;# 
   804  0F36                     	;# 
   805  0F37                     	;# 
   806  0FE4                     	;# 
   807  0FE5                     	;# 
   808  0FE6                     	;# 
   809  0FE7                     	;# 
   810  0FE8                     	;# 
   811  0FE9                     	;# 
   812  0FEA                     	;# 
   813  0FEB                     	;# 
   814  0FED                     	;# 
   815  0FEE                     	;# 
   816  0FEF                     	;# 
   817  0000                     	;# 
   818  0001                     	;# 
   819  0002                     	;# 
   820  0003                     	;# 
   821  0004                     	;# 
   822  0005                     	;# 
   823  0006                     	;# 
   824  0007                     	;# 
   825  0008                     	;# 
   826  0009                     	;# 
   827  000A                     	;# 
   828  000B                     	;# 
   829  000C                     	;# 
   830  000D                     	;# 
   831  000E                     	;# 
   832  0010                     	;# 
   833  0011                     	;# 
   834  0012                     	;# 
   835  0013                     	;# 
   836  0014                     	;# 
   837  0015                     	;# 
   838  0015                     	;# 
   839  0016                     	;# 
   840  0016                     	;# 
   841  0017                     	;# 
   842  0018                     	;# 
   843  0019                     	;# 
   844  0019                     	;# 
   845  001A                     	;# 
   846  001B                     	;# 
   847  001C                     	;# 
   848  001D                     	;# 
   849  001E                     	;# 
   850  001F                     	;# 
   851  008C                     	;# 
   852  008D                     	;# 
   853  008E                     	;# 
   854  0090                     	;# 
   855  0091                     	;# 
   856  0092                     	;# 
   857  0093                     	;# 
   858  0094                     	;# 
   859  0097                     	;# 
   860  009B                     	;# 
   861  009B                     	;# 
   862  009C                     	;# 
   863  009D                     	;# 
   864  009E                     	;# 
   865  009F                     	;# 
   866  010C                     	;# 
   867  010D                     	;# 
   868  010E                     	;# 
   869  0111                     	;# 
   870  0112                     	;# 
   871  0113                     	;# 
   872  0114                     	;# 
   873  0115                     	;# 
   874  0116                     	;# 
   875  0117                     	;# 
   876  0118                     	;# 
   877  0119                     	;# 
   878  018C                     	;# 
   879  018D                     	;# 
   880  018E                     	;# 
   881  0197                     	;# 
   882  0199                     	;# 
   883  0199                     	;# 
   884  0199                     	;# 
   885  019A                     	;# 
   886  019A                     	;# 
   887  019A                     	;# 
   888  019B                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019C                     	;# 
   894  019C                     	;# 
   895  019C                     	;# 
   896  019D                     	;# 
   897  019D                     	;# 
   898  019D                     	;# 
   899  019E                     	;# 
   900  019E                     	;# 
   901  019E                     	;# 
   902  019F                     	;# 
   903  019F                     	;# 
   904  019F                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  020C                     	;# 
   908  020D                     	;# 
   909  020E                     	;# 
   910  0211                     	;# 
   911  0211                     	;# 
   912  0212                     	;# 
   913  0212                     	;# 
   914  0213                     	;# 
   915  0213                     	;# 
   916  0214                     	;# 
   917  0214                     	;# 
   918  0215                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0216                     	;# 
   923  0216                     	;# 
   924  0217                     	;# 
   925  0217                     	;# 
   926  0219                     	;# 
   927  021A                     	;# 
   928  021B                     	;# 
   929  021C                     	;# 
   930  021D                     	;# 
   931  021D                     	;# 
   932  021E                     	;# 
   933  021F                     	;# 
   934  028C                     	;# 
   935  028D                     	;# 
   936  028E                     	;# 
   937  0291                     	;# 
   938  0291                     	;# 
   939  0292                     	;# 
   940  0293                     	;# 
   941  0294                     	;# 
   942  0295                     	;# 
   943  0295                     	;# 
   944  0296                     	;# 
   945  0297                     	;# 
   946  0298                     	;# 
   947  029F                     	;# 
   948  030C                     	;# 
   949  030D                     	;# 
   950  030E                     	;# 
   951  0311                     	;# 
   952  0311                     	;# 
   953  0312                     	;# 
   954  0313                     	;# 
   955  0314                     	;# 
   956  0315                     	;# 
   957  0315                     	;# 
   958  0316                     	;# 
   959  0317                     	;# 
   960  0318                     	;# 
   961  038C                     	;# 
   962  038D                     	;# 
   963  038E                     	;# 
   964  0391                     	;# 
   965  0392                     	;# 
   966  0393                     	;# 
   967  0394                     	;# 
   968  0395                     	;# 
   969  0396                     	;# 
   970  0397                     	;# 
   971  0398                     	;# 
   972  0399                     	;# 
   973  039A                     	;# 
   974  039C                     	;# 
   975  039D                     	;# 
   976  039E                     	;# 
   977  039F                     	;# 
   978  0411                     	;# 
   979  0411                     	;# 
   980  0412                     	;# 
   981  0413                     	;# 
   982  0414                     	;# 
   983  0415                     	;# 
   984  0416                     	;# 
   985  0417                     	;# 
   986  0418                     	;# 
   987  0418                     	;# 
   988  0419                     	;# 
   989  041A                     	;# 
   990  041B                     	;# 
   991  041C                     	;# 
   992  041D                     	;# 
   993  041E                     	;# 
   994  041F                     	;# 
   995  0498                     	;# 
   996  0498                     	;# 
   997  0499                     	;# 
   998  049A                     	;# 
   999  049B                     	;# 
  1000  049B                     	;# 
  1001  049C                     	;# 
  1002  049D                     	;# 
  1003  049E                     	;# 
  1004  049F                     	;# 
  1005  0617                     	;# 
  1006  0618                     	;# 
  1007  0619                     	;# 
  1008  0619                     	;# 
  1009  061A                     	;# 
  1010  061B                     	;# 
  1011  061C                     	;# 
  1012  061C                     	;# 
  1013  061F                     	;# 
  1014  0691                     	;# 
  1015  0692                     	;# 
  1016  0693                     	;# 
  1017  0694                     	;# 
  1018  0695                     	;# 
  1019  0696                     	;# 
  1020  0697                     	;# 
  1021  0698                     	;# 
  1022  0699                     	;# 
  1023  0711                     	;# 
  1024  0712                     	;# 
  1025  0713                     	;# 
  1026  0714                     	;# 
  1027  0715                     	;# 
  1028  0716                     	;# 
  1029  0717                     	;# 
  1030  0718                     	;# 
  1031  0719                     	;# 
  1032  0891                     	;# 
  1033  0891                     	;# 
  1034  0891                     	;# 
  1035  0891                     	;# 
  1036  0891                     	;# 
  1037  0891                     	;# 
  1038  0892                     	;# 
  1039  0892                     	;# 
  1040  0892                     	;# 
  1041  0893                     	;# 
  1042  0893                     	;# 
  1043  0893                     	;# 
  1044  0893                     	;# 
  1045  0893                     	;# 
  1046  0893                     	;# 
  1047  0894                     	;# 
  1048  0894                     	;# 
  1049  0894                     	;# 
  1050  0895                     	;# 
  1051  0895                     	;# 
  1052  0895                     	;# 
  1053  0896                     	;# 
  1054  0896                     	;# 
  1055  0896                     	;# 
  1056  089B                     	;# 
  1057  0911                     	;# 
  1058  0912                     	;# 
  1059  0913                     	;# 
  1060  0914                     	;# 
  1061  0915                     	;# 
  1062  0916                     	;# 
  1063  0918                     	;# 
  1064  0919                     	;# 
  1065  091A                     	;# 
  1066  091B                     	;# 
  1067  091C                     	;# 
  1068  091D                     	;# 
  1069  091E                     	;# 
  1070  091F                     	;# 
  1071  0E0F                     	;# 
  1072  0E10                     	;# 
  1073  0E11                     	;# 
  1074  0E12                     	;# 
  1075  0E13                     	;# 
  1076  0E14                     	;# 
  1077  0E15                     	;# 
  1078  0E16                     	;# 
  1079  0E17                     	;# 
  1080  0E18                     	;# 
  1081  0E19                     	;# 
  1082  0E1A                     	;# 
  1083  0E1B                     	;# 
  1084  0E1C                     	;# 
  1085  0E1D                     	;# 
  1086  0E1E                     	;# 
  1087  0E1F                     	;# 
  1088  0E20                     	;# 
  1089  0E21                     	;# 
  1090  0E22                     	;# 
  1091  0E24                     	;# 
  1092  0E25                     	;# 
  1093  0E28                     	;# 
  1094  0E29                     	;# 
  1095  0E2A                     	;# 
  1096  0E2B                     	;# 
  1097  0E2C                     	;# 
  1098  0E2D                     	;# 
  1099  0E2E                     	;# 
  1100  0E2F                     	;# 
  1101  0E90                     	;# 
  1102  0E91                     	;# 
  1103  0E92                     	;# 
  1104  0E94                     	;# 
  1105  0E95                     	;# 
  1106  0E9C                     	;# 
  1107  0E9D                     	;# 
  1108  0E9E                     	;# 
  1109  0E9F                     	;# 
  1110  0EA0                     	;# 
  1111  0EA1                     	;# 
  1112  0EA2                     	;# 
  1113  0EA3                     	;# 
  1114  0EA4                     	;# 
  1115  0EA5                     	;# 
  1116  0EA6                     	;# 
  1117  0EA7                     	;# 
  1118  0F0F                     	;# 
  1119  0F10                     	;# 
  1120  0F11                     	;# 
  1121  0F12                     	;# 
  1122  0F13                     	;# 
  1123  0F14                     	;# 
  1124  0F15                     	;# 
  1125  0F16                     	;# 
  1126  0F17                     	;# 
  1127  0F18                     	;# 
  1128  0F19                     	;# 
  1129  0F1A                     	;# 
  1130  0F1B                     	;# 
  1131  0F1C                     	;# 
  1132  0F1D                     	;# 
  1133  0F1E                     	;# 
  1134  0F1F                     	;# 
  1135  0F20                     	;# 
  1136  0F21                     	;# 
  1137  0F22                     	;# 
  1138  0F23                     	;# 
  1139  0F24                     	;# 
  1140  0F25                     	;# 
  1141  0F26                     	;# 
  1142  0F27                     	;# 
  1143  0F28                     	;# 
  1144  0F29                     	;# 
  1145  0F2A                     	;# 
  1146  0F2B                     	;# 
  1147  0F2C                     	;# 
  1148  0F2D                     	;# 
  1149  0F2E                     	;# 
  1150  0F2F                     	;# 
  1151  0F30                     	;# 
  1152  0F31                     	;# 
  1153  0F32                     	;# 
  1154  0F33                     	;# 
  1155  0F34                     	;# 
  1156  0F35                     	;# 
  1157  0F36                     	;# 
  1158  0F37                     	;# 
  1159  0FE4                     	;# 
  1160  0FE5                     	;# 
  1161  0FE6                     	;# 
  1162  0FE7                     	;# 
  1163  0FE8                     	;# 
  1164  0FE9                     	;# 
  1165  0FEA                     	;# 
  1166  0FEB                     	;# 
  1167  0FED                     	;# 
  1168  0FEE                     	;# 
  1169  0FEF                     	;# 
  1170  0000                     	;# 
  1171  0001                     	;# 
  1172  0002                     	;# 
  1173  0003                     	;# 
  1174  0004                     	;# 
  1175  0005                     	;# 
  1176  0006                     	;# 
  1177  0007                     	;# 
  1178  0008                     	;# 
  1179  0009                     	;# 
  1180  000A                     	;# 
  1181  000B                     	;# 
  1182  000C                     	;# 
  1183  000D                     	;# 
  1184  000E                     	;# 
  1185  0010                     	;# 
  1186  0011                     	;# 
  1187  0012                     	;# 
  1188  0013                     	;# 
  1189  0014                     	;# 
  1190  0015                     	;# 
  1191  0015                     	;# 
  1192  0016                     	;# 
  1193  0016                     	;# 
  1194  0017                     	;# 
  1195  0018                     	;# 
  1196  0019                     	;# 
  1197  0019                     	;# 
  1198  001A                     	;# 
  1199  001B                     	;# 
  1200  001C                     	;# 
  1201  001D                     	;# 
  1202  001E                     	;# 
  1203  001F                     	;# 
  1204  008C                     	;# 
  1205  008D                     	;# 
  1206  008E                     	;# 
  1207  0090                     	;# 
  1208  0091                     	;# 
  1209  0092                     	;# 
  1210  0093                     	;# 
  1211  0094                     	;# 
  1212  0097                     	;# 
  1213  009B                     	;# 
  1214  009B                     	;# 
  1215  009C                     	;# 
  1216  009D                     	;# 
  1217  009E                     	;# 
  1218  009F                     	;# 
  1219  010C                     	;# 
  1220  010D                     	;# 
  1221  010E                     	;# 
  1222  0111                     	;# 
  1223  0112                     	;# 
  1224  0113                     	;# 
  1225  0114                     	;# 
  1226  0115                     	;# 
  1227  0116                     	;# 
  1228  0117                     	;# 
  1229  0118                     	;# 
  1230  0119                     	;# 
  1231  018C                     	;# 
  1232  018D                     	;# 
  1233  018E                     	;# 
  1234  0197                     	;# 
  1235  0199                     	;# 
  1236  0199                     	;# 
  1237  0199                     	;# 
  1238  019A                     	;# 
  1239  019A                     	;# 
  1240  019A                     	;# 
  1241  019B                     	;# 
  1242  019B                     	;# 
  1243  019B                     	;# 
  1244  019B                     	;# 
  1245  019B                     	;# 
  1246  019C                     	;# 
  1247  019C                     	;# 
  1248  019C                     	;# 
  1249  019D                     	;# 
  1250  019D                     	;# 
  1251  019D                     	;# 
  1252  019E                     	;# 
  1253  019E                     	;# 
  1254  019E                     	;# 
  1255  019F                     	;# 
  1256  019F                     	;# 
  1257  019F                     	;# 
  1258  019F                     	;# 
  1259  019F                     	;# 
  1260  020C                     	;# 
  1261  020D                     	;# 
  1262  020E                     	;# 
  1263  0211                     	;# 
  1264  0211                     	;# 
  1265  0212                     	;# 
  1266  0212                     	;# 
  1267  0213                     	;# 
  1268  0213                     	;# 
  1269  0214                     	;# 
  1270  0214                     	;# 
  1271  0215                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0216                     	;# 
  1276  0216                     	;# 
  1277  0217                     	;# 
  1278  0217                     	;# 
  1279  0219                     	;# 
  1280  021A                     	;# 
  1281  021B                     	;# 
  1282  021C                     	;# 
  1283  021D                     	;# 
  1284  021D                     	;# 
  1285  021E                     	;# 
  1286  021F                     	;# 
  1287  028C                     	;# 
  1288  028D                     	;# 
  1289  028E                     	;# 
  1290  0291                     	;# 
  1291  0291                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0294                     	;# 
  1295  0295                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0297                     	;# 
  1299  0298                     	;# 
  1300  029F                     	;# 
  1301  030C                     	;# 
  1302  030D                     	;# 
  1303  030E                     	;# 
  1304  0311                     	;# 
  1305  0311                     	;# 
  1306  0312                     	;# 
  1307  0313                     	;# 
  1308  0314                     	;# 
  1309  0315                     	;# 
  1310  0315                     	;# 
  1311  0316                     	;# 
  1312  0317                     	;# 
  1313  0318                     	;# 
  1314  038C                     	;# 
  1315  038D                     	;# 
  1316  038E                     	;# 
  1317  0391                     	;# 
  1318  0392                     	;# 
  1319  0393                     	;# 
  1320  0394                     	;# 
  1321  0395                     	;# 
  1322  0396                     	;# 
  1323  0397                     	;# 
  1324  0398                     	;# 
  1325  0399                     	;# 
  1326  039A                     	;# 
  1327  039C                     	;# 
  1328  039D                     	;# 
  1329  039E                     	;# 
  1330  039F                     	;# 
  1331  0411                     	;# 
  1332  0411                     	;# 
  1333  0412                     	;# 
  1334  0413                     	;# 
  1335  0414                     	;# 
  1336  0415                     	;# 
  1337  0416                     	;# 
  1338  0417                     	;# 
  1339  0418                     	;# 
  1340  0418                     	;# 
  1341  0419                     	;# 
  1342  041A                     	;# 
  1343  041B                     	;# 
  1344  041C                     	;# 
  1345  041D                     	;# 
  1346  041E                     	;# 
  1347  041F                     	;# 
  1348  0498                     	;# 
  1349  0498                     	;# 
  1350  0499                     	;# 
  1351  049A                     	;# 
  1352  049B                     	;# 
  1353  049B                     	;# 
  1354  049C                     	;# 
  1355  049D                     	;# 
  1356  049E                     	;# 
  1357  049F                     	;# 
  1358  0617                     	;# 
  1359  0618                     	;# 
  1360  0619                     	;# 
  1361  0619                     	;# 
  1362  061A                     	;# 
  1363  061B                     	;# 
  1364  061C                     	;# 
  1365  061C                     	;# 
  1366  061F                     	;# 
  1367  0691                     	;# 
  1368  0692                     	;# 
  1369  0693                     	;# 
  1370  0694                     	;# 
  1371  0695                     	;# 
  1372  0696                     	;# 
  1373  0697                     	;# 
  1374  0698                     	;# 
  1375  0699                     	;# 
  1376  0711                     	;# 
  1377  0712                     	;# 
  1378  0713                     	;# 
  1379  0714                     	;# 
  1380  0715                     	;# 
  1381  0716                     	;# 
  1382  0717                     	;# 
  1383  0718                     	;# 
  1384  0719                     	;# 
  1385  0891                     	;# 
  1386  0891                     	;# 
  1387  0891                     	;# 
  1388  0891                     	;# 
  1389  0891                     	;# 
  1390  0891                     	;# 
  1391  0892                     	;# 
  1392  0892                     	;# 
  1393  0892                     	;# 
  1394  0893                     	;# 
  1395  0893                     	;# 
  1396  0893                     	;# 
  1397  0893                     	;# 
  1398  0893                     	;# 
  1399  0893                     	;# 
  1400  0894                     	;# 
  1401  0894                     	;# 
  1402  0894                     	;# 
  1403  0895                     	;# 
  1404  0895                     	;# 
  1405  0895                     	;# 
  1406  0896                     	;# 
  1407  0896                     	;# 
  1408  0896                     	;# 
  1409  089B                     	;# 
  1410  0911                     	;# 
  1411  0912                     	;# 
  1412  0913                     	;# 
  1413  0914                     	;# 
  1414  0915                     	;# 
  1415  0916                     	;# 
  1416  0918                     	;# 
  1417  0919                     	;# 
  1418  091A                     	;# 
  1419  091B                     	;# 
  1420  091C                     	;# 
  1421  091D                     	;# 
  1422  091E                     	;# 
  1423  091F                     	;# 
  1424  0E0F                     	;# 
  1425  0E10                     	;# 
  1426  0E11                     	;# 
  1427  0E12                     	;# 
  1428  0E13                     	;# 
  1429  0E14                     	;# 
  1430  0E15                     	;# 
  1431  0E16                     	;# 
  1432  0E17                     	;# 
  1433  0E18                     	;# 
  1434  0E19                     	;# 
  1435  0E1A                     	;# 
  1436  0E1B                     	;# 
  1437  0E1C                     	;# 
  1438  0E1D                     	;# 
  1439  0E1E                     	;# 
  1440  0E1F                     	;# 
  1441  0E20                     	;# 
  1442  0E21                     	;# 
  1443  0E22                     	;# 
  1444  0E24                     	;# 
  1445  0E25                     	;# 
  1446  0E28                     	;# 
  1447  0E29                     	;# 
  1448  0E2A                     	;# 
  1449  0E2B                     	;# 
  1450  0E2C                     	;# 
  1451  0E2D                     	;# 
  1452  0E2E                     	;# 
  1453  0E2F                     	;# 
  1454  0E90                     	;# 
  1455  0E91                     	;# 
  1456  0E92                     	;# 
  1457  0E94                     	;# 
  1458  0E95                     	;# 
  1459  0E9C                     	;# 
  1460  0E9D                     	;# 
  1461  0E9E                     	;# 
  1462  0E9F                     	;# 
  1463  0EA0                     	;# 
  1464  0EA1                     	;# 
  1465  0EA2                     	;# 
  1466  0EA3                     	;# 
  1467  0EA4                     	;# 
  1468  0EA5                     	;# 
  1469  0EA6                     	;# 
  1470  0EA7                     	;# 
  1471  0F0F                     	;# 
  1472  0F10                     	;# 
  1473  0F11                     	;# 
  1474  0F12                     	;# 
  1475  0F13                     	;# 
  1476  0F14                     	;# 
  1477  0F15                     	;# 
  1478  0F16                     	;# 
  1479  0F17                     	;# 
  1480  0F18                     	;# 
  1481  0F19                     	;# 
  1482  0F1A                     	;# 
  1483  0F1B                     	;# 
  1484  0F1C                     	;# 
  1485  0F1D                     	;# 
  1486  0F1E                     	;# 
  1487  0F1F                     	;# 
  1488  0F20                     	;# 
  1489  0F21                     	;# 
  1490  0F22                     	;# 
  1491  0F23                     	;# 
  1492  0F24                     	;# 
  1493  0F25                     	;# 
  1494  0F26                     	;# 
  1495  0F27                     	;# 
  1496  0F28                     	;# 
  1497  0F29                     	;# 
  1498  0F2A                     	;# 
  1499  0F2B                     	;# 
  1500  0F2C                     	;# 
  1501  0F2D                     	;# 
  1502  0F2E                     	;# 
  1503  0F2F                     	;# 
  1504  0F30                     	;# 
  1505  0F31                     	;# 
  1506  0F32                     	;# 
  1507  0F33                     	;# 
  1508  0F34                     	;# 
  1509  0F35                     	;# 
  1510  0F36                     	;# 
  1511  0F37                     	;# 
  1512  0FE4                     	;# 
  1513  0FE5                     	;# 
  1514  0FE6                     	;# 
  1515  0FE7                     	;# 
  1516  0FE8                     	;# 
  1517  0FE9                     	;# 
  1518  0FEA                     	;# 
  1519  0FEB                     	;# 
  1520  0FED                     	;# 
  1521  0FEE                     	;# 
  1522  0FEF                     	;# 
  1523  0000                     	;# 
  1524  0001                     	;# 
  1525  0002                     	;# 
  1526  0003                     	;# 
  1527  0004                     	;# 
  1528  0005                     	;# 
  1529  0006                     	;# 
  1530  0007                     	;# 
  1531  0008                     	;# 
  1532  0009                     	;# 
  1533  000A                     	;# 
  1534  000B                     	;# 
  1535  000C                     	;# 
  1536  000D                     	;# 
  1537  000E                     	;# 
  1538  0010                     	;# 
  1539  0011                     	;# 
  1540  0012                     	;# 
  1541  0013                     	;# 
  1542  0014                     	;# 
  1543  0015                     	;# 
  1544  0015                     	;# 
  1545  0016                     	;# 
  1546  0016                     	;# 
  1547  0017                     	;# 
  1548  0018                     	;# 
  1549  0019                     	;# 
  1550  0019                     	;# 
  1551  001A                     	;# 
  1552  001B                     	;# 
  1553  001C                     	;# 
  1554  001D                     	;# 
  1555  001E                     	;# 
  1556  001F                     	;# 
  1557  008C                     	;# 
  1558  008D                     	;# 
  1559  008E                     	;# 
  1560  0090                     	;# 
  1561  0091                     	;# 
  1562  0092                     	;# 
  1563  0093                     	;# 
  1564  0094                     	;# 
  1565  0097                     	;# 
  1566  009B                     	;# 
  1567  009B                     	;# 
  1568  009C                     	;# 
  1569  009D                     	;# 
  1570  009E                     	;# 
  1571  009F                     	;# 
  1572  010C                     	;# 
  1573  010D                     	;# 
  1574  010E                     	;# 
  1575  0111                     	;# 
  1576  0112                     	;# 
  1577  0113                     	;# 
  1578  0114                     	;# 
  1579  0115                     	;# 
  1580  0116                     	;# 
  1581  0117                     	;# 
  1582  0118                     	;# 
  1583  0119                     	;# 
  1584  018C                     	;# 
  1585  018D                     	;# 
  1586  018E                     	;# 
  1587  0197                     	;# 
  1588  0199                     	;# 
  1589  0199                     	;# 
  1590  0199                     	;# 
  1591  019A                     	;# 
  1592  019A                     	;# 
  1593  019A                     	;# 
  1594  019B                     	;# 
  1595  019B                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019C                     	;# 
  1600  019C                     	;# 
  1601  019C                     	;# 
  1602  019D                     	;# 
  1603  019D                     	;# 
  1604  019D                     	;# 
  1605  019E                     	;# 
  1606  019E                     	;# 
  1607  019E                     	;# 
  1608  019F                     	;# 
  1609  019F                     	;# 
  1610  019F                     	;# 
  1611  019F                     	;# 
  1612  019F                     	;# 
  1613  020C                     	;# 
  1614  020D                     	;# 
  1615  020E                     	;# 
  1616  0211                     	;# 
  1617  0211                     	;# 
  1618  0212                     	;# 
  1619  0212                     	;# 
  1620  0213                     	;# 
  1621  0213                     	;# 
  1622  0214                     	;# 
  1623  0214                     	;# 
  1624  0215                     	;# 
  1625  0215                     	;# 
  1626  0215                     	;# 
  1627  0215                     	;# 
  1628  0216                     	;# 
  1629  0216                     	;# 
  1630  0217                     	;# 
  1631  0217                     	;# 
  1632  0219                     	;# 
  1633  021A                     	;# 
  1634  021B                     	;# 
  1635  021C                     	;# 
  1636  021D                     	;# 
  1637  021D                     	;# 
  1638  021E                     	;# 
  1639  021F                     	;# 
  1640  028C                     	;# 
  1641  028D                     	;# 
  1642  028E                     	;# 
  1643  0291                     	;# 
  1644  0291                     	;# 
  1645  0292                     	;# 
  1646  0293                     	;# 
  1647  0294                     	;# 
  1648  0295                     	;# 
  1649  0295                     	;# 
  1650  0296                     	;# 
  1651  0297                     	;# 
  1652  0298                     	;# 
  1653  029F                     	;# 
  1654  030C                     	;# 
  1655  030D                     	;# 
  1656  030E                     	;# 
  1657  0311                     	;# 
  1658  0311                     	;# 
  1659  0312                     	;# 
  1660  0313                     	;# 
  1661  0314                     	;# 
  1662  0315                     	;# 
  1663  0315                     	;# 
  1664  0316                     	;# 
  1665  0317                     	;# 
  1666  0318                     	;# 
  1667  038C                     	;# 
  1668  038D                     	;# 
  1669  038E                     	;# 
  1670  0391                     	;# 
  1671  0392                     	;# 
  1672  0393                     	;# 
  1673  0394                     	;# 
  1674  0395                     	;# 
  1675  0396                     	;# 
  1676  0397                     	;# 
  1677  0398                     	;# 
  1678  0399                     	;# 
  1679  039A                     	;# 
  1680  039C                     	;# 
  1681  039D                     	;# 
  1682  039E                     	;# 
  1683  039F                     	;# 
  1684  0411                     	;# 
  1685  0411                     	;# 
  1686  0412                     	;# 
  1687  0413                     	;# 
  1688  0414                     	;# 
  1689  0415                     	;# 
  1690  0416                     	;# 
  1691  0417                     	;# 
  1692  0418                     	;# 
  1693  0418                     	;# 
  1694  0419                     	;# 
  1695  041A                     	;# 
  1696  041B                     	;# 
  1697  041C                     	;# 
  1698  041D                     	;# 
  1699  041E                     	;# 
  1700  041F                     	;# 
  1701  0498                     	;# 
  1702  0498                     	;# 
  1703  0499                     	;# 
  1704  049A                     	;# 
  1705  049B                     	;# 
  1706  049B                     	;# 
  1707  049C                     	;# 
  1708  049D                     	;# 
  1709  049E                     	;# 
  1710  049F                     	;# 
  1711  0617                     	;# 
  1712  0618                     	;# 
  1713  0619                     	;# 
  1714  0619                     	;# 
  1715  061A                     	;# 
  1716  061B                     	;# 
  1717  061C                     	;# 
  1718  061C                     	;# 
  1719  061F                     	;# 
  1720  0691                     	;# 
  1721  0692                     	;# 
  1722  0693                     	;# 
  1723  0694                     	;# 
  1724  0695                     	;# 
  1725  0696                     	;# 
  1726  0697                     	;# 
  1727  0698                     	;# 
  1728  0699                     	;# 
  1729  0711                     	;# 
  1730  0712                     	;# 
  1731  0713                     	;# 
  1732  0714                     	;# 
  1733  0715                     	;# 
  1734  0716                     	;# 
  1735  0717                     	;# 
  1736  0718                     	;# 
  1737  0719                     	;# 
  1738  0891                     	;# 
  1739  0891                     	;# 
  1740  0891                     	;# 
  1741  0891                     	;# 
  1742  0891                     	;# 
  1743  0891                     	;# 
  1744  0892                     	;# 
  1745  0892                     	;# 
  1746  0892                     	;# 
  1747  0893                     	;# 
  1748  0893                     	;# 
  1749  0893                     	;# 
  1750  0893                     	;# 
  1751  0893                     	;# 
  1752  0893                     	;# 
  1753  0894                     	;# 
  1754  0894                     	;# 
  1755  0894                     	;# 
  1756  0895                     	;# 
  1757  0895                     	;# 
  1758  0895                     	;# 
  1759  0896                     	;# 
  1760  0896                     	;# 
  1761  0896                     	;# 
  1762  089B                     	;# 
  1763  0911                     	;# 
  1764  0912                     	;# 
  1765  0913                     	;# 
  1766  0914                     	;# 
  1767  0915                     	;# 
  1768  0916                     	;# 
  1769  0918                     	;# 
  1770  0919                     	;# 
  1771  091A                     	;# 
  1772  091B                     	;# 
  1773  091C                     	;# 
  1774  091D                     	;# 
  1775  091E                     	;# 
  1776  091F                     	;# 
  1777  0E0F                     	;# 
  1778  0E10                     	;# 
  1779  0E11                     	;# 
  1780  0E12                     	;# 
  1781  0E13                     	;# 
  1782  0E14                     	;# 
  1783  0E15                     	;# 
  1784  0E16                     	;# 
  1785  0E17                     	;# 
  1786  0E18                     	;# 
  1787  0E19                     	;# 
  1788  0E1A                     	;# 
  1789  0E1B                     	;# 
  1790  0E1C                     	;# 
  1791  0E1D                     	;# 
  1792  0E1E                     	;# 
  1793  0E1F                     	;# 
  1794  0E20                     	;# 
  1795  0E21                     	;# 
  1796  0E22                     	;# 
  1797  0E24                     	;# 
  1798  0E25                     	;# 
  1799  0E28                     	;# 
  1800  0E29                     	;# 
  1801  0E2A                     	;# 
  1802  0E2B                     	;# 
  1803  0E2C                     	;# 
  1804  0E2D                     	;# 
  1805  0E2E                     	;# 
  1806  0E2F                     	;# 
  1807  0E90                     	;# 
  1808  0E91                     	;# 
  1809  0E92                     	;# 
  1810  0E94                     	;# 
  1811  0E95                     	;# 
  1812  0E9C                     	;# 
  1813  0E9D                     	;# 
  1814  0E9E                     	;# 
  1815  0E9F                     	;# 
  1816  0EA0                     	;# 
  1817  0EA1                     	;# 
  1818  0EA2                     	;# 
  1819  0EA3                     	;# 
  1820  0EA4                     	;# 
  1821  0EA5                     	;# 
  1822  0EA6                     	;# 
  1823  0EA7                     	;# 
  1824  0F0F                     	;# 
  1825  0F10                     	;# 
  1826  0F11                     	;# 
  1827  0F12                     	;# 
  1828  0F13                     	;# 
  1829  0F14                     	;# 
  1830  0F15                     	;# 
  1831  0F16                     	;# 
  1832  0F17                     	;# 
  1833  0F18                     	;# 
  1834  0F19                     	;# 
  1835  0F1A                     	;# 
  1836  0F1B                     	;# 
  1837  0F1C                     	;# 
  1838  0F1D                     	;# 
  1839  0F1E                     	;# 
  1840  0F1F                     	;# 
  1841  0F20                     	;# 
  1842  0F21                     	;# 
  1843  0F22                     	;# 
  1844  0F23                     	;# 
  1845  0F24                     	;# 
  1846  0F25                     	;# 
  1847  0F26                     	;# 
  1848  0F27                     	;# 
  1849  0F28                     	;# 
  1850  0F29                     	;# 
  1851  0F2A                     	;# 
  1852  0F2B                     	;# 
  1853  0F2C                     	;# 
  1854  0F2D                     	;# 
  1855  0F2E                     	;# 
  1856  0F2F                     	;# 
  1857  0F30                     	;# 
  1858  0F31                     	;# 
  1859  0F32                     	;# 
  1860  0F33                     	;# 
  1861  0F34                     	;# 
  1862  0F35                     	;# 
  1863  0F36                     	;# 
  1864  0F37                     	;# 
  1865  0FE4                     	;# 
  1866  0FE5                     	;# 
  1867  0FE6                     	;# 
  1868  0FE7                     	;# 
  1869  0FE8                     	;# 
  1870  0FE9                     	;# 
  1871  0FEA                     	;# 
  1872  0FEB                     	;# 
  1873  0FED                     	;# 
  1874  0FEE                     	;# 
  1875  0FEF                     	;# 
  1876  0000                     	;# 
  1877  0001                     	;# 
  1878  0002                     	;# 
  1879  0003                     	;# 
  1880  0004                     	;# 
  1881  0005                     	;# 
  1882  0006                     	;# 
  1883  0007                     	;# 
  1884  0008                     	;# 
  1885  0009                     	;# 
  1886  000A                     	;# 
  1887  000B                     	;# 
  1888  000C                     	;# 
  1889  000D                     	;# 
  1890  000E                     	;# 
  1891  0010                     	;# 
  1892  0011                     	;# 
  1893  0012                     	;# 
  1894  0013                     	;# 
  1895  0014                     	;# 
  1896  0015                     	;# 
  1897  0015                     	;# 
  1898  0016                     	;# 
  1899  0016                     	;# 
  1900  0017                     	;# 
  1901  0018                     	;# 
  1902  0019                     	;# 
  1903  0019                     	;# 
  1904  001A                     	;# 
  1905  001B                     	;# 
  1906  001C                     	;# 
  1907  001D                     	;# 
  1908  001E                     	;# 
  1909  001F                     	;# 
  1910  008C                     	;# 
  1911  008D                     	;# 
  1912  008E                     	;# 
  1913  0090                     	;# 
  1914  0091                     	;# 
  1915  0092                     	;# 
  1916  0093                     	;# 
  1917  0094                     	;# 
  1918  0097                     	;# 
  1919  009B                     	;# 
  1920  009B                     	;# 
  1921  009C                     	;# 
  1922  009D                     	;# 
  1923  009E                     	;# 
  1924  009F                     	;# 
  1925  010C                     	;# 
  1926  010D                     	;# 
  1927  010E                     	;# 
  1928  0111                     	;# 
  1929  0112                     	;# 
  1930  0113                     	;# 
  1931  0114                     	;# 
  1932  0115                     	;# 
  1933  0116                     	;# 
  1934  0117                     	;# 
  1935  0118                     	;# 
  1936  0119                     	;# 
  1937  018C                     	;# 
  1938  018D                     	;# 
  1939  018E                     	;# 
  1940  0197                     	;# 
  1941  0199                     	;# 
  1942  0199                     	;# 
  1943  0199                     	;# 
  1944  019A                     	;# 
  1945  019A                     	;# 
  1946  019A                     	;# 
  1947  019B                     	;# 
  1948  019B                     	;# 
  1949  019B                     	;# 
  1950  019B                     	;# 
  1951  019B                     	;# 
  1952  019C                     	;# 
  1953  019C                     	;# 
  1954  019C                     	;# 
  1955  019D                     	;# 
  1956  019D                     	;# 
  1957  019D                     	;# 
  1958  019E                     	;# 
  1959  019E                     	;# 
  1960  019E                     	;# 
  1961  019F                     	;# 
  1962  019F                     	;# 
  1963  019F                     	;# 
  1964  019F                     	;# 
  1965  019F                     	;# 
  1966  020C                     	;# 
  1967  020D                     	;# 
  1968  020E                     	;# 
  1969  0211                     	;# 
  1970  0211                     	;# 
  1971  0212                     	;# 
  1972  0212                     	;# 
  1973  0213                     	;# 
  1974  0213                     	;# 
  1975  0214                     	;# 
  1976  0214                     	;# 
  1977  0215                     	;# 
  1978  0215                     	;# 
  1979  0215                     	;# 
  1980  0215                     	;# 
  1981  0216                     	;# 
  1982  0216                     	;# 
  1983  0217                     	;# 
  1984  0217                     	;# 
  1985  0219                     	;# 
  1986  021A                     	;# 
  1987  021B                     	;# 
  1988  021C                     	;# 
  1989  021D                     	;# 
  1990  021D                     	;# 
  1991  021E                     	;# 
  1992  021F                     	;# 
  1993  028C                     	;# 
  1994  028D                     	;# 
  1995  028E                     	;# 
  1996  0291                     	;# 
  1997  0291                     	;# 
  1998  0292                     	;# 
  1999  0293                     	;# 
  2000  0294                     	;# 
  2001  0295                     	;# 
  2002  0295                     	;# 
  2003  0296                     	;# 
  2004  0297                     	;# 
  2005  0298                     	;# 
  2006  029F                     	;# 
  2007  030C                     	;# 
  2008  030D                     	;# 
  2009  030E                     	;# 
  2010  0311                     	;# 
  2011  0311                     	;# 
  2012  0312                     	;# 
  2013  0313                     	;# 
  2014  0314                     	;# 
  2015  0315                     	;# 
  2016  0315                     	;# 
  2017  0316                     	;# 
  2018  0317                     	;# 
  2019  0318                     	;# 
  2020  038C                     	;# 
  2021  038D                     	;# 
  2022  038E                     	;# 
  2023  0391                     	;# 
  2024  0392                     	;# 
  2025  0393                     	;# 
  2026  0394                     	;# 
  2027  0395                     	;# 
  2028  0396                     	;# 
  2029  0397                     	;# 
  2030  0398                     	;# 
  2031  0399                     	;# 
  2032  039A                     	;# 
  2033  039C                     	;# 
  2034  039D                     	;# 
  2035  039E                     	;# 
  2036  039F                     	;# 
  2037  0411                     	;# 
  2038  0411                     	;# 
  2039  0412                     	;# 
  2040  0413                     	;# 
  2041  0414                     	;# 
  2042  0415                     	;# 
  2043  0416                     	;# 
  2044  0417                     	;# 
  2045  0418                     	;# 
  2046  0418                     	;# 
  2047  0419                     	;# 
  2048  041A                     	;# 
  2049  041B                     	;# 
  2050  041C                     	;# 
  2051  041D                     	;# 
  2052  041E                     	;# 
  2053  041F                     	;# 
  2054  0498                     	;# 
  2055  0498                     	;# 
  2056  0499                     	;# 
  2057  049A                     	;# 
  2058  049B                     	;# 
  2059  049B                     	;# 
  2060  049C                     	;# 
  2061  049D                     	;# 
  2062  049E                     	;# 
  2063  049F                     	;# 
  2064  0617                     	;# 
  2065  0618                     	;# 
  2066  0619                     	;# 
  2067  0619                     	;# 
  2068  061A                     	;# 
  2069  061B                     	;# 
  2070  061C                     	;# 
  2071  061C                     	;# 
  2072  061F                     	;# 
  2073  0691                     	;# 
  2074  0692                     	;# 
  2075  0693                     	;# 
  2076  0694                     	;# 
  2077  0695                     	;# 
  2078  0696                     	;# 
  2079  0697                     	;# 
  2080  0698                     	;# 
  2081  0699                     	;# 
  2082  0711                     	;# 
  2083  0712                     	;# 
  2084  0713                     	;# 
  2085  0714                     	;# 
  2086  0715                     	;# 
  2087  0716                     	;# 
  2088  0717                     	;# 
  2089  0718                     	;# 
  2090  0719                     	;# 
  2091  0891                     	;# 
  2092  0891                     	;# 
  2093  0891                     	;# 
  2094  0891                     	;# 
  2095  0891                     	;# 
  2096  0891                     	;# 
  2097  0892                     	;# 
  2098  0892                     	;# 
  2099  0892                     	;# 
  2100  0893                     	;# 
  2101  0893                     	;# 
  2102  0893                     	;# 
  2103  0893                     	;# 
  2104  0893                     	;# 
  2105  0893                     	;# 
  2106  0894                     	;# 
  2107  0894                     	;# 
  2108  0894                     	;# 
  2109  0895                     	;# 
  2110  0895                     	;# 
  2111  0895                     	;# 
  2112  0896                     	;# 
  2113  0896                     	;# 
  2114  0896                     	;# 
  2115  089B                     	;# 
  2116  0911                     	;# 
  2117  0912                     	;# 
  2118  0913                     	;# 
  2119  0914                     	;# 
  2120  0915                     	;# 
  2121  0916                     	;# 
  2122  0918                     	;# 
  2123  0919                     	;# 
  2124  091A                     	;# 
  2125  091B                     	;# 
  2126  091C                     	;# 
  2127  091D                     	;# 
  2128  091E                     	;# 
  2129  091F                     	;# 
  2130  0E0F                     	;# 
  2131  0E10                     	;# 
  2132  0E11                     	;# 
  2133  0E12                     	;# 
  2134  0E13                     	;# 
  2135  0E14                     	;# 
  2136  0E15                     	;# 
  2137  0E16                     	;# 
  2138  0E17                     	;# 
  2139  0E18                     	;# 
  2140  0E19                     	;# 
  2141  0E1A                     	;# 
  2142  0E1B                     	;# 
  2143  0E1C                     	;# 
  2144  0E1D                     	;# 
  2145  0E1E                     	;# 
  2146  0E1F                     	;# 
  2147  0E20                     	;# 
  2148  0E21                     	;# 
  2149  0E22                     	;# 
  2150  0E24                     	;# 
  2151  0E25                     	;# 
  2152  0E28                     	;# 
  2153  0E29                     	;# 
  2154  0E2A                     	;# 
  2155  0E2B                     	;# 
  2156  0E2C                     	;# 
  2157  0E2D                     	;# 
  2158  0E2E                     	;# 
  2159  0E2F                     	;# 
  2160  0E90                     	;# 
  2161  0E91                     	;# 
  2162  0E92                     	;# 
  2163  0E94                     	;# 
  2164  0E95                     	;# 
  2165  0E9C                     	;# 
  2166  0E9D                     	;# 
  2167  0E9E                     	;# 
  2168  0E9F                     	;# 
  2169  0EA0                     	;# 
  2170  0EA1                     	;# 
  2171  0EA2                     	;# 
  2172  0EA3                     	;# 
  2173  0EA4                     	;# 
  2174  0EA5                     	;# 
  2175  0EA6                     	;# 
  2176  0EA7                     	;# 
  2177  0F0F                     	;# 
  2178  0F10                     	;# 
  2179  0F11                     	;# 
  2180  0F12                     	;# 
  2181  0F13                     	;# 
  2182  0F14                     	;# 
  2183  0F15                     	;# 
  2184  0F16                     	;# 
  2185  0F17                     	;# 
  2186  0F18                     	;# 
  2187  0F19                     	;# 
  2188  0F1A                     	;# 
  2189  0F1B                     	;# 
  2190  0F1C                     	;# 
  2191  0F1D                     	;# 
  2192  0F1E                     	;# 
  2193  0F1F                     	;# 
  2194  0F20                     	;# 
  2195  0F21                     	;# 
  2196  0F22                     	;# 
  2197  0F23                     	;# 
  2198  0F24                     	;# 
  2199  0F25                     	;# 
  2200  0F26                     	;# 
  2201  0F27                     	;# 
  2202  0F28                     	;# 
  2203  0F29                     	;# 
  2204  0F2A                     	;# 
  2205  0F2B                     	;# 
  2206  0F2C                     	;# 
  2207  0F2D                     	;# 
  2208  0F2E                     	;# 
  2209  0F2F                     	;# 
  2210  0F30                     	;# 
  2211  0F31                     	;# 
  2212  0F32                     	;# 
  2213  0F33                     	;# 
  2214  0F34                     	;# 
  2215  0F35                     	;# 
  2216  0F36                     	;# 
  2217  0F37                     	;# 
  2218  0FE4                     	;# 
  2219  0FE5                     	;# 
  2220  0FE6                     	;# 
  2221  0FE7                     	;# 
  2222  0FE8                     	;# 
  2223  0FE9                     	;# 
  2224  0FEA                     	;# 
  2225  0FEB                     	;# 
  2226  0FED                     	;# 
  2227  0FEE                     	;# 
  2228  0FEF                     	;# 
  2229  0000                     	;# 
  2230  0001                     	;# 
  2231  0002                     	;# 
  2232  0003                     	;# 
  2233  0004                     	;# 
  2234  0005                     	;# 
  2235  0006                     	;# 
  2236  0007                     	;# 
  2237  0008                     	;# 
  2238  0009                     	;# 
  2239  000A                     	;# 
  2240  000B                     	;# 
  2241  000C                     	;# 
  2242  000D                     	;# 
  2243  000E                     	;# 
  2244  0010                     	;# 
  2245  0011                     	;# 
  2246  0012                     	;# 
  2247  0013                     	;# 
  2248  0014                     	;# 
  2249  0015                     	;# 
  2250  0015                     	;# 
  2251  0016                     	;# 
  2252  0016                     	;# 
  2253  0017                     	;# 
  2254  0018                     	;# 
  2255  0019                     	;# 
  2256  0019                     	;# 
  2257  001A                     	;# 
  2258  001B                     	;# 
  2259  001C                     	;# 
  2260  001D                     	;# 
  2261  001E                     	;# 
  2262  001F                     	;# 
  2263  008C                     	;# 
  2264  008D                     	;# 
  2265  008E                     	;# 
  2266  0090                     	;# 
  2267  0091                     	;# 
  2268  0092                     	;# 
  2269  0093                     	;# 
  2270  0094                     	;# 
  2271  0097                     	;# 
  2272  009B                     	;# 
  2273  009B                     	;# 
  2274  009C                     	;# 
  2275  009D                     	;# 
  2276  009E                     	;# 
  2277  009F                     	;# 
  2278  010C                     	;# 
  2279  010D                     	;# 
  2280  010E                     	;# 
  2281  0111                     	;# 
  2282  0112                     	;# 
  2283  0113                     	;# 
  2284  0114                     	;# 
  2285  0115                     	;# 
  2286  0116                     	;# 
  2287  0117                     	;# 
  2288  0118                     	;# 
  2289  0119                     	;# 
  2290  018C                     	;# 
  2291  018D                     	;# 
  2292  018E                     	;# 
  2293  0197                     	;# 
  2294  0199                     	;# 
  2295  0199                     	;# 
  2296  0199                     	;# 
  2297  019A                     	;# 
  2298  019A                     	;# 
  2299  019A                     	;# 
  2300  019B                     	;# 
  2301  019B                     	;# 
  2302  019B                     	;# 
  2303  019B                     	;# 
  2304  019B                     	;# 
  2305  019C                     	;# 
  2306  019C                     	;# 
  2307  019C                     	;# 
  2308  019D                     	;# 
  2309  019D                     	;# 
  2310  019D                     	;# 
  2311  019E                     	;# 
  2312  019E                     	;# 
  2313  019E                     	;# 
  2314  019F                     	;# 
  2315  019F                     	;# 
  2316  019F                     	;# 
  2317  019F                     	;# 
  2318  019F                     	;# 
  2319  020C                     	;# 
  2320  020D                     	;# 
  2321  020E                     	;# 
  2322  0211                     	;# 
  2323  0211                     	;# 
  2324  0212                     	;# 
  2325  0212                     	;# 
  2326  0213                     	;# 
  2327  0213                     	;# 
  2328  0214                     	;# 
  2329  0214                     	;# 
  2330  0215                     	;# 
  2331  0215                     	;# 
  2332  0215                     	;# 
  2333  0215                     	;# 
  2334  0216                     	;# 
  2335  0216                     	;# 
  2336  0217                     	;# 
  2337  0217                     	;# 
  2338  0219                     	;# 
  2339  021A                     	;# 
  2340  021B                     	;# 
  2341  021C                     	;# 
  2342  021D                     	;# 
  2343  021D                     	;# 
  2344  021E                     	;# 
  2345  021F                     	;# 
  2346  028C                     	;# 
  2347  028D                     	;# 
  2348  028E                     	;# 
  2349  0291                     	;# 
  2350  0291                     	;# 
  2351  0292                     	;# 
  2352  0293                     	;# 
  2353  0294                     	;# 
  2354  0295                     	;# 
  2355  0295                     	;# 
  2356  0296                     	;# 
  2357  0297                     	;# 
  2358  0298                     	;# 
  2359  029F                     	;# 
  2360  030C                     	;# 
  2361  030D                     	;# 
  2362  030E                     	;# 
  2363  0311                     	;# 
  2364  0311                     	;# 
  2365  0312                     	;# 
  2366  0313                     	;# 
  2367  0314                     	;# 
  2368  0315                     	;# 
  2369  0315                     	;# 
  2370  0316                     	;# 
  2371  0317                     	;# 
  2372  0318                     	;# 
  2373  038C                     	;# 
  2374  038D                     	;# 
  2375  038E                     	;# 
  2376  0391                     	;# 
  2377  0392                     	;# 
  2378  0393                     	;# 
  2379  0394                     	;# 
  2380  0395                     	;# 
  2381  0396                     	;# 
  2382  0397                     	;# 
  2383  0398                     	;# 
  2384  0399                     	;# 
  2385  039A                     	;# 
  2386  039C                     	;# 
  2387  039D                     	;# 
  2388  039E                     	;# 
  2389  039F                     	;# 
  2390  0411                     	;# 
  2391  0411                     	;# 
  2392  0412                     	;# 
  2393  0413                     	;# 
  2394  0414                     	;# 
  2395  0415                     	;# 
  2396  0416                     	;# 
  2397  0417                     	;# 
  2398  0418                     	;# 
  2399  0418                     	;# 
  2400  0419                     	;# 
  2401  041A                     	;# 
  2402  041B                     	;# 
  2403  041C                     	;# 
  2404  041D                     	;# 
  2405  041E                     	;# 
  2406  041F                     	;# 
  2407  0498                     	;# 
  2408  0498                     	;# 
  2409  0499                     	;# 
  2410  049A                     	;# 
  2411  049B                     	;# 
  2412  049B                     	;# 
  2413  049C                     	;# 
  2414  049D                     	;# 
  2415  049E                     	;# 
  2416  049F                     	;# 
  2417  0617                     	;# 
  2418  0618                     	;# 
  2419  0619                     	;# 
  2420  0619                     	;# 
  2421  061A                     	;# 
  2422  061B                     	;# 
  2423  061C                     	;# 
  2424  061C                     	;# 
  2425  061F                     	;# 
  2426  0691                     	;# 
  2427  0692                     	;# 
  2428  0693                     	;# 
  2429  0694                     	;# 
  2430  0695                     	;# 
  2431  0696                     	;# 
  2432  0697                     	;# 
  2433  0698                     	;# 
  2434  0699                     	;# 
  2435  0711                     	;# 
  2436  0712                     	;# 
  2437  0713                     	;# 
  2438  0714                     	;# 
  2439  0715                     	;# 
  2440  0716                     	;# 
  2441  0717                     	;# 
  2442  0718                     	;# 
  2443  0719                     	;# 
  2444  0891                     	;# 
  2445  0891                     	;# 
  2446  0891                     	;# 
  2447  0891                     	;# 
  2448  0891                     	;# 
  2449  0891                     	;# 
  2450  0892                     	;# 
  2451  0892                     	;# 
  2452  0892                     	;# 
  2453  0893                     	;# 
  2454  0893                     	;# 
  2455  0893                     	;# 
  2456  0893                     	;# 
  2457  0893                     	;# 
  2458  0893                     	;# 
  2459  0894                     	;# 
  2460  0894                     	;# 
  2461  0894                     	;# 
  2462  0895                     	;# 
  2463  0895                     	;# 
  2464  0895                     	;# 
  2465  0896                     	;# 
  2466  0896                     	;# 
  2467  0896                     	;# 
  2468  089B                     	;# 
  2469  0911                     	;# 
  2470  0912                     	;# 
  2471  0913                     	;# 
  2472  0914                     	;# 
  2473  0915                     	;# 
  2474  0916                     	;# 
  2475  0918                     	;# 
  2476  0919                     	;# 
  2477  091A                     	;# 
  2478  091B                     	;# 
  2479  091C                     	;# 
  2480  091D                     	;# 
  2481  091E                     	;# 
  2482  091F                     	;# 
  2483  0E0F                     	;# 
  2484  0E10                     	;# 
  2485  0E11                     	;# 
  2486  0E12                     	;# 
  2487  0E13                     	;# 
  2488  0E14                     	;# 
  2489  0E15                     	;# 
  2490  0E16                     	;# 
  2491  0E17                     	;# 
  2492  0E18                     	;# 
  2493  0E19                     	;# 
  2494  0E1A                     	;# 
  2495  0E1B                     	;# 
  2496  0E1C                     	;# 
  2497  0E1D                     	;# 
  2498  0E1E                     	;# 
  2499  0E1F                     	;# 
  2500  0E20                     	;# 
  2501  0E21                     	;# 
  2502  0E22                     	;# 
  2503  0E24                     	;# 
  2504  0E25                     	;# 
  2505  0E28                     	;# 
  2506  0E29                     	;# 
  2507  0E2A                     	;# 
  2508  0E2B                     	;# 
  2509  0E2C                     	;# 
  2510  0E2D                     	;# 
  2511  0E2E                     	;# 
  2512  0E2F                     	;# 
  2513  0E90                     	;# 
  2514  0E91                     	;# 
  2515  0E92                     	;# 
  2516  0E94                     	;# 
  2517  0E95                     	;# 
  2518  0E9C                     	;# 
  2519  0E9D                     	;# 
  2520  0E9E                     	;# 
  2521  0E9F                     	;# 
  2522  0EA0                     	;# 
  2523  0EA1                     	;# 
  2524  0EA2                     	;# 
  2525  0EA3                     	;# 
  2526  0EA4                     	;# 
  2527  0EA5                     	;# 
  2528  0EA6                     	;# 
  2529  0EA7                     	;# 
  2530  0F0F                     	;# 
  2531  0F10                     	;# 
  2532  0F11                     	;# 
  2533  0F12                     	;# 
  2534  0F13                     	;# 
  2535  0F14                     	;# 
  2536  0F15                     	;# 
  2537  0F16                     	;# 
  2538  0F17                     	;# 
  2539  0F18                     	;# 
  2540  0F19                     	;# 
  2541  0F1A                     	;# 
  2542  0F1B                     	;# 
  2543  0F1C                     	;# 
  2544  0F1D                     	;# 
  2545  0F1E                     	;# 
  2546  0F1F                     	;# 
  2547  0F20                     	;# 
  2548  0F21                     	;# 
  2549  0F22                     	;# 
  2550  0F23                     	;# 
  2551  0F24                     	;# 
  2552  0F25                     	;# 
  2553  0F26                     	;# 
  2554  0F27                     	;# 
  2555  0F28                     	;# 
  2556  0F29                     	;# 
  2557  0F2A                     	;# 
  2558  0F2B                     	;# 
  2559  0F2C                     	;# 
  2560  0F2D                     	;# 
  2561  0F2E                     	;# 
  2562  0F2F                     	;# 
  2563  0F30                     	;# 
  2564  0F31                     	;# 
  2565  0F32                     	;# 
  2566  0F33                     	;# 
  2567  0F34                     	;# 
  2568  0F35                     	;# 
  2569  0F36                     	;# 
  2570  0F37                     	;# 
  2571  0FE4                     	;# 
  2572  0FE5                     	;# 
  2573  0FE6                     	;# 
  2574  0FE7                     	;# 
  2575  0FE8                     	;# 
  2576  0FE9                     	;# 
  2577  0FEA                     	;# 
  2578  0FEB                     	;# 
  2579  0FED                     	;# 
  2580  0FEE                     	;# 
  2581  0FEF                     	;# 
  2582  0000                     	;# 
  2583  0001                     	;# 
  2584  0002                     	;# 
  2585  0003                     	;# 
  2586  0004                     	;# 
  2587  0005                     	;# 
  2588  0006                     	;# 
  2589  0007                     	;# 
  2590  0008                     	;# 
  2591  0009                     	;# 
  2592  000A                     	;# 
  2593  000B                     	;# 
  2594  000C                     	;# 
  2595  000D                     	;# 
  2596  000E                     	;# 
  2597  0010                     	;# 
  2598  0011                     	;# 
  2599  0012                     	;# 
  2600  0013                     	;# 
  2601  0014                     	;# 
  2602  0015                     	;# 
  2603  0015                     	;# 
  2604  0016                     	;# 
  2605  0016                     	;# 
  2606  0017                     	;# 
  2607  0018                     	;# 
  2608  0019                     	;# 
  2609  0019                     	;# 
  2610  001A                     	;# 
  2611  001B                     	;# 
  2612  001C                     	;# 
  2613  001D                     	;# 
  2614  001E                     	;# 
  2615  001F                     	;# 
  2616  008C                     	;# 
  2617  008D                     	;# 
  2618  008E                     	;# 
  2619  0090                     	;# 
  2620  0091                     	;# 
  2621  0092                     	;# 
  2622  0093                     	;# 
  2623  0094                     	;# 
  2624  0097                     	;# 
  2625  009B                     	;# 
  2626  009B                     	;# 
  2627  009C                     	;# 
  2628  009D                     	;# 
  2629  009E                     	;# 
  2630  009F                     	;# 
  2631  010C                     	;# 
  2632  010D                     	;# 
  2633  010E                     	;# 
  2634  0111                     	;# 
  2635  0112                     	;# 
  2636  0113                     	;# 
  2637  0114                     	;# 
  2638  0115                     	;# 
  2639  0116                     	;# 
  2640  0117                     	;# 
  2641  0118                     	;# 
  2642  0119                     	;# 
  2643  018C                     	;# 
  2644  018D                     	;# 
  2645  018E                     	;# 
  2646  0197                     	;# 
  2647  0199                     	;# 
  2648  0199                     	;# 
  2649  0199                     	;# 
  2650  019A                     	;# 
  2651  019A                     	;# 
  2652  019A                     	;# 
  2653  019B                     	;# 
  2654  019B                     	;# 
  2655  019B                     	;# 
  2656  019B                     	;# 
  2657  019B                     	;# 
  2658  019C                     	;# 
  2659  019C                     	;# 
  2660  019C                     	;# 
  2661  019D                     	;# 
  2662  019D                     	;# 
  2663  019D                     	;# 
  2664  019E                     	;# 
  2665  019E                     	;# 
  2666  019E                     	;# 
  2667  019F                     	;# 
  2668  019F                     	;# 
  2669  019F                     	;# 
  2670  019F                     	;# 
  2671  019F                     	;# 
  2672  020C                     	;# 
  2673  020D                     	;# 
  2674  020E                     	;# 
  2675  0211                     	;# 
  2676  0211                     	;# 
  2677  0212                     	;# 
  2678  0212                     	;# 
  2679  0213                     	;# 
  2680  0213                     	;# 
  2681  0214                     	;# 
  2682  0214                     	;# 
  2683  0215                     	;# 
  2684  0215                     	;# 
  2685  0215                     	;# 
  2686  0215                     	;# 
  2687  0216                     	;# 
  2688  0216                     	;# 
  2689  0217                     	;# 
  2690  0217                     	;# 
  2691  0219                     	;# 
  2692  021A                     	;# 
  2693  021B                     	;# 
  2694  021C                     	;# 
  2695  021D                     	;# 
  2696  021D                     	;# 
  2697  021E                     	;# 
  2698  021F                     	;# 
  2699  028C                     	;# 
  2700  028D                     	;# 
  2701  028E                     	;# 
  2702  0291                     	;# 
  2703  0291                     	;# 
  2704  0292                     	;# 
  2705  0293                     	;# 
  2706  0294                     	;# 
  2707  0295                     	;# 
  2708  0295                     	;# 
  2709  0296                     	;# 
  2710  0297                     	;# 
  2711  0298                     	;# 
  2712  029F                     	;# 
  2713  030C                     	;# 
  2714  030D                     	;# 
  2715  030E                     	;# 
  2716  0311                     	;# 
  2717  0311                     	;# 
  2718  0312                     	;# 
  2719  0313                     	;# 
  2720  0314                     	;# 
  2721  0315                     	;# 
  2722  0315                     	;# 
  2723  0316                     	;# 
  2724  0317                     	;# 
  2725  0318                     	;# 
  2726  038C                     	;# 
  2727  038D                     	;# 
  2728  038E                     	;# 
  2729  0391                     	;# 
  2730  0392                     	;# 
  2731  0393                     	;# 
  2732  0394                     	;# 
  2733  0395                     	;# 
  2734  0396                     	;# 
  2735  0397                     	;# 
  2736  0398                     	;# 
  2737  0399                     	;# 
  2738  039A                     	;# 
  2739  039C                     	;# 
  2740  039D                     	;# 
  2741  039E                     	;# 
  2742  039F                     	;# 
  2743  0411                     	;# 
  2744  0411                     	;# 
  2745  0412                     	;# 
  2746  0413                     	;# 
  2747  0414                     	;# 
  2748  0415                     	;# 
  2749  0416                     	;# 
  2750  0417                     	;# 
  2751  0418                     	;# 
  2752  0418                     	;# 
  2753  0419                     	;# 
  2754  041A                     	;# 
  2755  041B                     	;# 
  2756  041C                     	;# 
  2757  041D                     	;# 
  2758  041E                     	;# 
  2759  041F                     	;# 
  2760  0498                     	;# 
  2761  0498                     	;# 
  2762  0499                     	;# 
  2763  049A                     	;# 
  2764  049B                     	;# 
  2765  049B                     	;# 
  2766  049C                     	;# 
  2767  049D                     	;# 
  2768  049E                     	;# 
  2769  049F                     	;# 
  2770  0617                     	;# 
  2771  0618                     	;# 
  2772  0619                     	;# 
  2773  0619                     	;# 
  2774  061A                     	;# 
  2775  061B                     	;# 
  2776  061C                     	;# 
  2777  061C                     	;# 
  2778  061F                     	;# 
  2779  0691                     	;# 
  2780  0692                     	;# 
  2781  0693                     	;# 
  2782  0694                     	;# 
  2783  0695                     	;# 
  2784  0696                     	;# 
  2785  0697                     	;# 
  2786  0698                     	;# 
  2787  0699                     	;# 
  2788  0711                     	;# 
  2789  0712                     	;# 
  2790  0713                     	;# 
  2791  0714                     	;# 
  2792  0715                     	;# 
  2793  0716                     	;# 
  2794  0717                     	;# 
  2795  0718                     	;# 
  2796  0719                     	;# 
  2797  0891                     	;# 
  2798  0891                     	;# 
  2799  0891                     	;# 
  2800  0891                     	;# 
  2801  0891                     	;# 
  2802  0891                     	;# 
  2803  0892                     	;# 
  2804  0892                     	;# 
  2805  0892                     	;# 
  2806  0893                     	;# 
  2807  0893                     	;# 
  2808  0893                     	;# 
  2809  0893                     	;# 
  2810  0893                     	;# 
  2811  0893                     	;# 
  2812  0894                     	;# 
  2813  0894                     	;# 
  2814  0894                     	;# 
  2815  0895                     	;# 
  2816  0895                     	;# 
  2817  0895                     	;# 
  2818  0896                     	;# 
  2819  0896                     	;# 
  2820  0896                     	;# 
  2821  089B                     	;# 
  2822  0911                     	;# 
  2823  0912                     	;# 
  2824  0913                     	;# 
  2825  0914                     	;# 
  2826  0915                     	;# 
  2827  0916                     	;# 
  2828  0918                     	;# 
  2829  0919                     	;# 
  2830  091A                     	;# 
  2831  091B                     	;# 
  2832  091C                     	;# 
  2833  091D                     	;# 
  2834  091E                     	;# 
  2835  091F                     	;# 
  2836  0E0F                     	;# 
  2837  0E10                     	;# 
  2838  0E11                     	;# 
  2839  0E12                     	;# 
  2840  0E13                     	;# 
  2841  0E14                     	;# 
  2842  0E15                     	;# 
  2843  0E16                     	;# 
  2844  0E17                     	;# 
  2845  0E18                     	;# 
  2846  0E19                     	;# 
  2847  0E1A                     	;# 
  2848  0E1B                     	;# 
  2849  0E1C                     	;# 
  2850  0E1D                     	;# 
  2851  0E1E                     	;# 
  2852  0E1F                     	;# 
  2853  0E20                     	;# 
  2854  0E21                     	;# 
  2855  0E22                     	;# 
  2856  0E24                     	;# 
  2857  0E25                     	;# 
  2858  0E28                     	;# 
  2859  0E29                     	;# 
  2860  0E2A                     	;# 
  2861  0E2B                     	;# 
  2862  0E2C                     	;# 
  2863  0E2D                     	;# 
  2864  0E2E                     	;# 
  2865  0E2F                     	;# 
  2866  0E90                     	;# 
  2867  0E91                     	;# 
  2868  0E92                     	;# 
  2869  0E94                     	;# 
  2870  0E95                     	;# 
  2871  0E9C                     	;# 
  2872  0E9D                     	;# 
  2873  0E9E                     	;# 
  2874  0E9F                     	;# 
  2875  0EA0                     	;# 
  2876  0EA1                     	;# 
  2877  0EA2                     	;# 
  2878  0EA3                     	;# 
  2879  0EA4                     	;# 
  2880  0EA5                     	;# 
  2881  0EA6                     	;# 
  2882  0EA7                     	;# 
  2883  0F0F                     	;# 
  2884  0F10                     	;# 
  2885  0F11                     	;# 
  2886  0F12                     	;# 
  2887  0F13                     	;# 
  2888  0F14                     	;# 
  2889  0F15                     	;# 
  2890  0F16                     	;# 
  2891  0F17                     	;# 
  2892  0F18                     	;# 
  2893  0F19                     	;# 
  2894  0F1A                     	;# 
  2895  0F1B                     	;# 
  2896  0F1C                     	;# 
  2897  0F1D                     	;# 
  2898  0F1E                     	;# 
  2899  0F1F                     	;# 
  2900  0F20                     	;# 
  2901  0F21                     	;# 
  2902  0F22                     	;# 
  2903  0F23                     	;# 
  2904  0F24                     	;# 
  2905  0F25                     	;# 
  2906  0F26                     	;# 
  2907  0F27                     	;# 
  2908  0F28                     	;# 
  2909  0F29                     	;# 
  2910  0F2A                     	;# 
  2911  0F2B                     	;# 
  2912  0F2C                     	;# 
  2913  0F2D                     	;# 
  2914  0F2E                     	;# 
  2915  0F2F                     	;# 
  2916  0F30                     	;# 
  2917  0F31                     	;# 
  2918  0F32                     	;# 
  2919  0F33                     	;# 
  2920  0F34                     	;# 
  2921  0F35                     	;# 
  2922  0F36                     	;# 
  2923  0F37                     	;# 
  2924  0FE4                     	;# 
  2925  0FE5                     	;# 
  2926  0FE6                     	;# 
  2927  0FE7                     	;# 
  2928  0FE8                     	;# 
  2929  0FE9                     	;# 
  2930  0FEA                     	;# 
  2931  0FEB                     	;# 
  2932  0FED                     	;# 
  2933  0FEE                     	;# 
  2934  0FEF                     	;# 
  2935  0000                     	;# 
  2936  0001                     	;# 
  2937  0002                     	;# 
  2938  0003                     	;# 
  2939  0004                     	;# 
  2940  0005                     	;# 
  2941  0006                     	;# 
  2942  0007                     	;# 
  2943  0008                     	;# 
  2944  0009                     	;# 
  2945  000A                     	;# 
  2946  000B                     	;# 
  2947  000C                     	;# 
  2948  000D                     	;# 
  2949  000E                     	;# 
  2950  0010                     	;# 
  2951  0011                     	;# 
  2952  0012                     	;# 
  2953  0013                     	;# 
  2954  0014                     	;# 
  2955  0015                     	;# 
  2956  0015                     	;# 
  2957  0016                     	;# 
  2958  0016                     	;# 
  2959  0017                     	;# 
  2960  0018                     	;# 
  2961  0019                     	;# 
  2962  0019                     	;# 
  2963  001A                     	;# 
  2964  001B                     	;# 
  2965  001C                     	;# 
  2966  001D                     	;# 
  2967  001E                     	;# 
  2968  001F                     	;# 
  2969  008C                     	;# 
  2970  008D                     	;# 
  2971  008E                     	;# 
  2972  0090                     	;# 
  2973  0091                     	;# 
  2974  0092                     	;# 
  2975  0093                     	;# 
  2976  0094                     	;# 
  2977  0097                     	;# 
  2978  009B                     	;# 
  2979  009B                     	;# 
  2980  009C                     	;# 
  2981  009D                     	;# 
  2982  009E                     	;# 
  2983  009F                     	;# 
  2984  010C                     	;# 
  2985  010D                     	;# 
  2986  010E                     	;# 
  2987  0111                     	;# 
  2988  0112                     	;# 
  2989  0113                     	;# 
  2990  0114                     	;# 
  2991  0115                     	;# 
  2992  0116                     	;# 
  2993  0117                     	;# 
  2994  0118                     	;# 
  2995  0119                     	;# 
  2996  018C                     	;# 
  2997  018D                     	;# 
  2998  018E                     	;# 
  2999  0197                     	;# 
  3000  0199                     	;# 
  3001  0199                     	;# 
  3002  0199                     	;# 
  3003  019A                     	;# 
  3004  019A                     	;# 
  3005  019A                     	;# 
  3006  019B                     	;# 
  3007  019B                     	;# 
  3008  019B                     	;# 
  3009  019B                     	;# 
  3010  019B                     	;# 
  3011  019C                     	;# 
  3012  019C                     	;# 
  3013  019C                     	;# 
  3014  019D                     	;# 
  3015  019D                     	;# 
  3016  019D                     	;# 
  3017  019E                     	;# 
  3018  019E                     	;# 
  3019  019E                     	;# 
  3020  019F                     	;# 
  3021  019F                     	;# 
  3022  019F                     	;# 
  3023  019F                     	;# 
  3024  019F                     	;# 
  3025  020C                     	;# 
  3026  020D                     	;# 
  3027  020E                     	;# 
  3028  0211                     	;# 
  3029  0211                     	;# 
  3030  0212                     	;# 
  3031  0212                     	;# 
  3032  0213                     	;# 
  3033  0213                     	;# 
  3034  0214                     	;# 
  3035  0214                     	;# 
  3036  0215                     	;# 
  3037  0215                     	;# 
  3038  0215                     	;# 
  3039  0215                     	;# 
  3040  0216                     	;# 
  3041  0216                     	;# 
  3042  0217                     	;# 
  3043  0217                     	;# 
  3044  0219                     	;# 
  3045  021A                     	;# 
  3046  021B                     	;# 
  3047  021C                     	;# 
  3048  021D                     	;# 
  3049  021D                     	;# 
  3050  021E                     	;# 
  3051  021F                     	;# 
  3052  028C                     	;# 
  3053  028D                     	;# 
  3054  028E                     	;# 
  3055  0291                     	;# 
  3056  0291                     	;# 
  3057  0292                     	;# 
  3058  0293                     	;# 
  3059  0294                     	;# 
  3060  0295                     	;# 
  3061  0295                     	;# 
  3062  0296                     	;# 
  3063  0297                     	;# 
  3064  0298                     	;# 
  3065  029F                     	;# 
  3066  030C                     	;# 
  3067  030D                     	;# 
  3068  030E                     	;# 
  3069  0311                     	;# 
  3070  0311                     	;# 
  3071  0312                     	;# 
  3072  0313                     	;# 
  3073  0314                     	;# 
  3074  0315                     	;# 
  3075  0315                     	;# 
  3076  0316                     	;# 
  3077  0317                     	;# 
  3078  0318                     	;# 
  3079  038C                     	;# 
  3080  038D                     	;# 
  3081  038E                     	;# 
  3082  0391                     	;# 
  3083  0392                     	;# 
  3084  0393                     	;# 
  3085  0394                     	;# 
  3086  0395                     	;# 
  3087  0396                     	;# 
  3088  0397                     	;# 
  3089  0398                     	;# 
  3090  0399                     	;# 
  3091  039A                     	;# 
  3092  039C                     	;# 
  3093  039D                     	;# 
  3094  039E                     	;# 
  3095  039F                     	;# 
  3096  0411                     	;# 
  3097  0411                     	;# 
  3098  0412                     	;# 
  3099  0413                     	;# 
  3100  0414                     	;# 
  3101  0415                     	;# 
  3102  0416                     	;# 
  3103  0417                     	;# 
  3104  0418                     	;# 
  3105  0418                     	;# 
  3106  0419                     	;# 
  3107  041A                     	;# 
  3108  041B                     	;# 
  3109  041C                     	;# 
  3110  041D                     	;# 
  3111  041E                     	;# 
  3112  041F                     	;# 
  3113  0498                     	;# 
  3114  0498                     	;# 
  3115  0499                     	;# 
  3116  049A                     	;# 
  3117  049B                     	;# 
  3118  049B                     	;# 
  3119  049C                     	;# 
  3120  049D                     	;# 
  3121  049E                     	;# 
  3122  049F                     	;# 
  3123  0617                     	;# 
  3124  0618                     	;# 
  3125  0619                     	;# 
  3126  0619                     	;# 
  3127  061A                     	;# 
  3128  061B                     	;# 
  3129  061C                     	;# 
  3130  061C                     	;# 
  3131  061F                     	;# 
  3132  0691                     	;# 
  3133  0692                     	;# 
  3134  0693                     	;# 
  3135  0694                     	;# 
  3136  0695                     	;# 
  3137  0696                     	;# 
  3138  0697                     	;# 
  3139  0698                     	;# 
  3140  0699                     	;# 
  3141  0711                     	;# 
  3142  0712                     	;# 
  3143  0713                     	;# 
  3144  0714                     	;# 
  3145  0715                     	;# 
  3146  0716                     	;# 
  3147  0717                     	;# 
  3148  0718                     	;# 
  3149  0719                     	;# 
  3150  0891                     	;# 
  3151  0891                     	;# 
  3152  0891                     	;# 
  3153  0891                     	;# 
  3154  0891                     	;# 
  3155  0891                     	;# 
  3156  0892                     	;# 
  3157  0892                     	;# 
  3158  0892                     	;# 
  3159  0893                     	;# 
  3160  0893                     	;# 
  3161  0893                     	;# 
  3162  0893                     	;# 
  3163  0893                     	;# 
  3164  0893                     	;# 
  3165  0894                     	;# 
  3166  0894                     	;# 
  3167  0894                     	;# 
  3168  0895                     	;# 
  3169  0895                     	;# 
  3170  0895                     	;# 
  3171  0896                     	;# 
  3172  0896                     	;# 
  3173  0896                     	;# 
  3174  089B                     	;# 
  3175  0911                     	;# 
  3176  0912                     	;# 
  3177  0913                     	;# 
  3178  0914                     	;# 
  3179  0915                     	;# 
  3180  0916                     	;# 
  3181  0918                     	;# 
  3182  0919                     	;# 
  3183  091A                     	;# 
  3184  091B                     	;# 
  3185  091C                     	;# 
  3186  091D                     	;# 
  3187  091E                     	;# 
  3188  091F                     	;# 
  3189  0E0F                     	;# 
  3190  0E10                     	;# 
  3191  0E11                     	;# 
  3192  0E12                     	;# 
  3193  0E13                     	;# 
  3194  0E14                     	;# 
  3195  0E15                     	;# 
  3196  0E16                     	;# 
  3197  0E17                     	;# 
  3198  0E18                     	;# 
  3199  0E19                     	;# 
  3200  0E1A                     	;# 
  3201  0E1B                     	;# 
  3202  0E1C                     	;# 
  3203  0E1D                     	;# 
  3204  0E1E                     	;# 
  3205  0E1F                     	;# 
  3206  0E20                     	;# 
  3207  0E21                     	;# 
  3208  0E22                     	;# 
  3209  0E24                     	;# 
  3210  0E25                     	;# 
  3211  0E28                     	;# 
  3212  0E29                     	;# 
  3213  0E2A                     	;# 
  3214  0E2B                     	;# 
  3215  0E2C                     	;# 
  3216  0E2D                     	;# 
  3217  0E2E                     	;# 
  3218  0E2F                     	;# 
  3219  0E90                     	;# 
  3220  0E91                     	;# 
  3221  0E92                     	;# 
  3222  0E94                     	;# 
  3223  0E95                     	;# 
  3224  0E9C                     	;# 
  3225  0E9D                     	;# 
  3226  0E9E                     	;# 
  3227  0E9F                     	;# 
  3228  0EA0                     	;# 
  3229  0EA1                     	;# 
  3230  0EA2                     	;# 
  3231  0EA3                     	;# 
  3232  0EA4                     	;# 
  3233  0EA5                     	;# 
  3234  0EA6                     	;# 
  3235  0EA7                     	;# 
  3236  0F0F                     	;# 
  3237  0F10                     	;# 
  3238  0F11                     	;# 
  3239  0F12                     	;# 
  3240  0F13                     	;# 
  3241  0F14                     	;# 
  3242  0F15                     	;# 
  3243  0F16                     	;# 
  3244  0F17                     	;# 
  3245  0F18                     	;# 
  3246  0F19                     	;# 
  3247  0F1A                     	;# 
  3248  0F1B                     	;# 
  3249  0F1C                     	;# 
  3250  0F1D                     	;# 
  3251  0F1E                     	;# 
  3252  0F1F                     	;# 
  3253  0F20                     	;# 
  3254  0F21                     	;# 
  3255  0F22                     	;# 
  3256  0F23                     	;# 
  3257  0F24                     	;# 
  3258  0F25                     	;# 
  3259  0F26                     	;# 
  3260  0F27                     	;# 
  3261  0F28                     	;# 
  3262  0F29                     	;# 
  3263  0F2A                     	;# 
  3264  0F2B                     	;# 
  3265  0F2C                     	;# 
  3266  0F2D                     	;# 
  3267  0F2E                     	;# 
  3268  0F2F                     	;# 
  3269  0F30                     	;# 
  3270  0F31                     	;# 
  3271  0F32                     	;# 
  3272  0F33                     	;# 
  3273  0F34                     	;# 
  3274  0F35                     	;# 
  3275  0F36                     	;# 
  3276  0F37                     	;# 
  3277  0FE4                     	;# 
  3278  0FE5                     	;# 
  3279  0FE6                     	;# 
  3280  0FE7                     	;# 
  3281  0FE8                     	;# 
  3282  0FE9                     	;# 
  3283  0FEA                     	;# 
  3284  0FEB                     	;# 
  3285  0FED                     	;# 
  3286  0FEE                     	;# 
  3287  0FEF                     	;# 
  3288  0000                     	;# 
  3289  0001                     	;# 
  3290  0002                     	;# 
  3291  0003                     	;# 
  3292  0004                     	;# 
  3293  0005                     	;# 
  3294  0006                     	;# 
  3295  0007                     	;# 
  3296  0008                     	;# 
  3297  0009                     	;# 
  3298  000A                     	;# 
  3299  000B                     	;# 
  3300  000C                     	;# 
  3301  000D                     	;# 
  3302  000E                     	;# 
  3303  0010                     	;# 
  3304  0011                     	;# 
  3305  0012                     	;# 
  3306  0013                     	;# 
  3307  0014                     	;# 
  3308  0015                     	;# 
  3309  0015                     	;# 
  3310  0016                     	;# 
  3311  0016                     	;# 
  3312  0017                     	;# 
  3313  0018                     	;# 
  3314  0019                     	;# 
  3315  0019                     	;# 
  3316  001A                     	;# 
  3317  001B                     	;# 
  3318  001C                     	;# 
  3319  001D                     	;# 
  3320  001E                     	;# 
  3321  001F                     	;# 
  3322  008C                     	;# 
  3323  008D                     	;# 
  3324  008E                     	;# 
  3325  0090                     	;# 
  3326  0091                     	;# 
  3327  0092                     	;# 
  3328  0093                     	;# 
  3329  0094                     	;# 
  3330  0097                     	;# 
  3331  009B                     	;# 
  3332  009B                     	;# 
  3333  009C                     	;# 
  3334  009D                     	;# 
  3335  009E                     	;# 
  3336  009F                     	;# 
  3337  010C                     	;# 
  3338  010D                     	;# 
  3339  010E                     	;# 
  3340  0111                     	;# 
  3341  0112                     	;# 
  3342  0113                     	;# 
  3343  0114                     	;# 
  3344  0115                     	;# 
  3345  0116                     	;# 
  3346  0117                     	;# 
  3347  0118                     	;# 
  3348  0119                     	;# 
  3349  018C                     	;# 
  3350  018D                     	;# 
  3351  018E                     	;# 
  3352  0197                     	;# 
  3353  0199                     	;# 
  3354  0199                     	;# 
  3355  0199                     	;# 
  3356  019A                     	;# 
  3357  019A                     	;# 
  3358  019A                     	;# 
  3359  019B                     	;# 
  3360  019B                     	;# 
  3361  019B                     	;# 
  3362  019B                     	;# 
  3363  019B                     	;# 
  3364  019C                     	;# 
  3365  019C                     	;# 
  3366  019C                     	;# 
  3367  019D                     	;# 
  3368  019D                     	;# 
  3369  019D                     	;# 
  3370  019E                     	;# 
  3371  019E                     	;# 
  3372  019E                     	;# 
  3373  019F                     	;# 
  3374  019F                     	;# 
  3375  019F                     	;# 
  3376  019F                     	;# 
  3377  019F                     	;# 
  3378  020C                     	;# 
  3379  020D                     	;# 
  3380  020E                     	;# 
  3381  0211                     	;# 
  3382  0211                     	;# 
  3383  0212                     	;# 
  3384  0212                     	;# 
  3385  0213                     	;# 
  3386  0213                     	;# 
  3387  0214                     	;# 
  3388  0214                     	;# 
  3389  0215                     	;# 
  3390  0215                     	;# 
  3391  0215                     	;# 
  3392  0215                     	;# 
  3393  0216                     	;# 
  3394  0216                     	;# 
  3395  0217                     	;# 
  3396  0217                     	;# 
  3397  0219                     	;# 
  3398  021A                     	;# 
  3399  021B                     	;# 
  3400  021C                     	;# 
  3401  021D                     	;# 
  3402  021D                     	;# 
  3403  021E                     	;# 
  3404  021F                     	;# 
  3405  028C                     	;# 
  3406  028D                     	;# 
  3407  028E                     	;# 
  3408  0291                     	;# 
  3409  0291                     	;# 
  3410  0292                     	;# 
  3411  0293                     	;# 
  3412  0294                     	;# 
  3413  0295                     	;# 
  3414  0295                     	;# 
  3415  0296                     	;# 
  3416  0297                     	;# 
  3417  0298                     	;# 
  3418  029F                     	;# 
  3419  030C                     	;# 
  3420  030D                     	;# 
  3421  030E                     	;# 
  3422  0311                     	;# 
  3423  0311                     	;# 
  3424  0312                     	;# 
  3425  0313                     	;# 
  3426  0314                     	;# 
  3427  0315                     	;# 
  3428  0315                     	;# 
  3429  0316                     	;# 
  3430  0317                     	;# 
  3431  0318                     	;# 
  3432  038C                     	;# 
  3433  038D                     	;# 
  3434  038E                     	;# 
  3435  0391                     	;# 
  3436  0392                     	;# 
  3437  0393                     	;# 
  3438  0394                     	;# 
  3439  0395                     	;# 
  3440  0396                     	;# 
  3441  0397                     	;# 
  3442  0398                     	;# 
  3443  0399                     	;# 
  3444  039A                     	;# 
  3445  039C                     	;# 
  3446  039D                     	;# 
  3447  039E                     	;# 
  3448  039F                     	;# 
  3449  0411                     	;# 
  3450  0411                     	;# 
  3451  0412                     	;# 
  3452  0413                     	;# 
  3453  0414                     	;# 
  3454  0415                     	;# 
  3455  0416                     	;# 
  3456  0417                     	;# 
  3457  0418                     	;# 
  3458  0418                     	;# 
  3459  0419                     	;# 
  3460  041A                     	;# 
  3461  041B                     	;# 
  3462  041C                     	;# 
  3463  041D                     	;# 
  3464  041E                     	;# 
  3465  041F                     	;# 
  3466  0498                     	;# 
  3467  0498                     	;# 
  3468  0499                     	;# 
  3469  049A                     	;# 
  3470  049B                     	;# 
  3471  049B                     	;# 
  3472  049C                     	;# 
  3473  049D                     	;# 
  3474  049E                     	;# 
  3475  049F                     	;# 
  3476  0617                     	;# 
  3477  0618                     	;# 
  3478  0619                     	;# 
  3479  0619                     	;# 
  3480  061A                     	;# 
  3481  061B                     	;# 
  3482  061C                     	;# 
  3483  061C                     	;# 
  3484  061F                     	;# 
  3485  0691                     	;# 
  3486  0692                     	;# 
  3487  0693                     	;# 
  3488  0694                     	;# 
  3489  0695                     	;# 
  3490  0696                     	;# 
  3491  0697                     	;# 
  3492  0698                     	;# 
  3493  0699                     	;# 
  3494  0711                     	;# 
  3495  0712                     	;# 
  3496  0713                     	;# 
  3497  0714                     	;# 
  3498  0715                     	;# 
  3499  0716                     	;# 
  3500  0717                     	;# 
  3501  0718                     	;# 
  3502  0719                     	;# 
  3503  0891                     	;# 
  3504  0891                     	;# 
  3505  0891                     	;# 
  3506  0891                     	;# 
  3507  0891                     	;# 
  3508  0891                     	;# 
  3509  0892                     	;# 
  3510  0892                     	;# 
  3511  0892                     	;# 
  3512  0893                     	;# 
  3513  0893                     	;# 
  3514  0893                     	;# 
  3515  0893                     	;# 
  3516  0893                     	;# 
  3517  0893                     	;# 
  3518  0894                     	;# 
  3519  0894                     	;# 
  3520  0894                     	;# 
  3521  0895                     	;# 
  3522  0895                     	;# 
  3523  0895                     	;# 
  3524  0896                     	;# 
  3525  0896                     	;# 
  3526  0896                     	;# 
  3527  089B                     	;# 
  3528  0911                     	;# 
  3529  0912                     	;# 
  3530  0913                     	;# 
  3531  0914                     	;# 
  3532  0915                     	;# 
  3533  0916                     	;# 
  3534  0918                     	;# 
  3535  0919                     	;# 
  3536  091A                     	;# 
  3537  091B                     	;# 
  3538  091C                     	;# 
  3539  091D                     	;# 
  3540  091E                     	;# 
  3541  091F                     	;# 
  3542  0E0F                     	;# 
  3543  0E10                     	;# 
  3544  0E11                     	;# 
  3545  0E12                     	;# 
  3546  0E13                     	;# 
  3547  0E14                     	;# 
  3548  0E15                     	;# 
  3549  0E16                     	;# 
  3550  0E17                     	;# 
  3551  0E18                     	;# 
  3552  0E19                     	;# 
  3553  0E1A                     	;# 
  3554  0E1B                     	;# 
  3555  0E1C                     	;# 
  3556  0E1D                     	;# 
  3557  0E1E                     	;# 
  3558  0E1F                     	;# 
  3559  0E20                     	;# 
  3560  0E21                     	;# 
  3561  0E22                     	;# 
  3562  0E24                     	;# 
  3563  0E25                     	;# 
  3564  0E28                     	;# 
  3565  0E29                     	;# 
  3566  0E2A                     	;# 
  3567  0E2B                     	;# 
  3568  0E2C                     	;# 
  3569  0E2D                     	;# 
  3570  0E2E                     	;# 
  3571  0E2F                     	;# 
  3572  0E90                     	;# 
  3573  0E91                     	;# 
  3574  0E92                     	;# 
  3575  0E94                     	;# 
  3576  0E95                     	;# 
  3577  0E9C                     	;# 
  3578  0E9D                     	;# 
  3579  0E9E                     	;# 
  3580  0E9F                     	;# 
  3581  0EA0                     	;# 
  3582  0EA1                     	;# 
  3583  0EA2                     	;# 
  3584  0EA3                     	;# 
  3585  0EA4                     	;# 
  3586  0EA5                     	;# 
  3587  0EA6                     	;# 
  3588  0EA7                     	;# 
  3589  0F0F                     	;# 
  3590  0F10                     	;# 
  3591  0F11                     	;# 
  3592  0F12                     	;# 
  3593  0F13                     	;# 
  3594  0F14                     	;# 
  3595  0F15                     	;# 
  3596  0F16                     	;# 
  3597  0F17                     	;# 
  3598  0F18                     	;# 
  3599  0F19                     	;# 
  3600  0F1A                     	;# 
  3601  0F1B                     	;# 
  3602  0F1C                     	;# 
  3603  0F1D                     	;# 
  3604  0F1E                     	;# 
  3605  0F1F                     	;# 
  3606  0F20                     	;# 
  3607  0F21                     	;# 
  3608  0F22                     	;# 
  3609  0F23                     	;# 
  3610  0F24                     	;# 
  3611  0F25                     	;# 
  3612  0F26                     	;# 
  3613  0F27                     	;# 
  3614  0F28                     	;# 
  3615  0F29                     	;# 
  3616  0F2A                     	;# 
  3617  0F2B                     	;# 
  3618  0F2C                     	;# 
  3619  0F2D                     	;# 
  3620  0F2E                     	;# 
  3621  0F2F                     	;# 
  3622  0F30                     	;# 
  3623  0F31                     	;# 
  3624  0F32                     	;# 
  3625  0F33                     	;# 
  3626  0F34                     	;# 
  3627  0F35                     	;# 
  3628  0F36                     	;# 
  3629  0F37                     	;# 
  3630  0FE4                     	;# 
  3631  0FE5                     	;# 
  3632  0FE6                     	;# 
  3633  0FE7                     	;# 
  3634  0FE8                     	;# 
  3635  0FE9                     	;# 
  3636  0FEA                     	;# 
  3637  0FEB                     	;# 
  3638  0FED                     	;# 
  3639  0FEE                     	;# 
  3640  0FEF                     	;# 
  3641  0000                     	;# 
  3642  0001                     	;# 
  3643  0002                     	;# 
  3644  0003                     	;# 
  3645  0004                     	;# 
  3646  0005                     	;# 
  3647  0006                     	;# 
  3648  0007                     	;# 
  3649  0008                     	;# 
  3650  0009                     	;# 
  3651  000A                     	;# 
  3652  000B                     	;# 
  3653  000C                     	;# 
  3654  000D                     	;# 
  3655  000E                     	;# 
  3656  0010                     	;# 
  3657  0011                     	;# 
  3658  0012                     	;# 
  3659  0013                     	;# 
  3660  0014                     	;# 
  3661  0015                     	;# 
  3662  0015                     	;# 
  3663  0016                     	;# 
  3664  0016                     	;# 
  3665  0017                     	;# 
  3666  0018                     	;# 
  3667  0019                     	;# 
  3668  0019                     	;# 
  3669  001A                     	;# 
  3670  001B                     	;# 
  3671  001C                     	;# 
  3672  001D                     	;# 
  3673  001E                     	;# 
  3674  001F                     	;# 
  3675  008C                     	;# 
  3676  008D                     	;# 
  3677  008E                     	;# 
  3678  0090                     	;# 
  3679  0091                     	;# 
  3680  0092                     	;# 
  3681  0093                     	;# 
  3682  0094                     	;# 
  3683  0097                     	;# 
  3684  009B                     	;# 
  3685  009B                     	;# 
  3686  009C                     	;# 
  3687  009D                     	;# 
  3688  009E                     	;# 
  3689  009F                     	;# 
  3690  010C                     	;# 
  3691  010D                     	;# 
  3692  010E                     	;# 
  3693  0111                     	;# 
  3694  0112                     	;# 
  3695  0113                     	;# 
  3696  0114                     	;# 
  3697  0115                     	;# 
  3698  0116                     	;# 
  3699  0117                     	;# 
  3700  0118                     	;# 
  3701  0119                     	;# 
  3702  018C                     	;# 
  3703  018D                     	;# 
  3704  018E                     	;# 
  3705  0197                     	;# 
  3706  0199                     	;# 
  3707  0199                     	;# 
  3708  0199                     	;# 
  3709  019A                     	;# 
  3710  019A                     	;# 
  3711  019A                     	;# 
  3712  019B                     	;# 
  3713  019B                     	;# 
  3714  019B                     	;# 
  3715  019B                     	;# 
  3716  019B                     	;# 
  3717  019C                     	;# 
  3718  019C                     	;# 
  3719  019C                     	;# 
  3720  019D                     	;# 
  3721  019D                     	;# 
  3722  019D                     	;# 
  3723  019E                     	;# 
  3724  019E                     	;# 
  3725  019E                     	;# 
  3726  019F                     	;# 
  3727  019F                     	;# 
  3728  019F                     	;# 
  3729  019F                     	;# 
  3730  019F                     	;# 
  3731  020C                     	;# 
  3732  020D                     	;# 
  3733  020E                     	;# 
  3734  0211                     	;# 
  3735  0211                     	;# 
  3736  0212                     	;# 
  3737  0212                     	;# 
  3738  0213                     	;# 
  3739  0213                     	;# 
  3740  0214                     	;# 
  3741  0214                     	;# 
  3742  0215                     	;# 
  3743  0215                     	;# 
  3744  0215                     	;# 
  3745  0215                     	;# 
  3746  0216                     	;# 
  3747  0216                     	;# 
  3748  0217                     	;# 
  3749  0217                     	;# 
  3750  0219                     	;# 
  3751  021A                     	;# 
  3752  021B                     	;# 
  3753  021C                     	;# 
  3754  021D                     	;# 
  3755  021D                     	;# 
  3756  021E                     	;# 
  3757  021F                     	;# 
  3758  028C                     	;# 
  3759  028D                     	;# 
  3760  028E                     	;# 
  3761  0291                     	;# 
  3762  0291                     	;# 
  3763  0292                     	;# 
  3764  0293                     	;# 
  3765  0294                     	;# 
  3766  0295                     	;# 
  3767  0295                     	;# 
  3768  0296                     	;# 
  3769  0297                     	;# 
  3770  0298                     	;# 
  3771  029F                     	;# 
  3772  030C                     	;# 
  3773  030D                     	;# 
  3774  030E                     	;# 
  3775  0311                     	;# 
  3776  0311                     	;# 
  3777  0312                     	;# 
  3778  0313                     	;# 
  3779  0314                     	;# 
  3780  0315                     	;# 
  3781  0315                     	;# 
  3782  0316                     	;# 
  3783  0317                     	;# 
  3784  0318                     	;# 
  3785  038C                     	;# 
  3786  038D                     	;# 
  3787  038E                     	;# 
  3788  0391                     	;# 
  3789  0392                     	;# 
  3790  0393                     	;# 
  3791  0394                     	;# 
  3792  0395                     	;# 
  3793  0396                     	;# 
  3794  0397                     	;# 
  3795  0398                     	;# 
  3796  0399                     	;# 
  3797  039A                     	;# 
  3798  039C                     	;# 
  3799  039D                     	;# 
  3800  039E                     	;# 
  3801  039F                     	;# 
  3802  0411                     	;# 
  3803  0411                     	;# 
  3804  0412                     	;# 
  3805  0413                     	;# 
  3806  0414                     	;# 
  3807  0415                     	;# 
  3808  0416                     	;# 
  3809  0417                     	;# 
  3810  0418                     	;# 
  3811  0418                     	;# 
  3812  0419                     	;# 
  3813  041A                     	;# 
  3814  041B                     	;# 
  3815  041C                     	;# 
  3816  041D                     	;# 
  3817  041E                     	;# 
  3818  041F                     	;# 
  3819  0498                     	;# 
  3820  0498                     	;# 
  3821  0499                     	;# 
  3822  049A                     	;# 
  3823  049B                     	;# 
  3824  049B                     	;# 
  3825  049C                     	;# 
  3826  049D                     	;# 
  3827  049E                     	;# 
  3828  049F                     	;# 
  3829  0617                     	;# 
  3830  0618                     	;# 
  3831  0619                     	;# 
  3832  0619                     	;# 
  3833  061A                     	;# 
  3834  061B                     	;# 
  3835  061C                     	;# 
  3836  061C                     	;# 
  3837  061F                     	;# 
  3838  0691                     	;# 
  3839  0692                     	;# 
  3840  0693                     	;# 
  3841  0694                     	;# 
  3842  0695                     	;# 
  3843  0696                     	;# 
  3844  0697                     	;# 
  3845  0698                     	;# 
  3846  0699                     	;# 
  3847  0711                     	;# 
  3848  0712                     	;# 
  3849  0713                     	;# 
  3850  0714                     	;# 
  3851  0715                     	;# 
  3852  0716                     	;# 
  3853  0717                     	;# 
  3854  0718                     	;# 
  3855  0719                     	;# 
  3856  0891                     	;# 
  3857  0891                     	;# 
  3858  0891                     	;# 
  3859  0891                     	;# 
  3860  0891                     	;# 
  3861  0891                     	;# 
  3862  0892                     	;# 
  3863  0892                     	;# 
  3864  0892                     	;# 
  3865  0893                     	;# 
  3866  0893                     	;# 
  3867  0893                     	;# 
  3868  0893                     	;# 
  3869  0893                     	;# 
  3870  0893                     	;# 
  3871  0894                     	;# 
  3872  0894                     	;# 
  3873  0894                     	;# 
  3874  0895                     	;# 
  3875  0895                     	;# 
  3876  0895                     	;# 
  3877  0896                     	;# 
  3878  0896                     	;# 
  3879  0896                     	;# 
  3880  089B                     	;# 
  3881  0911                     	;# 
  3882  0912                     	;# 
  3883  0913                     	;# 
  3884  0914                     	;# 
  3885  0915                     	;# 
  3886  0916                     	;# 
  3887  0918                     	;# 
  3888  0919                     	;# 
  3889  091A                     	;# 
  3890  091B                     	;# 
  3891  091C                     	;# 
  3892  091D                     	;# 
  3893  091E                     	;# 
  3894  091F                     	;# 
  3895  0E0F                     	;# 
  3896  0E10                     	;# 
  3897  0E11                     	;# 
  3898  0E12                     	;# 
  3899  0E13                     	;# 
  3900  0E14                     	;# 
  3901  0E15                     	;# 
  3902  0E16                     	;# 
  3903  0E17                     	;# 
  3904  0E18                     	;# 
  3905  0E19                     	;# 
  3906  0E1A                     	;# 
  3907  0E1B                     	;# 
  3908  0E1C                     	;# 
  3909  0E1D                     	;# 
  3910  0E1E                     	;# 
  3911  0E1F                     	;# 
  3912  0E20                     	;# 
  3913  0E21                     	;# 
  3914  0E22                     	;# 
  3915  0E24                     	;# 
  3916  0E25                     	;# 
  3917  0E28                     	;# 
  3918  0E29                     	;# 
  3919  0E2A                     	;# 
  3920  0E2B                     	;# 
  3921  0E2C                     	;# 
  3922  0E2D                     	;# 
  3923  0E2E                     	;# 
  3924  0E2F                     	;# 
  3925  0E90                     	;# 
  3926  0E91                     	;# 
  3927  0E92                     	;# 
  3928  0E94                     	;# 
  3929  0E95                     	;# 
  3930  0E9C                     	;# 
  3931  0E9D                     	;# 
  3932  0E9E                     	;# 
  3933  0E9F                     	;# 
  3934  0EA0                     	;# 
  3935  0EA1                     	;# 
  3936  0EA2                     	;# 
  3937  0EA3                     	;# 
  3938  0EA4                     	;# 
  3939  0EA5                     	;# 
  3940  0EA6                     	;# 
  3941  0EA7                     	;# 
  3942  0F0F                     	;# 
  3943  0F10                     	;# 
  3944  0F11                     	;# 
  3945  0F12                     	;# 
  3946  0F13                     	;# 
  3947  0F14                     	;# 
  3948  0F15                     	;# 
  3949  0F16                     	;# 
  3950  0F17                     	;# 
  3951  0F18                     	;# 
  3952  0F19                     	;# 
  3953  0F1A                     	;# 
  3954  0F1B                     	;# 
  3955  0F1C                     	;# 
  3956  0F1D                     	;# 
  3957  0F1E                     	;# 
  3958  0F1F                     	;# 
  3959  0F20                     	;# 
  3960  0F21                     	;# 
  3961  0F22                     	;# 
  3962  0F23                     	;# 
  3963  0F24                     	;# 
  3964  0F25                     	;# 
  3965  0F26                     	;# 
  3966  0F27                     	;# 
  3967  0F28                     	;# 
  3968  0F29                     	;# 
  3969  0F2A                     	;# 
  3970  0F2B                     	;# 
  3971  0F2C                     	;# 
  3972  0F2D                     	;# 
  3973  0F2E                     	;# 
  3974  0F2F                     	;# 
  3975  0F30                     	;# 
  3976  0F31                     	;# 
  3977  0F32                     	;# 
  3978  0F33                     	;# 
  3979  0F34                     	;# 
  3980  0F35                     	;# 
  3981  0F36                     	;# 
  3982  0F37                     	;# 
  3983  0FE4                     	;# 
  3984  0FE5                     	;# 
  3985  0FE6                     	;# 
  3986  0FE7                     	;# 
  3987  0FE8                     	;# 
  3988  0FE9                     	;# 
  3989  0FEA                     	;# 
  3990  0FEB                     	;# 
  3991  0FED                     	;# 
  3992  0FEE                     	;# 
  3993  0FEF                     	;# 
  3994                           
  3995                           	psect	idataBANK0
  3996  0002                     __pidataBANK0:	
  3997                           
  3998                           ;initializer for _setpoint
  3999  0002  34C8               	retlw	200
  4000  0003  3400               	retlw	0
  4001                           
  4002                           	psect	idataBANK1
  4003  0C35                     __pidataBANK1:	
  4004                           
  4005                           ;initializer for _kp
  4006  0C35  3400               	retlw	0
  4007  0C36  3480               	retlw	128
  4008  0C37  343F               	retlw	63
  4009                           
  4010                           ;initializer for _ki
  4011  0C38  34D7               	retlw	215
  4012  0C39  34A3               	retlw	163
  4013  0C3A  343B               	retlw	59
  4014                           
  4015                           	psect	stringtext1
  4016  1000                     __pstringtext1:	
  4017  1000                     _dpowers:	
  4018  1000  3401               	retlw	1
  4019  1001  3400               	retlw	0
  4020  1002  340A               	retlw	10
  4021  1003  3400               	retlw	0
  4022  1004  3464               	retlw	100
  4023  1005  3400               	retlw	0
  4024  1006  34E8               	retlw	232
  4025  1007  3403               	retlw	3
  4026  1008  3410               	retlw	16
  4027  1009  3427               	retlw	39
  4028  100A                     __end_of_dpowers:	
  4029                           
  4030                           	psect	nvBANK0
  4031  006F                     __pnvBANK0:	
  4032  006F                     _eusartTxBufferRemaining:	
  4033  006F                     	ds	1
  4034  000B                     _INTCONbits	set	11
  4035  0017                     _T0CON0bits	set	23
  4036  0010                     _PIR0bits	set	16
  4037  0015                     _TMR0L	set	21
  4038  0016                     _TMR0H	set	22
  4039  0018                     _T0CON1	set	24
  4040  0017                     _T0CON0	set	23
  4041  001F                     _T2CONbits	set	31
  4042  0011                     _PIR1bits	set	17
  4043  001D                     _TMR2	set	29
  4044  001E                     _PR2	set	30
  4045  001F                     _T2CON	set	31
  4046  005F                     _GIE	set	95
  4047  0097                     _WDTCON	set	151
  4048  009D                     _ADCON0bits	set	157
  4049  009C                     _ADRESH	set	156
  4050  009B                     _ADRESL	set	155
  4051  009F                     _ADACT	set	159
  4052  009E                     _ADCON1	set	158
  4053  009D                     _ADCON0	set	157
  4054  008E                     _TRISC	set	142
  4055  008D                     _TRISB	set	141
  4056  008C                     _TRISA	set	140
  4057  0091                     _PIE1bits	set	145
  4058  010E                     _LATC	set	270
  4059  010D                     _LATB	set	269
  4060  010C                     _LATA	set	268
  4061  018C                     _ANSELA	set	396
  4062  018D                     _ANSELB	set	397
  4063  018E                     _ANSELC	set	398
  4064  0199                     _RC1REG	set	409
  4065  019D                     _RC1STAbits	set	413
  4066  019A                     _TX1REG	set	410
  4067  019C                     _SP1BRGH	set	412
  4068  019B                     _SP1BRGL	set	411
  4069  019E                     _TX1STA	set	414
  4070  019D                     _RC1STA	set	413
  4071  019F                     _BAUD1CON	set	415
  4072  020E                     _WPUC	set	526
  4073  020C                     _WPUA	set	524
  4074  020D                     _WPUB	set	525
  4075  028E                     _ODCONC	set	654
  4076  028D                     _ODCONB	set	653
  4077  028C                     _ODCONA	set	652
  4078  061F                     _PWMTMRSbits	set	1567
  4079  0617                     _PWM5DCL	set	1559
  4080  0618                     _PWM5DCH	set	1560
  4081  0619                     _PWM5CON	set	1561
  4082  091E                     _OSCTUNE	set	2334
  4083  091F                     _OSCFRQ	set	2335
  4084  091D                     _OSCEN	set	2333
  4085  091B                     _OSCCON3	set	2331
  4086  0919                     _OSCCON1	set	2329
  4087  0E24                     _RXPPSbits	set	3620
  4088  0E0F                     _PPSLOCKbits	set	3599
  4089  0E0F                     _PPSLOCK	set	3599
  4090  0E9F                     _RB7PPSbits	set	3743
  4091  0EA1                     _RC1PPSbits	set	3745
  4092                           
  4093                           	psect	stringtext2
  4094  100A                     __pstringtext2:	
  4095  100A                     STR_1:	
  4096  100A  3473               	retlw	115	;'s'
  4097  100B  3474               	retlw	116	;'t'
  4098  100C  3461               	retlw	97	;'a'
  4099  100D  3472               	retlw	114	;'r'
  4100  100E  3474               	retlw	116	;'t'
  4101  100F  3400               	retlw	0
  4102                           
  4103                           	psect	stringtext3
  4104  1010                     __pstringtext3:	
  4105  1010                     STR_2:	
  4106  1010  3425               	retlw	37	;'%'
  4107  1011  3464               	retlw	100	;'d'
  4108  1012  3400               	retlw	0
  4109                           
  4110                           	psect	stringtext4
  4111  1013                     __pstringtext4:	
  4112  1013                     STR_3:	
  4113  1013  343E               	retlw	62	;'>'
  4114  1014  3400               	retlw	0
  4115                           
  4116                           	psect	stringtext5
  4117  0000                     __pstringtext5:	
  4118                           
  4119                           ; #config settings
  4120  0000                     
  4121                           	psect	cinit
  4122  0032                     start_initialization:	
  4123  0032                     __initialization:	
  4124                           
  4125                           ; Initialize objects allocated to BANK0
  4126  0032  3180  2002  3180   	fcall	__pidataBANK0	;fetch initializer
  4127  0035  00ED               	movwf	__pdataBANK0& (0+127)
  4128  0036  3180  2003  3180   	fcall	__pidataBANK0+1	;fetch initializer
  4129  0039  00EE               	movwf	(__pdataBANK0+1)& (0+127)
  4130                           
  4131                           ; Initialize objects allocated to BANK1
  4132  003A  3035               	movlw	low __pidataBANK1
  4133  003B  0084               	movwf	4
  4134  003C  308C               	movlw	(high __pidataBANK1)| (0+128)
  4135  003D  0085               	movwf	5
  4136  003E  0021               	movlb	1	; select bank1
  4137  003F  0012               	moviw fsr0++
  4138  0040  00D0               	movwf	__pdataBANK1& (0+127)
  4139  0041  0012               	moviw fsr0++
  4140  0042  00D1               	movwf	(__pdataBANK1+1)& (0+127)
  4141  0043  0012               	moviw fsr0++
  4142  0044  00D2               	movwf	(__pdataBANK1+2)& (0+127)
  4143  0045  0012               	moviw fsr0++
  4144  0046  00D3               	movwf	(__pdataBANK1+3)& (0+127)
  4145  0047  0012               	moviw fsr0++
  4146  0048  00D4               	movwf	(__pdataBANK1+4)& (0+127)
  4147  0049  0012               	moviw fsr0++
  4148  004A  00D5               	movwf	(__pdataBANK1+5)& (0+127)
  4149                           
  4150                           ; Clear objects allocated to COMMON
  4151  004B  01F8               	clrf	__pbssCOMMON& (0+127)
  4152  004C  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  4153  004D  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  4154                           
  4155                           ; Clear objects allocated to BANK0
  4156  004E  305B               	movlw	low __pbssBANK0
  4157  004F  0084               	movwf	4
  4158  0050  3000               	movlw	high __pbssBANK0
  4159  0051  0085               	movwf	5
  4160  0052  3012               	movlw	18
  4161  0053  318C  242F  3180   	fcall	clear_ram0
  4162                           
  4163                           ; Clear objects allocated to BANK1
  4164  0056  30A0               	movlw	low __pbssBANK1
  4165  0057  0084               	movwf	4
  4166  0058  3000               	movlw	high __pbssBANK1
  4167  0059  0085               	movwf	5
  4168  005A  3030               	movlw	48
  4169  005B  318C  242F         	fcall	clear_ram0
  4170  005D                     end_of_initialization:	
  4171                           ;End of C runtime variable initialization code
  4172                           
  4173  005D                     __end_of__initialization:	
  4174  005D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4175  005E  0020               	movlb	0
  4176  005F  318E  2E23         	ljmp	_main	;jump to C main() function
  4177                           
  4178                           	psect	bssCOMMON
  4179  0078                     __pbssCOMMON:	
  4180  0078                     _eusartRxCount:	
  4181  0078                     	ds	1
  4182  0079                     _eusartTxTail:	
  4183  0079                     	ds	1
  4184  007A                     _eusartTxHead:	
  4185  007A                     	ds	1
  4186                           
  4187                           	psect	bssBANK0
  4188  005B                     __pbssBANK0:	
  4189  005B                     _I:	
  4190  005B                     	ds	3
  4191  005E                     _index:	
  4192  005E                     	ds	2
  4193  0060                     UART@sensorHeight:	
  4194  0060                     	ds	2
  4195  0062                     _dutycycle:	
  4196  0062                     	ds	2
  4197  0064                     _error:	
  4198  0064                     	ds	2
  4199  0066                     _sensorHeight:	
  4200  0066                     	ds	2
  4201  0068                     _ADC_result:	
  4202  0068                     	ds	2
  4203  006A                     _command:	
  4204  006A                     	ds	1
  4205  006B                     _eusartRxTail:	
  4206  006B                     	ds	1
  4207  006C                     _eusartRxHead:	
  4208  006C                     	ds	1
  4209                           
  4210                           	psect	dataBANK0
  4211  006D                     __pdataBANK0:	
  4212  006D                     _setpoint:	
  4213  006D                     	ds	2
  4214                           
  4215                           	psect	bssBANK1
  4216  00A0                     __pbssBANK1:	
  4217  00A0                     _data:	
  4218  00A0                     	ds	8
  4219  00A8                     _eusartRxBuffer:	
  4220  00A8                     	ds	8
  4221  00B0                     _eusartTxBuffer:	
  4222  00B0                     	ds	8
  4223  00B8                     UART@kp:	
  4224  00B8                     	ds	3
  4225  00BB                     UART@ki:	
  4226  00BB                     	ds	3
  4227  00BE                     _integral:	
  4228  00BE                     	ds	3
  4229  00C1                     _printCycle:	
  4230  00C1                     	ds	2
  4231  00C3                     UART@setpoint:	
  4232  00C3                     	ds	2
  4233  00C5                     _TMR0_InterruptHandler:	
  4234  00C5                     	ds	2
  4235  00C7                     _TMR2_InterruptHandler:	
  4236  00C7                     	ds	2
  4237  00C9                     _value:	
  4238  00C9                     	ds	7
  4239                           
  4240                           	psect	dataBANK1
  4241  00D0                     __pdataBANK1:	
  4242  00D0                     _kp:	
  4243  00D0                     	ds	3
  4244  00D3                     _ki:	
  4245  00D3                     	ds	3
  4246                           
  4247                           	psect	clrtext
  4248  0C2F                     clear_ram0:	
  4249                           ;	Called with FSR0 containing the base address, and
  4250                           ;	WREG with the size to clear
  4251                           
  4252  0C2F  0064               	clrwdt	;clear the watchdog before getting into this loop
  4253  0C30                     clrloop0:	
  4254  0C30  0180               	clrf	0	;clear RAM location pointed to by FSR
  4255  0C31  3101               	addfsr 0,1
  4256  0C32  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4257  0C33  2C30               	goto	clrloop0	;have we reached the end yet?
  4258  0C34  3400               	retlw	0	;all done for this memory range, return
  4259                           
  4260                           	psect	cstackBANK1
  4261  00D6                     __pcstackBANK1:	
  4262  00D6                     main@threshold:	
  4263                           
  4264                           ; 2 bytes @ 0x0
  4265  00D6                     	ds	2
  4266                           
  4267                           	psect	cstackCOMMON
  4268  0070                     __pcstackCOMMON:	
  4269  0070                     ?_isspace:	
  4270  0070                     ?_isdigit:	
  4271                           ; 1 bit 
  4272                           
  4273  0070                     ?_TMR2_StartTimer:	
  4274                           ; 1 bit 
  4275                           
  4276  0070                     ?_TMR0_StartTimer:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279  0070                     ?_OSCILLATOR_Initialize:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282  0070                     ?_WDT_Initialize:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0070                     ?_PWM5_Initialize:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0070                     ?_PI:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0070                     ?_Java:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0070                     ?_toupper:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ?_TMR2_Initialize:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ?_EUSART_Initialize:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ?_EUSART_Read:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ?_EUSART_Write:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_putch:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ?_EUSART_Transmit_ISR:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ??_EUSART_Transmit_ISR:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ?_EUSART_Receive_ISR:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ??_EUSART_Receive_ISR:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ?_TMR0_Initialize:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ?_TMR0_HasOverflowOccured:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_PIN_MANAGER_Initialize:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_ADC_Initialize:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ?_ADC_SelectChannel:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_ADC_StartConversion:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0070                     ?_ADC_ISR:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0070                     ??_ADC_ISR:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0070                     ?_SYSTEM_Initialize:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0070                     ?_INTERRUPT_InterruptManager:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0070                     ?_main:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357                           
  4358                           ; 1 bytes @ 0x0
  4359  0070                     	ds	2
  4360  0072                     ??_INTERRUPT_InterruptManager:	
  4361                           
  4362                           ; 1 bytes @ 0x2
  4363  0072                     	ds	1
  4364  0073                     ??_TMR2_StartTimer:	
  4365  0073                     ??_TMR0_StartTimer:	
  4366                           ; 1 bytes @ 0x3
  4367                           
  4368  0073                     ??_OSCILLATOR_Initialize:	
  4369                           ; 1 bytes @ 0x3
  4370                           
  4371  0073                     ??_WDT_Initialize:	
  4372                           ; 1 bytes @ 0x3
  4373                           
  4374  0073                     ??_PWM5_Initialize:	
  4375                           ; 1 bytes @ 0x3
  4376                           
  4377  0073                     ??_toupper:	
  4378                           ; 1 bytes @ 0x3
  4379                           
  4380  0073                     ??_isspace:	
  4381                           ; 1 bytes @ 0x3
  4382                           
  4383  0073                     ??_isdigit:	
  4384                           ; 1 bytes @ 0x3
  4385                           
  4386  0073                     ??_TMR2_Initialize:	
  4387                           ; 1 bytes @ 0x3
  4388                           
  4389  0073                     ??_EUSART_Initialize:	
  4390                           ; 1 bytes @ 0x3
  4391                           
  4392  0073                     ??_EUSART_Read:	
  4393                           ; 1 bytes @ 0x3
  4394                           
  4395  0073                     ??_EUSART_Write:	
  4396                           ; 1 bytes @ 0x3
  4397                           
  4398  0073                     ??_TMR0_Initialize:	
  4399                           ; 1 bytes @ 0x3
  4400                           
  4401  0073                     ??_TMR0_HasOverflowOccured:	
  4402                           ; 1 bytes @ 0x3
  4403                           
  4404  0073                     ??_PIN_MANAGER_Initialize:	
  4405                           ; 1 bytes @ 0x3
  4406                           
  4407  0073                     ??_ADC_Initialize:	
  4408                           ; 1 bytes @ 0x3
  4409                           
  4410  0073                     ??_ADC_SelectChannel:	
  4411                           ; 1 bytes @ 0x3
  4412                           
  4413  0073                     ??_ADC_StartConversion:	
  4414                           ; 1 bytes @ 0x3
  4415                           
  4416  0073                     ?_PWM5_LoadDutyValue:	
  4417                           ; 1 bytes @ 0x3
  4418                           
  4419  0073                     ?_PI_SetSetpoint:	
  4420                           ; 1 bytes @ 0x3
  4421                           
  4422  0073                     ?_PI_SetKp:	
  4423                           ; 1 bytes @ 0x3
  4424                           
  4425  0073                     ?_PI_SetKi:	
  4426                           ; 1 bytes @ 0x3
  4427                           
  4428  0073                     ??___lmul:	
  4429                           ; 1 bytes @ 0x3
  4430                           
  4431  0073                     ?___bmul:	
  4432                           ; 1 bytes @ 0x3
  4433                           
  4434  0073                     ??___ftge:	
  4435                           ; 1 bytes @ 0x3
  4436                           
  4437  0073                     ?_ADC_GetConversion:	
  4438                           ; 1 bytes @ 0x3
  4439                           
  4440  0073                     ?_ADC_GetResult:	
  4441                           ; 2 bytes @ 0x3
  4442                           
  4443  0073                     ?_PI_GetSensorHeight:	
  4444                           ; 2 bytes @ 0x3
  4445                           
  4446  0073                     ?___wmul:	
  4447                           ; 2 bytes @ 0x3
  4448                           
  4449  0073                     ?___lwdiv:	
  4450                           ; 2 bytes @ 0x3
  4451                           
  4452  0073                     ?___ftpack:	
  4453                           ; 2 bytes @ 0x3
  4454                           
  4455  0073                     ?___ftneg:	
  4456                           ; 3 bytes @ 0x3
  4457                           
  4458  0073                     PIN_MANAGER_Initialize@state:	
  4459                           ; 3 bytes @ 0x3
  4460                           
  4461  0073                     ___bmul@multiplicand:	
  4462                           ; 1 bytes @ 0x3
  4463                           
  4464  0073                     _isdigit$976:	
  4465                           ; 1 bytes @ 0x3
  4466                           
  4467  0073                     _isspace$979:	
  4468                           ; 1 bytes @ 0x3
  4469                           
  4470  0073                     PWM5_LoadDutyValue@dutyValue:	
  4471                           ; 1 bytes @ 0x3
  4472                           
  4473  0073                     PI_SetSetpoint@value:	
  4474                           ; 2 bytes @ 0x3
  4475                           
  4476  0073                     ___wmul@multiplier:	
  4477                           ; 2 bytes @ 0x3
  4478                           
  4479  0073                     ___lwdiv@divisor:	
  4480                           ; 2 bytes @ 0x3
  4481                           
  4482  0073                     PI_SetKp@value:	
  4483                           ; 2 bytes @ 0x3
  4484                           
  4485  0073                     PI_SetKi@value:	
  4486                           ; 3 bytes @ 0x3
  4487                           
  4488  0073                     ___ftpack@arg:	
  4489                           ; 3 bytes @ 0x3
  4490                           
  4491  0073                     ___ftneg@f1:	
  4492                           ; 3 bytes @ 0x3
  4493                           
  4494  0073                     ___lmul@product:	
  4495                           ; 3 bytes @ 0x3
  4496                           
  4497                           
  4498                           ; 4 bytes @ 0x3
  4499  0073                     	ds	1
  4500  0074                     ??_SYSTEM_Initialize:	
  4501  0074                     ??___bmul:	
  4502                           ; 1 bytes @ 0x4
  4503                           
  4504  0074                     EUSART_Read@readValue:	
  4505                           ; 1 bytes @ 0x4
  4506                           
  4507  0074                     EUSART_Write@txData:	
  4508                           ; 1 bytes @ 0x4
  4509                           
  4510  0074                     ADC_SelectChannel@channel:	
  4511                           ; 1 bytes @ 0x4
  4512                           
  4513  0074                     isdigit@c:	
  4514                           ; 1 bytes @ 0x4
  4515                           
  4516  0074                     isspace@c:	
  4517                           ; 1 bytes @ 0x4
  4518                           
  4519  0074                     toupper@c:	
  4520                           ; 1 bytes @ 0x4
  4521                           
  4522                           
  4523                           ; 1 bytes @ 0x4
  4524  0074                     	ds	1
  4525  0075                     ??_putch:	
  4526  0075                     ??_ADC_GetConversion:	
  4527                           ; 1 bytes @ 0x5
  4528                           
  4529  0075                     ??_ADC_GetResult:	
  4530                           ; 1 bytes @ 0x5
  4531                           
  4532  0075                     ?_ADC_Start:	
  4533                           ; 1 bytes @ 0x5
  4534                           
  4535  0075                     ??_PWM5_LoadDutyValue:	
  4536                           ; 1 bytes @ 0x5
  4537                           
  4538  0075                     ??_PI_GetSensorHeight:	
  4539                           ; 1 bytes @ 0x5
  4540                           
  4541  0075                     ??_PI_SetSetpoint:	
  4542                           ; 1 bytes @ 0x5
  4543                           
  4544  0075                     putch@txData:	
  4545                           ; 1 bytes @ 0x5
  4546                           
  4547  0075                     ___bmul@product:	
  4548                           ; 1 bytes @ 0x5
  4549                           
  4550  0075                     ADC_Start@reference:	
  4551                           ; 1 bytes @ 0x5
  4552                           
  4553  0075                     ___wmul@multiplicand:	
  4554                           ; 2 bytes @ 0x5
  4555                           
  4556  0075                     ___lwdiv@dividend:	
  4557                           ; 2 bytes @ 0x5
  4558                           
  4559                           
  4560                           ; 2 bytes @ 0x5
  4561  0075                     	ds	1
  4562  0076                     ??_PI_SetKp:	
  4563  0076                     ??_PI_SetKi:	
  4564                           ; 1 bytes @ 0x6
  4565                           
  4566  0076                     ??___ftneg:	
  4567                           ; 1 bytes @ 0x6
  4568                           
  4569  0076                     ADC_GetConversion@channel:	
  4570                           ; 1 bytes @ 0x6
  4571                           
  4572  0076                     ___bmul@multiplier:	
  4573                           ; 1 bytes @ 0x6
  4574                           
  4575  0076                     ___ftpack@exp:	
  4576                           ; 1 bytes @ 0x6
  4577                           
  4578                           
  4579                           ; 1 bytes @ 0x6
  4580  0076                     	ds	1
  4581  0077                     ??_ADC_Start:	
  4582  0077                     ??___wmul:	
  4583                           ; 1 bytes @ 0x7
  4584                           
  4585  0077                     ??___lwdiv:	
  4586                           ; 1 bytes @ 0x7
  4587                           
  4588  0077                     ___ftpack@sign:	
  4589                           ; 1 bytes @ 0x7
  4590                           
  4591                           
  4592                           ; 1 bytes @ 0x7
  4593  0077                     	ds	1
  4594  0078                     ??_atof:	
  4595  0078                     ??_main:	
  4596                           ; 1 bytes @ 0x8
  4597                           
  4598                           
  4599                           	psect	cstackBANK0
  4600  0020                     __pcstackBANK0:	
  4601                           ; 1 bytes @ 0x8
  4602                           
  4603  0020                     ?___ftge:	
  4604  0020                     ??___ftpack:	
  4605                           ; 1 bit 
  4606                           
  4607  0020                     ?___lmul:	
  4608                           ; 1 bytes @ 0x0
  4609                           
  4610  0020                     ___lwdiv@counter:	
  4611                           ; 4 bytes @ 0x0
  4612                           
  4613  0020                     ___wmul@product:	
  4614                           ; 1 bytes @ 0x0
  4615                           
  4616  0020                     ___ftge@ff1:	
  4617                           ; 2 bytes @ 0x0
  4618                           
  4619  0020                     ___lmul@multiplier:	
  4620                           ; 3 bytes @ 0x0
  4621                           
  4622                           
  4623                           ; 4 bytes @ 0x0
  4624  0020                     	ds	1
  4625  0021                     ___lwdiv@quotient:	
  4626                           
  4627                           ; 2 bytes @ 0x1
  4628  0021                     	ds	1
  4629  0022                     ?_atoi:	
  4630                           
  4631                           ; 2 bytes @ 0x2
  4632  0022                     	ds	1
  4633  0023                     ?___lwmod:	
  4634  0023                     ?___altoft:	
  4635                           ; 2 bytes @ 0x3
  4636                           
  4637  0023                     ?___awtoft:	
  4638                           ; 3 bytes @ 0x3
  4639                           
  4640  0023                     ?___ftdiv:	
  4641                           ; 3 bytes @ 0x3
  4642                           
  4643  0023                     ___awtoft@c:	
  4644                           ; 3 bytes @ 0x3
  4645                           
  4646  0023                     ___lwmod@divisor:	
  4647                           ; 2 bytes @ 0x3
  4648                           
  4649  0023                     ___ftdiv@f2:	
  4650                           ; 2 bytes @ 0x3
  4651                           
  4652  0023                     ___ftge@ff2:	
  4653                           ; 3 bytes @ 0x3
  4654                           
  4655  0023                     ___altoft@c:	
  4656                           ; 3 bytes @ 0x3
  4657                           
  4658                           
  4659                           ; 4 bytes @ 0x3
  4660  0023                     	ds	1
  4661  0024                     ??_atoi:	
  4662  0024                     ___lmul@multiplicand:	
  4663                           ; 1 bytes @ 0x4
  4664                           
  4665                           
  4666                           ; 4 bytes @ 0x4
  4667  0024                     	ds	1
  4668  0025                     ___lwmod@dividend:	
  4669                           
  4670                           ; 2 bytes @ 0x5
  4671  0025                     	ds	1
  4672  0026                     ??___awtoft:	
  4673  0026                     atoi@sign:	
  4674                           ; 1 bytes @ 0x6
  4675                           
  4676  0026                     ___ftdiv@f1:	
  4677                           ; 1 bytes @ 0x6
  4678                           
  4679                           
  4680                           ; 3 bytes @ 0x6
  4681  0026                     	ds	1
  4682  0027                     ??___altoft:	
  4683  0027                     ??___lwmod:	
  4684                           ; 1 bytes @ 0x7
  4685                           
  4686  0027                     atoi@a:	
  4687                           ; 1 bytes @ 0x7
  4688                           
  4689                           
  4690                           ; 2 bytes @ 0x7
  4691  0027                     	ds	1
  4692  0028                     ___awtoft@sign:	
  4693  0028                     ___lwmod@counter:	
  4694                           ; 1 bytes @ 0x8
  4695                           
  4696                           
  4697                           ; 1 bytes @ 0x8
  4698  0028                     	ds	1
  4699  0029                     ??___ftdiv:	
  4700  0029                     ?_printf:	
  4701                           ; 1 bytes @ 0x9
  4702                           
  4703  0029                     ?___ftmul:	
  4704                           ; 2 bytes @ 0x9
  4705                           
  4706  0029                     ___altoft@exp:	
  4707                           ; 3 bytes @ 0x9
  4708                           
  4709  0029                     atoi@s:	
  4710                           ; 1 bytes @ 0x9
  4711                           
  4712  0029                     printf@f:	
  4713                           ; 1 bytes @ 0x9
  4714                           
  4715  0029                     ___ftmul@f1:	
  4716                           ; 2 bytes @ 0x9
  4717                           
  4718                           
  4719                           ; 3 bytes @ 0x9
  4720  0029                     	ds	1
  4721  002A                     ___altoft@sign:	
  4722                           
  4723                           ; 1 bytes @ 0xA
  4724  002A                     	ds	2
  4725  002C                     ___ftmul@f2:	
  4726                           
  4727                           ; 3 bytes @ 0xC
  4728  002C                     	ds	1
  4729  002D                     ??_printf:	
  4730  002D                     ___ftdiv@cntr:	
  4731                           ; 1 bytes @ 0xD
  4732                           
  4733                           
  4734                           ; 1 bytes @ 0xD
  4735  002D                     	ds	1
  4736  002E                     ___ftdiv@f3:	
  4737                           
  4738                           ; 3 bytes @ 0xE
  4739  002E                     	ds	1
  4740  002F                     ??___ftmul:	
  4741                           
  4742                           ; 1 bytes @ 0xF
  4743  002F                     	ds	2
  4744  0031                     printf@ap:	
  4745  0031                     ___ftdiv@exp:	
  4746                           ; 1 bytes @ 0x11
  4747                           
  4748                           
  4749                           ; 1 bytes @ 0x11
  4750  0031                     	ds	1
  4751  0032                     printf@flag:	
  4752  0032                     ___ftdiv@sign:	
  4753                           ; 1 bytes @ 0x12
  4754                           
  4755                           
  4756                           ; 1 bytes @ 0x12
  4757  0032                     	ds	1
  4758  0033                     printf@prec:	
  4759  0033                     ___ftmul@exp:	
  4760                           ; 1 bytes @ 0x13
  4761                           
  4762                           
  4763                           ; 1 bytes @ 0x13
  4764  0033                     	ds	1
  4765  0034                     printf@val:	
  4766  0034                     ___ftmul@f3_as_product:	
  4767                           ; 2 bytes @ 0x14
  4768                           
  4769                           
  4770                           ; 3 bytes @ 0x14
  4771  0034                     	ds	2
  4772  0036                     printf@c:	
  4773                           
  4774                           ; 1 bytes @ 0x16
  4775  0036                     	ds	1
  4776  0037                     ___ftmul@cntr:	
  4777                           
  4778                           ; 1 bytes @ 0x17
  4779  0037                     	ds	1
  4780  0038                     ___ftmul@sign:	
  4781                           
  4782                           ; 1 bytes @ 0x18
  4783  0038                     	ds	1
  4784  0039                     ?_strtod:	
  4785  0039                     ?___ftadd:	
  4786                           ; 3 bytes @ 0x19
  4787                           
  4788  0039                     strtod@res:	
  4789                           ; 3 bytes @ 0x19
  4790                           
  4791  0039                     ___ftadd@f1:	
  4792                           ; 1 bytes @ 0x19
  4793                           
  4794                           
  4795                           ; 3 bytes @ 0x19
  4796  0039                     	ds	3
  4797  003C                     ??_strtod:	
  4798  003C                     ___ftadd@f2:	
  4799                           ; 1 bytes @ 0x1C
  4800                           
  4801                           
  4802                           ; 3 bytes @ 0x1C
  4803  003C                     	ds	3
  4804  003F                     ??___ftadd:	
  4805                           
  4806                           ; 1 bytes @ 0x1F
  4807  003F                     	ds	1
  4808  0040                     strtod@eexp:	
  4809                           
  4810                           ; 1 bytes @ 0x20
  4811  0040                     	ds	1
  4812  0041                     strtod@flags:	
  4813                           
  4814                           ; 1 bytes @ 0x21
  4815  0041                     	ds	1
  4816  0042                     strtod@expon:	
  4817                           
  4818                           ; 1 bytes @ 0x22
  4819  0042                     	ds	1
  4820  0043                     ___ftadd@sign:	
  4821  0043                     strtod@_u:	
  4822                           ; 1 bytes @ 0x23
  4823                           
  4824                           
  4825                           ; 4 bytes @ 0x23
  4826  0043                     	ds	1
  4827  0044                     ___ftadd@exp2:	
  4828                           
  4829                           ; 1 bytes @ 0x24
  4830  0044                     	ds	1
  4831  0045                     ___ftadd@exp1:	
  4832                           
  4833                           ; 1 bytes @ 0x25
  4834  0045                     	ds	1
  4835  0046                     ?___fttol:	
  4836  0046                     ___fttol@f1:	
  4837                           ; 4 bytes @ 0x26
  4838                           
  4839                           
  4840                           ; 3 bytes @ 0x26
  4841  0046                     	ds	1
  4842  0047                     strtod@s:	
  4843                           
  4844                           ; 1 bytes @ 0x27
  4845  0047                     	ds	1
  4846  0048                     ?_atof:	
  4847                           
  4848                           ; 3 bytes @ 0x28
  4849  0048                     	ds	2
  4850  004A                     ??___fttol:	
  4851                           
  4852                           ; 1 bytes @ 0x2A
  4853  004A                     	ds	2
  4854  004C                     atof@s:	
  4855                           
  4856                           ; 1 bytes @ 0x2C
  4857  004C                     	ds	1
  4858  004D                     ??_Java:	
  4859                           
  4860                           ; 1 bytes @ 0x2D
  4861  004D                     	ds	1
  4862  004E                     ___fttol@sign1:	
  4863                           
  4864                           ; 1 bytes @ 0x2E
  4865  004E                     	ds	1
  4866  004F                     Java@i:	
  4867  004F                     ___fttol@lval:	
  4868                           ; 2 bytes @ 0x2F
  4869                           
  4870                           
  4871                           ; 4 bytes @ 0x2F
  4872  004F                     	ds	4
  4873  0053                     ___fttol@exp1:	
  4874                           
  4875                           ; 1 bytes @ 0x33
  4876  0053                     	ds	1
  4877  0054                     ??_PI:	
  4878                           
  4879                           ; 1 bytes @ 0x34
  4880  0054                     	ds	2
  4881  0056                     PI@P:	
  4882                           
  4883                           ; 3 bytes @ 0x36
  4884  0056                     	ds	3
  4885  0059                     PI@dutycycle1:	
  4886                           
  4887                           ; 2 bytes @ 0x39
  4888  0059                     	ds	2
  4889                           
  4890                           	psect	maintext
  4891  0E23                     __pmaintext:	
  4892 ;;
  4893 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4894 ;;
  4895 ;; *************** function _main *****************
  4896 ;; Defined at:
  4897 ;;		line 25 in file "main.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;		None
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  threshold       2    0[BANK1 ] int 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  1    wreg      void 
  4904 ;; Registers used:
  4905 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4906 ;; Tracked objects:
  4907 ;;		On entry : B1F/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;Total ram usage:        2 bytes
  4916 ;; Hardware stack levels required when called:    7
  4917 ;; This function calls:
  4918 ;;		_ADC_GetConversion
  4919 ;;		_ADC_Start
  4920 ;;		_Java
  4921 ;;		_PI
  4922 ;;		_SYSTEM_Initialize
  4923 ;;		_TMR0_HasOverflowOccured
  4924 ;;		_TMR0_Initialize
  4925 ;;		_printf
  4926 ;; This function is called by:
  4927 ;;		Startup code after reset
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function _main
  4933  0E23                     _main:	
  4934                           
  4935                           ;main.c: 27: SYSTEM_Initialize();
  4936                           
  4937                           ;incstack = 0
  4938                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4939  0E23  318D  2510  318E   	fcall	_SYSTEM_Initialize
  4940                           
  4941                           ;main.c: 33: (INTCONbits.GIE = 1);
  4942  0E26  178B               	bsf	11,7	;volatile
  4943                           
  4944                           ;main.c: 36: (INTCONbits.PEIE = 1);
  4945  0E27  170B               	bsf	11,6	;volatile
  4946                           
  4947                           ;main.c: 47: printf("start");
  4948  0E28  300A               	movlw	low (STR_1| (0+32768))
  4949  0E29  0020               	movlb	0	; select bank0
  4950  0E2A  00A9               	movwf	printf@f
  4951  0E2B  3090               	movlw	high (STR_1| (0+32768))
  4952  0E2C  00AA               	movwf	printf@f+1
  4953  0E2D  3184  2458  318E   	fcall	_printf
  4954                           
  4955                           ;main.c: 48: int threshold = ADC_GetConversion(Potentiometer);
  4956  0E30  3010               	movlw	16
  4957  0E31  318D  2528  318E   	fcall	_ADC_GetConversion
  4958  0E34  0874               	movf	?_ADC_GetConversion+1,w
  4959  0E35  0021               	movlb	1	; select bank1
  4960  0E36  00D7               	movwf	(main@threshold+1)^(0+128)
  4961  0E37  0873               	movf	?_ADC_GetConversion,w
  4962  0E38  00D6               	movwf	main@threshold^(0+128)
  4963                           
  4964                           ;main.c: 51: ADC_Start(threshold);
  4965  0E39  0857               	movf	(main@threshold+1)^(0+128),w
  4966  0E3A  00F6               	movwf	ADC_Start@reference+1
  4967  0E3B  0856               	movf	main@threshold^(0+128),w
  4968  0E3C  00F5               	movwf	ADC_Start@reference
  4969  0E3D  318C  249F  318E   	fcall	_ADC_Start
  4970  0E40                     l4027:	
  4971                           ;main.c: 53: while (1) {
  4972                           
  4973                           
  4974                           ;main.c: 55: if (TMR0_HasOverflowOccured()) {
  4975  0E40  318C  2418  318E   	fcall	_TMR0_HasOverflowOccured
  4976  0E43  3A00               	xorlw	0
  4977  0E44  1903               	skipnz
  4978  0E45  2E40               	goto	l4027
  4979                           
  4980                           ;main.c: 56: TMR0_Initialize();
  4981  0E46  318C  247B  318E   	fcall	_TMR0_Initialize
  4982                           
  4983                           ;main.c: 58: PI();
  4984  0E49  3185  25C4  318E   	fcall	_PI
  4985                           
  4986                           ;main.c: 59: Java();
  4987  0E4C  3183  237C  318E   	fcall	_Java
  4988  0E4F  2E40               	goto	l4027
  4989  0E50                     __end_of_main:	
  4990                           
  4991                           	psect	text1
  4992  0C18                     __ptext1:	
  4993 ;; *************** function _TMR0_HasOverflowOccured *****************
  4994 ;; Defined at:
  4995 ;;		line 117 in file "mcc_generated_files/tmr0.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      unsigned char 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    2
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_main
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           
  5024                           ;psect for function _TMR0_HasOverflowOccured
  5025  0C18                     _TMR0_HasOverflowOccured:	
  5026                           
  5027                           ;tmr0.c: 120: return(PIR0bits.TMR0IF);
  5028                           
  5029                           ;incstack = 0
  5030                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
  5031  0C18  0020               	movlb	0	; select bank0
  5032  0C19  0E10               	swapf	16,w	;volatile
  5033  0C1A  0C89               	rrf	9,f
  5034  0C1B  3901               	andlw	1
  5035  0C1C  0008               	return
  5036  0C1D                     __end_of_TMR0_HasOverflowOccured:	
  5037                           
  5038                           	psect	text2
  5039  0D10                     __ptext2:	
  5040 ;; *************** function _SYSTEM_Initialize *****************
  5041 ;; Defined at:
  5042 ;;		line 76 in file "mcc_generated_files/mcc.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0, pclath, cstack
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5060 ;;Total ram usage:        0 bytes
  5061 ;; Hardware stack levels used:    1
  5062 ;; Hardware stack levels required when called:    4
  5063 ;; This function calls:
  5064 ;;		_ADC_Initialize
  5065 ;;		_EUSART_Initialize
  5066 ;;		_OSCILLATOR_Initialize
  5067 ;;		_PIN_MANAGER_Initialize
  5068 ;;		_PWM5_Initialize
  5069 ;;		_TMR0_Initialize
  5070 ;;		_TMR2_Initialize
  5071 ;;		_WDT_Initialize
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _SYSTEM_Initialize
  5079  0D10                     _SYSTEM_Initialize:	
  5080                           
  5081                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  5082                           
  5083                           ;incstack = 0
  5084                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5085  0D10  3187  27A3  318D   	fcall	_PIN_MANAGER_Initialize
  5086                           
  5087                           ;mcc.c: 80: OSCILLATOR_Initialize();
  5088  0D13  318C  2453  318D   	fcall	_OSCILLATOR_Initialize
  5089                           
  5090                           ;mcc.c: 81: WDT_Initialize();
  5091  0D16  318C  240F  318D   	fcall	_WDT_Initialize
  5092                           
  5093                           ;mcc.c: 82: ADC_Initialize();
  5094  0D19  318C  2470  318D   	fcall	_ADC_Initialize
  5095                           
  5096                           ;mcc.c: 83: PWM5_Initialize();
  5097  0D1C  318C  2486  318D   	fcall	_PWM5_Initialize
  5098                           
  5099                           ;mcc.c: 84: TMR2_Initialize();
  5100  0D1F  318C  245B  318D   	fcall	_TMR2_Initialize
  5101                           
  5102                           ;mcc.c: 85: TMR0_Initialize();
  5103  0D22  318C  247B  318D   	fcall	_TMR0_Initialize
  5104                           
  5105                           ;mcc.c: 86: EUSART_Initialize();
  5106  0D25  318D  255C         	fcall	_EUSART_Initialize
  5107  0D27  0008               	return
  5108  0D28                     __end_of_SYSTEM_Initialize:	
  5109                           
  5110                           	psect	text3
  5111  0C0F                     __ptext3:	
  5112 ;; *************** function _WDT_Initialize *****************
  5113 ;; Defined at:
  5114 ;;		line 105 in file "mcc_generated_files/mcc.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;		None
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      void 
  5121 ;; Registers used:
  5122 ;;		wreg
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;Total ram usage:        0 bytes
  5133 ;; Hardware stack levels used:    1
  5134 ;; Hardware stack levels required when called:    2
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_SYSTEM_Initialize
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function _WDT_Initialize
  5144  0C0F                     _WDT_Initialize:	
  5145                           
  5146                           ;mcc.c: 108: WDTCON = 0x20;
  5147                           
  5148                           ;incstack = 0
  5149                           ; Regs used in _WDT_Initialize: [wreg]
  5150  0C0F  3020               	movlw	32
  5151  0C10  0021               	movlb	1	; select bank1
  5152  0C11  0097               	movwf	23	;volatile
  5153  0C12  0008               	return
  5154  0C13                     __end_of_WDT_Initialize:	
  5155                           
  5156                           	psect	text4
  5157  0C7B                     __ptext4:	
  5158 ;; *************** function _TMR0_Initialize *****************
  5159 ;; Defined at:
  5160 ;;		line 60 in file "mcc_generated_files/tmr0.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0, pclath, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;Total ram usage:        0 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    3
  5181 ;; This function calls:
  5182 ;;		_TMR0_StartTimer
  5183 ;; This function is called by:
  5184 ;;		_SYSTEM_Initialize
  5185 ;;		_main
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           
  5190                           ;psect for function _TMR0_Initialize
  5191  0C7B                     _TMR0_Initialize:	
  5192                           
  5193                           ;tmr0.c: 65: T0CON0 = 0x00;
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5197  0C7B  0020               	movlb	0	; select bank0
  5198  0C7C  0197               	clrf	23	;volatile
  5199                           
  5200                           ;tmr0.c: 68: T0CON1 = 0x83;
  5201  0C7D  3083               	movlw	131
  5202  0C7E  0098               	movwf	24	;volatile
  5203                           
  5204                           ;tmr0.c: 71: TMR0H = 0x26;
  5205  0C7F  3026               	movlw	38
  5206  0C80  0096               	movwf	22	;volatile
  5207                           
  5208                           ;tmr0.c: 74: TMR0L = 0x00;
  5209  0C81  0195               	clrf	21	;volatile
  5210                           
  5211                           ;tmr0.c: 78: PIR0bits.TMR0IF = 0;
  5212  0C82  1290               	bcf	16,5	;volatile
  5213                           
  5214                           ;tmr0.c: 81: TMR0_StartTimer();
  5215  0C83  318C  240C         	fcall	_TMR0_StartTimer
  5216  0C85  0008               	return
  5217  0C86                     __end_of_TMR0_Initialize:	
  5218                           
  5219                           	psect	text5
  5220  0C0C                     __ptext5:	
  5221 ;; *************** function _TMR0_StartTimer *****************
  5222 ;; Defined at:
  5223 ;;		line 84 in file "mcc_generated_files/tmr0.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		None
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5241 ;;Total ram usage:        0 bytes
  5242 ;; Hardware stack levels used:    1
  5243 ;; Hardware stack levels required when called:    2
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_TMR0_Initialize
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _TMR0_StartTimer
  5253  0C0C                     _TMR0_StartTimer:	
  5254                           
  5255                           ;tmr0.c: 87: T0CON0bits.T0EN = 1;
  5256                           
  5257                           ;incstack = 0
  5258                           ; Regs used in _TMR0_StartTimer: []
  5259  0C0C  0020               	movlb	0	; select bank0
  5260  0C0D  1797               	bsf	23,7	;volatile
  5261  0C0E  0008               	return
  5262  0C0F                     __end_of_TMR0_StartTimer:	
  5263                           
  5264                           	psect	text6
  5265  0C86                     __ptext6:	
  5266 ;; *************** function _PWM5_Initialize *****************
  5267 ;; Defined at:
  5268 ;;		line 57 in file "mcc_generated_files/pwm5.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;		None
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;		None
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      void 
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;Total ram usage:        0 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    2
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_SYSTEM_Initialize
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _PWM5_Initialize
  5298  0C86                     _PWM5_Initialize:	
  5299                           
  5300                           ;pwm5.c: 61: PWM5CON = 0x80;
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
  5304  0C86  3080               	movlw	128
  5305  0C87  002C               	movlb	12	; select bank12
  5306  0C88  0099               	movwf	25	;volatile
  5307                           
  5308                           ;pwm5.c: 64: PWM5DCH = 0x18;
  5309  0C89  3018               	movlw	24
  5310  0C8A  0098               	movwf	24	;volatile
  5311                           
  5312                           ;pwm5.c: 67: PWM5DCL = 0xC0;
  5313  0C8B  30C0               	movlw	192
  5314  0C8C  0097               	movwf	23	;volatile
  5315                           
  5316                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 0x1;
  5317  0C8D  081F               	movf	31,w	;volatile
  5318  0C8E  39FC               	andlw	-4
  5319  0C8F  3801               	iorlw	1
  5320  0C90  009F               	movwf	31	;volatile
  5321  0C91  0008               	return
  5322  0C92                     __end_of_PWM5_Initialize:	
  5323                           
  5324                           	psect	text7
  5325  07A3                     __ptext7:	
  5326 ;; *************** function _PIN_MANAGER_Initialize *****************
  5327 ;; Defined at:
  5328 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  state           1    3[COMMON] unsigned char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;Total ram usage:        1 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    2
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_SYSTEM_Initialize
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           
  5357                           ;psect for function _PIN_MANAGER_Initialize
  5358  07A3                     _PIN_MANAGER_Initialize:	
  5359                           
  5360                           ;pin_manager.c: 56: LATA = 0x00;
  5361                           
  5362                           ;incstack = 0
  5363                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5364  07A3  0022               	movlb	2	; select bank2
  5365  07A4  018C               	clrf	12	;volatile
  5366                           
  5367                           ;pin_manager.c: 57: LATB = 0x00;
  5368  07A5  018D               	clrf	13	;volatile
  5369                           
  5370                           ;pin_manager.c: 58: LATC = 0x00;
  5371  07A6  018E               	clrf	14	;volatile
  5372                           
  5373                           ;pin_manager.c: 63: TRISA = 0x37;
  5374  07A7  3037               	movlw	55
  5375  07A8  0021               	movlb	1	; select bank1
  5376  07A9  008C               	movwf	12	;volatile
  5377                           
  5378                           ;pin_manager.c: 64: TRISB = 0x30;
  5379  07AA  3030               	movlw	48
  5380  07AB  008D               	movwf	13	;volatile
  5381                           
  5382                           ;pin_manager.c: 65: TRISC = 0x7D;
  5383  07AC  307D               	movlw	125
  5384  07AD  008E               	movwf	14	;volatile
  5385                           
  5386                           ;pin_manager.c: 70: ANSELC = 0xFF;
  5387  07AE  30FF               	movlw	255
  5388  07AF  0023               	movlb	3	; select bank3
  5389  07B0  008E               	movwf	14	;volatile
  5390                           
  5391                           ;pin_manager.c: 71: ANSELB = 0xD0;
  5392  07B1  30D0               	movlw	208
  5393  07B2  008D               	movwf	13	;volatile
  5394                           
  5395                           ;pin_manager.c: 72: ANSELA = 0x37;
  5396  07B3  3037               	movlw	55
  5397  07B4  008C               	movwf	12	;volatile
  5398                           
  5399                           ;pin_manager.c: 77: WPUB = 0x00;
  5400  07B5  0024               	movlb	4	; select bank4
  5401  07B6  018D               	clrf	13	;volatile
  5402                           
  5403                           ;pin_manager.c: 78: WPUA = 0x00;
  5404  07B7  018C               	clrf	12	;volatile
  5405                           
  5406                           ;pin_manager.c: 79: WPUC = 0x00;
  5407  07B8  018E               	clrf	14	;volatile
  5408                           
  5409                           ;pin_manager.c: 84: ODCONA = 0x00;
  5410  07B9  0025               	movlb	5	; select bank5
  5411  07BA  018C               	clrf	12	;volatile
  5412                           
  5413                           ;pin_manager.c: 85: ODCONB = 0x00;
  5414  07BB  018D               	clrf	13	;volatile
  5415                           
  5416                           ;pin_manager.c: 86: ODCONC = 0x00;
  5417  07BC  018E               	clrf	14	;volatile
  5418                           
  5419                           ;pin_manager.c: 93: bool state = GIE;
  5420  07BD  3000               	movlw	0
  5421  07BE  1B8B               	btfsc	11,7	;volatile
  5422  07BF  3001               	movlw	1
  5423  07C0  00F3               	movwf	PIN_MANAGER_Initialize@state
  5424                           
  5425                           ;pin_manager.c: 94: GIE = 0;
  5426  07C1  138B               	bcf	11,7	;volatile
  5427                           
  5428                           ;pin_manager.c: 95: PPSLOCK = 0x55;
  5429  07C2  3055               	movlw	85
  5430  07C3  003C               	movlb	28	; select bank28
  5431  07C4  008F               	movwf	15	;volsfr
  5432                           
  5433                           ;pin_manager.c: 96: PPSLOCK = 0xAA;
  5434  07C5  30AA               	movlw	170
  5435  07C6  008F               	movwf	15	;volsfr
  5436                           
  5437                           ;pin_manager.c: 97: PPSLOCKbits.PPSLOCKED = 0x00;
  5438  07C7  100F               	bcf	15,0	;volsfr
  5439                           
  5440                           ;pin_manager.c: 99: RC1PPSbits.RC1PPS = 0x02;
  5441  07C8  003D               	movlb	29	; select bank29
  5442  07C9  0821               	movf	33,w	;volatile
  5443  07CA  39E0               	andlw	-32
  5444  07CB  3802               	iorlw	2
  5445  07CC  00A1               	movwf	33	;volatile
  5446                           
  5447                           ;pin_manager.c: 100: RXPPSbits.RXPPS = 0x0D;
  5448  07CD  003C               	movlb	28	; select bank28
  5449  07CE  0824               	movf	36,w	;volatile
  5450  07CF  39E0               	andlw	-32
  5451  07D0  380D               	iorlw	13
  5452  07D1  00A4               	movwf	36	;volatile
  5453                           
  5454                           ;pin_manager.c: 101: RB7PPSbits.RB7PPS = 0x14;
  5455  07D2  003D               	movlb	29	; select bank29
  5456  07D3  081F               	movf	31,w	;volatile
  5457  07D4  39E0               	andlw	-32
  5458  07D5  3814               	iorlw	20
  5459  07D6  009F               	movwf	31	;volatile
  5460                           
  5461                           ;pin_manager.c: 103: PPSLOCK = 0x55;
  5462  07D7  3055               	movlw	85
  5463  07D8  003C               	movlb	28	; select bank28
  5464  07D9  008F               	movwf	15	;volsfr
  5465                           
  5466                           ;pin_manager.c: 104: PPSLOCK = 0xAA;
  5467  07DA  30AA               	movlw	170
  5468  07DB  008F               	movwf	15	;volsfr
  5469                           
  5470                           ;pin_manager.c: 105: PPSLOCKbits.PPSLOCKED = 0x01;
  5471  07DC  140F               	bsf	15,0	;volsfr
  5472                           
  5473                           ;pin_manager.c: 107: GIE = state;
  5474  07DD  1C73               	btfss	PIN_MANAGER_Initialize@state,0
  5475  07DE  2FE1               	goto	u4670
  5476  07DF  178B               	bsf	11,7	;volatile
  5477  07E0  0008               	return
  5478  07E1                     u4670:	
  5479  07E1  138B               	bcf	11,7	;volatile
  5480  07E2  0008               	return
  5481  07E3                     __end_of_PIN_MANAGER_Initialize:	
  5482                           
  5483                           	psect	text8
  5484  0C53                     __ptext8:	
  5485 ;; *************** function _OSCILLATOR_Initialize *****************
  5486 ;; Defined at:
  5487 ;;		line 89 in file "mcc_generated_files/mcc.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5505 ;;Total ram usage:        0 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    2
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_SYSTEM_Initialize
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           
  5516                           ;psect for function _OSCILLATOR_Initialize
  5517  0C53                     _OSCILLATOR_Initialize:	
  5518                           
  5519                           ;mcc.c: 92: OSCCON1 = 0x00;
  5520                           
  5521                           ;incstack = 0
  5522                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5523  0C53  0032               	movlb	18	; select bank18
  5524  0C54  0199               	clrf	25	;volatile
  5525                           
  5526                           ;mcc.c: 94: OSCCON3 = 0x00;
  5527  0C55  019B               	clrf	27	;volatile
  5528                           
  5529                           ;mcc.c: 96: OSCEN = 0x00;
  5530  0C56  019D               	clrf	29	;volatile
  5531                           
  5532                           ;mcc.c: 98: OSCFRQ = 0x06;
  5533  0C57  3006               	movlw	6
  5534  0C58  009F               	movwf	31	;volatile
  5535                           
  5536                           ;mcc.c: 100: OSCTUNE = 0x00;
  5537  0C59  019E               	clrf	30	;volatile
  5538  0C5A  0008               	return
  5539  0C5B                     __end_of_OSCILLATOR_Initialize:	
  5540                           
  5541                           	psect	text9
  5542  0D5C                     __ptext9:	
  5543 ;; *************** function _EUSART_Initialize *****************
  5544 ;; Defined at:
  5545 ;;		line 75 in file "mcc_generated_files/eusart.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      void 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;Total ram usage:        1 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    2
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_SYSTEM_Initialize
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _EUSART_Initialize
  5575  0D5C                     _EUSART_Initialize:	
  5576                           
  5577                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  5581  0D5C  0021               	movlb	1	; select bank1
  5582  0D5D  1291               	bcf	17,5	;volatile
  5583                           
  5584                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  5585  0D5E  1211               	bcf	17,4	;volatile
  5586                           
  5587                           ;eusart.c: 84: BAUD1CON = 0x08;
  5588  0D5F  3008               	movlw	8
  5589  0D60  0023               	movlb	3	; select bank3
  5590  0D61  009F               	movwf	31	;volatile
  5591                           
  5592                           ;eusart.c: 87: RC1STA = 0x90;
  5593  0D62  3090               	movlw	144
  5594  0D63  009D               	movwf	29	;volatile
  5595                           
  5596                           ;eusart.c: 90: TX1STA = 0x24;
  5597  0D64  3024               	movlw	36
  5598  0D65  009E               	movwf	30	;volatile
  5599                           
  5600                           ;eusart.c: 93: SP1BRGL = 0x40;
  5601  0D66  3040               	movlw	64
  5602  0D67  009B               	movwf	27	;volatile
  5603                           
  5604                           ;eusart.c: 96: SP1BRGH = 0x03;
  5605  0D68  3003               	movlw	3
  5606  0D69  009C               	movwf	28	;volatile
  5607                           
  5608                           ;eusart.c: 100: eusartTxHead = 0;
  5609  0D6A  01FA               	clrf	_eusartTxHead
  5610                           
  5611                           ;eusart.c: 101: eusartTxTail = 0;
  5612  0D6B  01F9               	clrf	_eusartTxTail
  5613                           
  5614                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  5615  0D6C  3008               	movlw	8
  5616  0D6D  00F3               	movwf	??_EUSART_Initialize
  5617  0D6E  0873               	movf	??_EUSART_Initialize,w
  5618  0D6F  0020               	movlb	0	; select bank0
  5619  0D70  00EF               	movwf	_eusartTxBufferRemaining	;volatile
  5620                           
  5621                           ;eusart.c: 104: eusartRxHead = 0;
  5622  0D71  01EC               	clrf	_eusartRxHead
  5623                           
  5624                           ;eusart.c: 105: eusartRxTail = 0;
  5625  0D72  01EB               	clrf	_eusartRxTail
  5626                           
  5627                           ;eusart.c: 106: eusartRxCount = 0;
  5628  0D73  01F8               	clrf	_eusartRxCount	;volatile
  5629                           
  5630                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  5631  0D74  0021               	movlb	1	; select bank1
  5632  0D75  1691               	bsf	17,5	;volatile
  5633  0D76  0008               	return
  5634  0D77                     __end_of_EUSART_Initialize:	
  5635                           
  5636                           	psect	text10
  5637  0C70                     __ptext10:	
  5638 ;; *************** function _ADC_Initialize *****************
  5639 ;; Defined at:
  5640 ;;		line 68 in file "mcc_generated_files/adc.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;Total ram usage:        0 bytes
  5659 ;; Hardware stack levels used:    1
  5660 ;; Hardware stack levels required when called:    2
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_SYSTEM_Initialize
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           
  5669                           ;psect for function _ADC_Initialize
  5670  0C70                     _ADC_Initialize:	
  5671                           
  5672                           ;adc.c: 73: ADCON0 = 0x01;
  5673                           
  5674                           ;incstack = 0
  5675                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  5676  0C70  3001               	movlw	1
  5677  0C71  0021               	movlb	1	; select bank1
  5678  0C72  009D               	movwf	29	;volatile
  5679                           
  5680                           ;adc.c: 76: ADCON1 = 0x20;
  5681  0C73  3020               	movlw	32
  5682  0C74  009E               	movwf	30	;volatile
  5683                           
  5684                           ;adc.c: 79: ADACT = 0x05;
  5685  0C75  3005               	movlw	5
  5686  0C76  009F               	movwf	31	;volatile
  5687                           
  5688                           ;adc.c: 82: ADRESL = 0x00;
  5689  0C77  019B               	clrf	27	;volatile
  5690                           
  5691                           ;adc.c: 85: ADRESH = 0x00;
  5692  0C78  019C               	clrf	28	;volatile
  5693                           
  5694                           ;adc.c: 88: PIE1bits.ADIE = 1;
  5695  0C79  1711               	bsf	17,6	;volatile
  5696  0C7A  0008               	return
  5697  0C7B                     __end_of_ADC_Initialize:	
  5698                           
  5699                           	psect	text11
  5700  05C4                     __ptext11:	
  5701 ;; *************** function _PI *****************
  5702 ;; Defined at:
  5703 ;;		line 37 in file "PI.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;		None
  5706 ;; Auto vars:     Size  Location     Type
  5707 ;;  P               3   54[BANK0 ] float 
  5708 ;;  dutycycle1      2   57[BANK0 ] int 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0, pclath, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5720 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5721 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;Total ram usage:        7 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    4
  5725 ;; This function calls:
  5726 ;;		_ADC_GetResult
  5727 ;;		_PWM5_LoadDutyValue
  5728 ;;		___awtoft
  5729 ;;		___ftadd
  5730 ;;		___ftmul
  5731 ;;		___fttol
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           
  5738                           ;psect for function _PI
  5739  05C4                     _PI:	
  5740                           
  5741                           ;PI.c: 38: sensorHeight = (int) ADC_GetResult();
  5742                           
  5743                           ;incstack = 0
  5744                           ; Regs used in _PI: [wreg+status,2+status,0+pclath+cstack]
  5745  05C4  318C  2429  3185   	fcall	_ADC_GetResult
  5746  05C7  0874               	movf	?_ADC_GetResult+1,w
  5747  05C8  0020               	movlb	0	; select bank0
  5748  05C9  00E7               	movwf	_sensorHeight+1
  5749  05CA  0873               	movf	?_ADC_GetResult,w
  5750  05CB  00E6               	movwf	_sensorHeight
  5751                           
  5752                           ;PI.c: 39: error = setpoint - sensorHeight;
  5753  05CC  0966               	comf	_sensorHeight,w
  5754  05CD  00D4               	movwf	??_PI
  5755  05CE  0967               	comf	_sensorHeight+1,w
  5756  05CF  00D5               	movwf	??_PI+1
  5757  05D0  0AD4               	incf	??_PI,f
  5758  05D1  1903               	skipnz
  5759  05D2  0AD5               	incf	??_PI+1,f
  5760  05D3  086D               	movf	_setpoint,w
  5761  05D4  0754               	addwf	??_PI,w
  5762  05D5  00E4               	movwf	_error
  5763  05D6  086E               	movf	_setpoint+1,w
  5764  05D7  3D55               	addwfc	??_PI+1,w
  5765  05D8  00E5               	movwf	_error+1
  5766                           
  5767                           ;PI.c: 42: float P = kp * error;
  5768  05D9  0021               	movlb	1	; select bank1
  5769  05DA  0850               	movf	_kp^(0+128),w
  5770  05DB  0020               	movlb	0	; select bank0
  5771  05DC  00A9               	movwf	___ftmul@f1
  5772  05DD  0021               	movlb	1	; select bank1
  5773  05DE  0851               	movf	(_kp+1)^(0+128),w
  5774  05DF  0020               	movlb	0	; select bank0
  5775  05E0  00AA               	movwf	___ftmul@f1+1
  5776  05E1  0021               	movlb	1	; select bank1
  5777  05E2  0852               	movf	(_kp+2)^(0+128),w
  5778  05E3  0020               	movlb	0	; select bank0
  5779  05E4  00AB               	movwf	___ftmul@f1+2
  5780  05E5  0865               	movf	_error+1,w
  5781  05E6  00A4               	movwf	___awtoft@c+1
  5782  05E7  0864               	movf	_error,w
  5783  05E8  00A3               	movwf	___awtoft@c
  5784  05E9  318D  25B1  3185   	fcall	___awtoft
  5785  05EC  0020               	movlb	0	; select bank0
  5786  05ED  0823               	movf	?___awtoft,w
  5787  05EE  00AC               	movwf	___ftmul@f2
  5788  05EF  0824               	movf	?___awtoft+1,w
  5789  05F0  00AD               	movwf	___ftmul@f2+1
  5790  05F1  0825               	movf	?___awtoft+2,w
  5791  05F2  00AE               	movwf	___ftmul@f2+2
  5792  05F3  3185  2510  3185   	fcall	___ftmul
  5793  05F6  0020               	movlb	0	; select bank0
  5794  05F7  0829               	movf	?___ftmul,w
  5795  05F8  00D6               	movwf	PI@P
  5796  05F9  082A               	movf	?___ftmul+1,w
  5797  05FA  00D7               	movwf	PI@P+1
  5798  05FB  082B               	movf	?___ftmul+2,w
  5799  05FC  00D8               	movwf	PI@P+2
  5800                           
  5801                           ;PI.c: 43: I = I + ki * error;
  5802  05FD  085B               	movf	_I,w
  5803  05FE  00B9               	movwf	___ftadd@f1
  5804  05FF  085C               	movf	_I+1,w
  5805  0600  00BA               	movwf	___ftadd@f1+1
  5806  0601  085D               	movf	_I+2,w
  5807  0602  00BB               	movwf	___ftadd@f1+2
  5808  0603  0021               	movlb	1	; select bank1
  5809  0604  0853               	movf	_ki^(0+128),w
  5810  0605  0020               	movlb	0	; select bank0
  5811  0606  00A9               	movwf	___ftmul@f1
  5812  0607  0021               	movlb	1	; select bank1
  5813  0608  0854               	movf	(_ki+1)^(0+128),w
  5814  0609  0020               	movlb	0	; select bank0
  5815  060A  00AA               	movwf	___ftmul@f1+1
  5816  060B  0021               	movlb	1	; select bank1
  5817  060C  0855               	movf	(_ki+2)^(0+128),w
  5818  060D  0020               	movlb	0	; select bank0
  5819  060E  00AB               	movwf	___ftmul@f1+2
  5820  060F  0865               	movf	_error+1,w
  5821  0610  00A4               	movwf	___awtoft@c+1
  5822  0611  0864               	movf	_error,w
  5823  0612  00A3               	movwf	___awtoft@c
  5824  0613  318D  25B1  3185   	fcall	___awtoft
  5825  0616  0020               	movlb	0	; select bank0
  5826  0617  0823               	movf	?___awtoft,w
  5827  0618  00AC               	movwf	___ftmul@f2
  5828  0619  0824               	movf	?___awtoft+1,w
  5829  061A  00AD               	movwf	___ftmul@f2+1
  5830  061B  0825               	movf	?___awtoft+2,w
  5831  061C  00AE               	movwf	___ftmul@f2+2
  5832  061D  3185  2510  3185   	fcall	___ftmul
  5833  0620  0020               	movlb	0	; select bank0
  5834  0621  0829               	movf	?___ftmul,w
  5835  0622  00BC               	movwf	___ftadd@f2
  5836  0623  082A               	movf	?___ftmul+1,w
  5837  0624  00BD               	movwf	___ftadd@f2+1
  5838  0625  082B               	movf	?___ftmul+2,w
  5839  0626  00BE               	movwf	___ftadd@f2+2
  5840  0627  3182  2286  3185   	fcall	___ftadd
  5841  062A  0020               	movlb	0	; select bank0
  5842  062B  0839               	movf	?___ftadd,w
  5843  062C  00DB               	movwf	_I
  5844  062D  083A               	movf	?___ftadd+1,w
  5845  062E  00DC               	movwf	_I+1
  5846  062F  083B               	movf	?___ftadd+2,w
  5847  0630  00DD               	movwf	_I+2
  5848                           
  5849                           ;PI.c: 46: int dutycycle1 = (int)(P + I);
  5850  0631  0856               	movf	PI@P,w
  5851  0632  00BC               	movwf	___ftadd@f2
  5852  0633  0857               	movf	PI@P+1,w
  5853  0634  00BD               	movwf	___ftadd@f2+1
  5854  0635  0858               	movf	PI@P+2,w
  5855  0636  00BE               	movwf	___ftadd@f2+2
  5856  0637  085B               	movf	_I,w
  5857  0638  00B9               	movwf	___ftadd@f1
  5858  0639  085C               	movf	_I+1,w
  5859  063A  00BA               	movwf	___ftadd@f1+1
  5860  063B  085D               	movf	_I+2,w
  5861  063C  00BB               	movwf	___ftadd@f1+2
  5862  063D  3182  2286  3185   	fcall	___ftadd
  5863  0640  0020               	movlb	0	; select bank0
  5864  0641  0839               	movf	?___ftadd,w
  5865  0642  00C6               	movwf	___fttol@f1
  5866  0643  083A               	movf	?___ftadd+1,w
  5867  0644  00C7               	movwf	___fttol@f1+1
  5868  0645  083B               	movf	?___ftadd+2,w
  5869  0646  00C8               	movwf	___fttol@f1+2
  5870  0647  3187  271C  3185   	fcall	___fttol
  5871  064A  0020               	movlb	0	; select bank0
  5872  064B  0847               	movf	?___fttol+1,w
  5873  064C  00DA               	movwf	PI@dutycycle1+1
  5874  064D  0846               	movf	?___fttol,w
  5875  064E  00D9               	movwf	PI@dutycycle1
  5876                           
  5877                           ;PI.c: 47: if (dutycycle1 < 255 && dutycycle1 > 0){
  5878  064F  085A               	movf	PI@dutycycle1+1,w
  5879  0650  3A80               	xorlw	128
  5880  0651  00D4               	movwf	??_PI
  5881  0652  3080               	movlw	128
  5882  0653  0254               	subwf	??_PI,w
  5883  0654  1D03               	skipz
  5884  0655  2E58               	goto	u5215
  5885  0656  30FF               	movlw	255
  5886  0657  0259               	subwf	PI@dutycycle1,w
  5887  0658                     u5215:	
  5888  0658  1803               	skipnc
  5889  0659  2E6B               	goto	l3951
  5890  065A  0020               	movlb	0	; select bank0
  5891  065B  085A               	movf	PI@dutycycle1+1,w
  5892  065C  3A80               	xorlw	128
  5893  065D  00D4               	movwf	??_PI
  5894  065E  3080               	movlw	128
  5895  065F  0254               	subwf	??_PI,w
  5896  0660  1D03               	skipz
  5897  0661  2E64               	goto	u5225
  5898  0662  3001               	movlw	1
  5899  0663  0259               	subwf	PI@dutycycle1,w
  5900  0664                     u5225:	
  5901  0664  1C03               	skipc
  5902  0665  2E6B               	goto	l3951
  5903                           
  5904                           ;PI.c: 48: dutycycle = dutycycle1;
  5905  0666  0020               	movlb	0	; select bank0
  5906  0667  085A               	movf	PI@dutycycle1+1,w
  5907  0668  00E3               	movwf	_dutycycle+1
  5908  0669  0859               	movf	PI@dutycycle1,w
  5909  066A  00E2               	movwf	_dutycycle
  5910  066B                     l3951:	
  5911                           
  5912                           ;PI.c: 49: }
  5913                           ;PI.c: 52: PWM5_LoadDutyValue(dutycycle);
  5914  066B  0020               	movlb	0	; select bank0
  5915  066C  0863               	movf	_dutycycle+1,w
  5916  066D  00F4               	movwf	PWM5_LoadDutyValue@dutyValue+1
  5917  066E  0862               	movf	_dutycycle,w
  5918  066F  00F3               	movwf	PWM5_LoadDutyValue@dutyValue
  5919  0670  318C  24FA         	fcall	_PWM5_LoadDutyValue
  5920  0672  0008               	return
  5921  0673                     __end_of_PI:	
  5922                           
  5923                           	psect	text12
  5924  071C                     __ptext12:	
  5925 ;; *************** function ___fttol *****************
  5926 ;; Defined at:
  5927 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  f1              3   38[BANK0 ] float 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  lval            4   47[BANK0 ] unsigned long 
  5932 ;;  exp1            1   51[BANK0 ] unsigned char 
  5933 ;;  sign1           1   46[BANK0 ] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  4   38[BANK0 ] long 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5943 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5946 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;Total ram usage:       14 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    2
  5950 ;; This function calls:
  5951 ;;		Nothing
  5952 ;; This function is called by:
  5953 ;;		_PI
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           
  5958                           ;psect for function ___fttol
  5959  071C                     ___fttol:	
  5960                           
  5961                           ;incstack = 0
  5962                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5963  071C  0020               	movlb	0	; select bank0
  5964  071D  0846               	movf	___fttol@f1,w
  5965  071E  00CA               	movwf	??___fttol
  5966  071F  0847               	movf	___fttol@f1+1,w
  5967  0720  00CB               	movwf	??___fttol+1
  5968  0721  0848               	movf	___fttol@f1+2,w
  5969  0722  00CC               	movwf	??___fttol+2
  5970  0723  1003               	clrc
  5971  0724  0D4B               	rlf	??___fttol+1,w
  5972  0725  0D4C               	rlf	??___fttol+2,w
  5973  0726  00CD               	movwf	??___fttol+3
  5974  0727  084D               	movf	??___fttol+3,w
  5975  0728  00D3               	movwf	___fttol@exp1
  5976  0729  0853               	movf	___fttol@exp1,w
  5977  072A  1D03               	btfss	3,2
  5978  072B  2F35               	goto	l3877
  5979  072C  3000               	movlw	0
  5980  072D  00C9               	movwf	?___fttol+3
  5981  072E  3000               	movlw	0
  5982  072F  00C8               	movwf	?___fttol+2
  5983  0730  3000               	movlw	0
  5984  0731  00C7               	movwf	?___fttol+1
  5985  0732  3000               	movlw	0
  5986  0733  00C6               	movwf	?___fttol
  5987  0734  0008               	return
  5988  0735                     l3877:	
  5989  0735  0846               	movf	___fttol@f1,w
  5990  0736  00CA               	movwf	??___fttol
  5991  0737  0847               	movf	___fttol@f1+1,w
  5992  0738  00CB               	movwf	??___fttol+1
  5993  0739  0848               	movf	___fttol@f1+2,w
  5994  073A  00CC               	movwf	??___fttol+2
  5995  073B  3017               	movlw	23
  5996  073C                     u5115:	
  5997  073C  36CC               	lsrf	??___fttol+2,f
  5998  073D  0CCB               	rrf	??___fttol+1,f
  5999  073E  0CCA               	rrf	??___fttol,f
  6000  073F  0B89               	decfsz	9,f
  6001  0740  2F3C               	goto	u5115
  6002  0741  084A               	movf	??___fttol,w
  6003  0742  00CD               	movwf	??___fttol+3
  6004  0743  084D               	movf	??___fttol+3,w
  6005  0744  00CE               	movwf	___fttol@sign1
  6006  0745  17C7               	bsf	___fttol@f1+1,7
  6007  0746  30FF               	movlw	255
  6008  0747  05C6               	andwf	___fttol@f1,f
  6009  0748  30FF               	movlw	255
  6010  0749  05C7               	andwf	___fttol@f1+1,f
  6011  074A  3000               	movlw	0
  6012  074B  05C8               	andwf	___fttol@f1+2,f
  6013  074C  0846               	movf	___fttol@f1,w
  6014  074D  00CF               	movwf	___fttol@lval
  6015  074E  0847               	movf	___fttol@f1+1,w
  6016  074F  00D0               	movwf	___fttol@lval+1
  6017  0750  0848               	movf	___fttol@f1+2,w
  6018  0751  00D1               	movwf	___fttol@lval+2
  6019  0752  01D2               	clrf	___fttol@lval+3
  6020  0753  308E               	movlw	142
  6021  0754  02D3               	subwf	___fttol@exp1,f
  6022  0755  1FD3               	btfss	___fttol@exp1,7
  6023  0756  2F73               	goto	l3897
  6024  0757  0853               	movf	___fttol@exp1,w
  6025  0758  3A80               	xorlw	128
  6026  0759  3E8F               	addlw	143
  6027  075A  1803               	skipnc
  6028  075B  2F65               	goto	l3895
  6029  075C  3000               	movlw	0
  6030  075D  00C9               	movwf	?___fttol+3
  6031  075E  3000               	movlw	0
  6032  075F  00C8               	movwf	?___fttol+2
  6033  0760  3000               	movlw	0
  6034  0761  00C7               	movwf	?___fttol+1
  6035  0762  3000               	movlw	0
  6036  0763  00C6               	movwf	?___fttol
  6037  0764  0008               	return
  6038  0765                     l3895:	
  6039  0765  3001               	movlw	1
  6040  0766                     u5145:	
  6041  0766  36D2               	lsrf	___fttol@lval+3,f
  6042  0767  0CD1               	rrf	___fttol@lval+2,f
  6043  0768  0CD0               	rrf	___fttol@lval+1,f
  6044  0769  0CCF               	rrf	___fttol@lval,f
  6045  076A  0B89               	decfsz	9,f
  6046  076B  2F66               	goto	u5145
  6047  076C  3001               	movlw	1
  6048  076D  00CA               	movwf	??___fttol
  6049  076E  084A               	movf	??___fttol,w
  6050  076F  07D3               	addwf	___fttol@exp1,f
  6051  0770  1903               	btfsc	3,2
  6052  0771  2F8C               	goto	l3905
  6053  0772  2F65               	goto	l3895
  6054  0773                     l3897:	
  6055  0773  3018               	movlw	24
  6056  0774  0253               	subwf	___fttol@exp1,w
  6057  0775  1C03               	skipc
  6058  0776  2F89               	goto	l877
  6059  0777  3000               	movlw	0
  6060  0778  00C9               	movwf	?___fttol+3
  6061  0779  3000               	movlw	0
  6062  077A  00C8               	movwf	?___fttol+2
  6063  077B  3000               	movlw	0
  6064  077C  00C7               	movwf	?___fttol+1
  6065  077D  3000               	movlw	0
  6066  077E  00C6               	movwf	?___fttol
  6067  077F  0008               	return
  6068  0780                     l3903:	
  6069  0780  3001               	movlw	1
  6070  0781                     u5175:	
  6071  0781  35CF               	lslf	___fttol@lval,f
  6072  0782  0DD0               	rlf	___fttol@lval+1,f
  6073  0783  0DD1               	rlf	___fttol@lval+2,f
  6074  0784  0DD2               	rlf	___fttol@lval+3,f
  6075  0785  0B89               	decfsz	9,f
  6076  0786  2F81               	goto	u5175
  6077  0787  3001               	movlw	1
  6078  0788  02D3               	subwf	___fttol@exp1,f
  6079  0789                     l877:	
  6080  0789  0853               	movf	___fttol@exp1,w
  6081  078A  1D03               	btfss	3,2
  6082  078B  2F80               	goto	l3903
  6083  078C                     l3905:	
  6084  078C  084E               	movf	___fttol@sign1,w
  6085  078D  1903               	btfsc	3,2
  6086  078E  2F9A               	goto	l3909
  6087  078F  09CF               	comf	___fttol@lval,f
  6088  0790  09D0               	comf	___fttol@lval+1,f
  6089  0791  09D1               	comf	___fttol@lval+2,f
  6090  0792  09D2               	comf	___fttol@lval+3,f
  6091  0793  0ACF               	incf	___fttol@lval,f
  6092  0794  1903               	skipnz
  6093  0795  0AD0               	incf	___fttol@lval+1,f
  6094  0796  1903               	skipnz
  6095  0797  0AD1               	incf	___fttol@lval+2,f
  6096  0798  1903               	skipnz
  6097  0799  0AD2               	incf	___fttol@lval+3,f
  6098  079A                     l3909:	
  6099  079A  0852               	movf	___fttol@lval+3,w
  6100  079B  00C9               	movwf	?___fttol+3
  6101  079C  0851               	movf	___fttol@lval+2,w
  6102  079D  00C8               	movwf	?___fttol+2
  6103  079E  0850               	movf	___fttol@lval+1,w
  6104  079F  00C7               	movwf	?___fttol+1
  6105  07A0  084F               	movf	___fttol@lval,w
  6106  07A1  00C6               	movwf	?___fttol
  6107  07A2  0008               	return
  6108  07A3                     __end_of___fttol:	
  6109                           
  6110                           	psect	text13
  6111  0286                     __ptext13:	
  6112 ;; *************** function ___ftadd *****************
  6113 ;; Defined at:
  6114 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  f1              3   25[BANK0 ] float 
  6117 ;;  f2              3   28[BANK0 ] float 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  exp1            1   37[BANK0 ] unsigned char 
  6120 ;;  exp2            1   36[BANK0 ] unsigned char 
  6121 ;;  sign            1   35[BANK0 ] unsigned char 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  3   25[BANK0 ] float 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2, status,0, pclath, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6131 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6134 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;Total ram usage:       13 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    3
  6138 ;; This function calls:
  6139 ;;		___ftpack
  6140 ;; This function is called by:
  6141 ;;		_PI
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           
  6146                           ;psect for function ___ftadd
  6147  0286                     ___ftadd:	
  6148                           
  6149                           ;incstack = 0
  6150                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6151  0286  0020               	movlb	0	; select bank0
  6152  0287  0839               	movf	___ftadd@f1,w
  6153  0288  00BF               	movwf	??___ftadd
  6154  0289  083A               	movf	___ftadd@f1+1,w
  6155  028A  00C0               	movwf	??___ftadd+1
  6156  028B  083B               	movf	___ftadd@f1+2,w
  6157  028C  00C1               	movwf	??___ftadd+2
  6158  028D  1003               	clrc
  6159  028E  0D40               	rlf	??___ftadd+1,w
  6160  028F  0D41               	rlf	??___ftadd+2,w
  6161  0290  00C2               	movwf	??___ftadd+3
  6162  0291  0842               	movf	??___ftadd+3,w
  6163  0292  00C5               	movwf	___ftadd@exp1
  6164  0293  083C               	movf	___ftadd@f2,w
  6165  0294  00BF               	movwf	??___ftadd
  6166  0295  083D               	movf	___ftadd@f2+1,w
  6167  0296  00C0               	movwf	??___ftadd+1
  6168  0297  083E               	movf	___ftadd@f2+2,w
  6169  0298  00C1               	movwf	??___ftadd+2
  6170  0299  1003               	clrc
  6171  029A  0D40               	rlf	??___ftadd+1,w
  6172  029B  0D41               	rlf	??___ftadd+2,w
  6173  029C  00C2               	movwf	??___ftadd+3
  6174  029D  0842               	movf	??___ftadd+3,w
  6175  029E  00C4               	movwf	___ftadd@exp2
  6176  029F  0845               	movf	___ftadd@exp1,w
  6177  02A0  1903               	btfsc	3,2
  6178  02A1  2AAE               	goto	l3807
  6179  02A2  0844               	movf	___ftadd@exp2,w
  6180  02A3  0245               	subwf	___ftadd@exp1,w
  6181  02A4  1803               	skipnc
  6182  02A5  2AB5               	goto	l3811
  6183  02A6  0345               	decf	___ftadd@exp1,w
  6184  02A7  3AFF               	xorlw	255
  6185  02A8  0744               	addwf	___ftadd@exp2,w
  6186  02A9  00BF               	movwf	??___ftadd
  6187  02AA  3019               	movlw	25
  6188  02AB  023F               	subwf	??___ftadd,w
  6189  02AC  1C03               	skipc
  6190  02AD  2AB5               	goto	l3811
  6191  02AE                     l3807:	
  6192  02AE  083C               	movf	___ftadd@f2,w
  6193  02AF  00B9               	movwf	?___ftadd
  6194  02B0  083D               	movf	___ftadd@f2+1,w
  6195  02B1  00BA               	movwf	?___ftadd+1
  6196  02B2  083E               	movf	___ftadd@f2+2,w
  6197  02B3  00BB               	movwf	?___ftadd+2
  6198  02B4  0008               	return
  6199  02B5                     l3811:	
  6200  02B5  0844               	movf	___ftadd@exp2,w
  6201  02B6  1903               	btfsc	3,2
  6202  02B7  0008               	return
  6203  02B8  0845               	movf	___ftadd@exp1,w
  6204  02B9  0244               	subwf	___ftadd@exp2,w
  6205  02BA  1803               	skipnc
  6206  02BB  2AC4               	goto	l3817
  6207  02BC  0344               	decf	___ftadd@exp2,w
  6208  02BD  3AFF               	xorlw	255
  6209  02BE  0745               	addwf	___ftadd@exp1,w
  6210  02BF  00BF               	movwf	??___ftadd
  6211  02C0  3019               	movlw	25
  6212  02C1  023F               	subwf	??___ftadd,w
  6213  02C2  1803               	btfsc	3,0
  6214  02C3  0008               	return
  6215  02C4                     l3817:	
  6216  02C4  3006               	movlw	6
  6217  02C5  00BF               	movwf	??___ftadd
  6218  02C6  083F               	movf	??___ftadd,w
  6219  02C7  00C3               	movwf	___ftadd@sign
  6220  02C8  1BBB               	btfsc	___ftadd@f1+2,7
  6221  02C9  17C3               	bsf	___ftadd@sign,7
  6222  02CA  1BBE               	btfsc	___ftadd@f2+2,7
  6223  02CB  1743               	bsf	___ftadd@sign,6
  6224  02CC  17BA               	bsf	___ftadd@f1+1,7
  6225  02CD  30FF               	movlw	255
  6226  02CE  05B9               	andwf	___ftadd@f1,f
  6227  02CF  30FF               	movlw	255
  6228  02D0  05BA               	andwf	___ftadd@f1+1,f
  6229  02D1  3000               	movlw	0
  6230  02D2  05BB               	andwf	___ftadd@f1+2,f
  6231  02D3  17BD               	bsf	___ftadd@f2+1,7
  6232  02D4  30FF               	movlw	255
  6233  02D5  05BC               	andwf	___ftadd@f2,f
  6234  02D6  30FF               	movlw	255
  6235  02D7  05BD               	andwf	___ftadd@f2+1,f
  6236  02D8  3000               	movlw	0
  6237  02D9  05BE               	andwf	___ftadd@f2+2,f
  6238  02DA  0844               	movf	___ftadd@exp2,w
  6239  02DB  0245               	subwf	___ftadd@exp1,w
  6240  02DC  1803               	skipnc
  6241  02DD  2B00               	goto	l3839
  6242  02DE                     l3829:	
  6243  02DE  3001               	movlw	1
  6244  02DF                     u4965:	
  6245  02DF  35BC               	lslf	___ftadd@f2,f
  6246  02E0  0DBD               	rlf	___ftadd@f2+1,f
  6247  02E1  0DBE               	rlf	___ftadd@f2+2,f
  6248  02E2  0B89               	decfsz	9,f
  6249  02E3  2ADF               	goto	u4965
  6250  02E4  3001               	movlw	1
  6251  02E5  02C4               	subwf	___ftadd@exp2,f
  6252  02E6  0844               	movf	___ftadd@exp2,w
  6253  02E7  0645               	xorwf	___ftadd@exp1,w
  6254  02E8  1903               	skipnz
  6255  02E9  2AFB               	goto	l3837
  6256  02EA  3001               	movlw	1
  6257  02EB  02C3               	subwf	___ftadd@sign,f
  6258  02EC  0843               	movf	___ftadd@sign,w
  6259  02ED  3907               	andlw	7
  6260  02EE  1903               	btfsc	3,2
  6261  02EF  2AFB               	goto	l3837
  6262  02F0  2ADE               	goto	l3829
  6263  02F1                     l3835:	
  6264  02F1  3001               	movlw	1
  6265  02F2                     u4995:	
  6266  02F2  36BB               	lsrf	___ftadd@f1+2,f
  6267  02F3  0CBA               	rrf	___ftadd@f1+1,f
  6268  02F4  0CB9               	rrf	___ftadd@f1,f
  6269  02F5  0B89               	decfsz	9,f
  6270  02F6  2AF2               	goto	u4995
  6271  02F7  3001               	movlw	1
  6272  02F8  00BF               	movwf	??___ftadd
  6273  02F9  083F               	movf	??___ftadd,w
  6274  02FA  07C5               	addwf	___ftadd@exp1,f
  6275  02FB                     l3837:	
  6276  02FB  0845               	movf	___ftadd@exp1,w
  6277  02FC  0644               	xorwf	___ftadd@exp2,w
  6278  02FD  1903               	btfsc	3,2
  6279  02FE  2B25               	goto	l817
  6280  02FF  2AF1               	goto	l3835
  6281  0300                     l3839:	
  6282  0300  0845               	movf	___ftadd@exp1,w
  6283  0301  0244               	subwf	___ftadd@exp2,w
  6284  0302  1803               	skipnc
  6285  0303  2B25               	goto	l817
  6286  0304                     l3841:	
  6287  0304  3001               	movlw	1
  6288  0305                     u5025:	
  6289  0305  35B9               	lslf	___ftadd@f1,f
  6290  0306  0DBA               	rlf	___ftadd@f1+1,f
  6291  0307  0DBB               	rlf	___ftadd@f1+2,f
  6292  0308  0B89               	decfsz	9,f
  6293  0309  2B05               	goto	u5025
  6294  030A  3001               	movlw	1
  6295  030B  02C5               	subwf	___ftadd@exp1,f
  6296  030C  0844               	movf	___ftadd@exp2,w
  6297  030D  0645               	xorwf	___ftadd@exp1,w
  6298  030E  1903               	skipnz
  6299  030F  2B21               	goto	l3849
  6300  0310  3001               	movlw	1
  6301  0311  02C3               	subwf	___ftadd@sign,f
  6302  0312  0843               	movf	___ftadd@sign,w
  6303  0313  3907               	andlw	7
  6304  0314  1903               	btfsc	3,2
  6305  0315  2B21               	goto	l3849
  6306  0316  2B04               	goto	l3841
  6307  0317                     l3847:	
  6308  0317  3001               	movlw	1
  6309  0318                     u5055:	
  6310  0318  36BE               	lsrf	___ftadd@f2+2,f
  6311  0319  0CBD               	rrf	___ftadd@f2+1,f
  6312  031A  0CBC               	rrf	___ftadd@f2,f
  6313  031B  0B89               	decfsz	9,f
  6314  031C  2B18               	goto	u5055
  6315  031D  3001               	movlw	1
  6316  031E  00BF               	movwf	??___ftadd
  6317  031F  083F               	movf	??___ftadd,w
  6318  0320  07C4               	addwf	___ftadd@exp2,f
  6319  0321                     l3849:	
  6320  0321  0845               	movf	___ftadd@exp1,w
  6321  0322  0644               	xorwf	___ftadd@exp2,w
  6322  0323  1D03               	skipz
  6323  0324  2B17               	goto	l3847
  6324  0325                     l817:	
  6325  0325  1FC3               	btfss	___ftadd@sign,7
  6326  0326  2B37               	goto	l3853
  6327  0327  30FF               	movlw	255
  6328  0328  06B9               	xorwf	___ftadd@f1,f
  6329  0329  30FF               	movlw	255
  6330  032A  06BA               	xorwf	___ftadd@f1+1,f
  6331  032B  30FF               	movlw	255
  6332  032C  06BB               	xorwf	___ftadd@f1+2,f
  6333  032D  3001               	movlw	1
  6334  032E  07B9               	addwf	___ftadd@f1,f
  6335  032F  3000               	movlw	0
  6336  0330  1803               	skipnc
  6337  0331  3001               	movlw	1
  6338  0332  07BA               	addwf	___ftadd@f1+1,f
  6339  0333  3000               	movlw	0
  6340  0334  1803               	skipnc
  6341  0335  3001               	movlw	1
  6342  0336  07BB               	addwf	___ftadd@f1+2,f
  6343  0337                     l3853:	
  6344  0337  1F43               	btfss	___ftadd@sign,6
  6345  0338  2B49               	goto	l3857
  6346  0339  30FF               	movlw	255
  6347  033A  06BC               	xorwf	___ftadd@f2,f
  6348  033B  30FF               	movlw	255
  6349  033C  06BD               	xorwf	___ftadd@f2+1,f
  6350  033D  30FF               	movlw	255
  6351  033E  06BE               	xorwf	___ftadd@f2+2,f
  6352  033F  3001               	movlw	1
  6353  0340  07BC               	addwf	___ftadd@f2,f
  6354  0341  3000               	movlw	0
  6355  0342  1803               	skipnc
  6356  0343  3001               	movlw	1
  6357  0344  07BD               	addwf	___ftadd@f2+1,f
  6358  0345  3000               	movlw	0
  6359  0346  1803               	skipnc
  6360  0347  3001               	movlw	1
  6361  0348  07BE               	addwf	___ftadd@f2+2,f
  6362  0349                     l3857:	
  6363  0349  01C3               	clrf	___ftadd@sign
  6364  034A  0839               	movf	___ftadd@f1,w
  6365  034B  07BC               	addwf	___ftadd@f2,f
  6366  034C  083A               	movf	___ftadd@f1+1,w
  6367  034D  3DBD               	addwfc	___ftadd@f2+1,f
  6368  034E  083B               	movf	___ftadd@f1+2,w
  6369  034F  3DBE               	addwfc	___ftadd@f2+2,f
  6370  0350  1FBE               	btfss	___ftadd@f2+2,7
  6371  0351  2B64               	goto	l3867
  6372  0352  30FF               	movlw	255
  6373  0353  06BC               	xorwf	___ftadd@f2,f
  6374  0354  30FF               	movlw	255
  6375  0355  06BD               	xorwf	___ftadd@f2+1,f
  6376  0356  30FF               	movlw	255
  6377  0357  06BE               	xorwf	___ftadd@f2+2,f
  6378  0358  3001               	movlw	1
  6379  0359  07BC               	addwf	___ftadd@f2,f
  6380  035A  3000               	movlw	0
  6381  035B  1803               	skipnc
  6382  035C  3001               	movlw	1
  6383  035D  07BD               	addwf	___ftadd@f2+1,f
  6384  035E  3000               	movlw	0
  6385  035F  1803               	skipnc
  6386  0360  3001               	movlw	1
  6387  0361  07BE               	addwf	___ftadd@f2+2,f
  6388  0362  01C3               	clrf	___ftadd@sign
  6389  0363  0AC3               	incf	___ftadd@sign,f
  6390  0364                     l3867:	
  6391  0364  083C               	movf	___ftadd@f2,w
  6392  0365  00F3               	movwf	___ftpack@arg
  6393  0366  083D               	movf	___ftadd@f2+1,w
  6394  0367  00F4               	movwf	___ftpack@arg+1
  6395  0368  083E               	movf	___ftadd@f2+2,w
  6396  0369  00F5               	movwf	___ftpack@arg+2
  6397  036A  0845               	movf	___ftadd@exp1,w
  6398  036B  00BF               	movwf	??___ftadd
  6399  036C  083F               	movf	??___ftadd,w
  6400  036D  00F6               	movwf	___ftpack@exp
  6401  036E  0843               	movf	___ftadd@sign,w
  6402  036F  00C0               	movwf	??___ftadd+1
  6403  0370  0840               	movf	??___ftadd+1,w
  6404  0371  00F7               	movwf	___ftpack@sign
  6405  0372  318F  272E         	fcall	___ftpack
  6406  0374  0873               	movf	?___ftpack,w
  6407  0375  0020               	movlb	0	; select bank0
  6408  0376  00B9               	movwf	?___ftadd
  6409  0377  0874               	movf	?___ftpack+1,w
  6410  0378  00BA               	movwf	?___ftadd+1
  6411  0379  0875               	movf	?___ftpack+2,w
  6412  037A  00BB               	movwf	?___ftadd+2
  6413  037B  0008               	return
  6414  037C                     __end_of___ftadd:	
  6415                           
  6416                           	psect	text14
  6417  0DB1                     __ptext14:	
  6418 ;; *************** function ___awtoft *****************
  6419 ;; Defined at:
  6420 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  c               2    3[BANK0 ] int 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  sign            1    8[BANK0 ] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  3    3[BANK0 ] float 
  6427 ;; Registers used:
  6428 ;;		wreg, status,2, status,0, pclath, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6434 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;Total ram usage:        6 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    3
  6441 ;; This function calls:
  6442 ;;		___ftpack
  6443 ;; This function is called by:
  6444 ;;		_PI
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           
  6449                           ;psect for function ___awtoft
  6450  0DB1                     ___awtoft:	
  6451                           
  6452                           ;incstack = 0
  6453                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6454  0DB1  0020               	movlb	0	; select bank0
  6455  0DB2  01A8               	clrf	___awtoft@sign
  6456  0DB3  1FA4               	btfss	___awtoft@c+1,7
  6457  0DB4  2DBC               	goto	l3797
  6458  0DB5  09A3               	comf	___awtoft@c,f
  6459  0DB6  09A4               	comf	___awtoft@c+1,f
  6460  0DB7  0AA3               	incf	___awtoft@c,f
  6461  0DB8  1903               	skipnz
  6462  0DB9  0AA4               	incf	___awtoft@c+1,f
  6463  0DBA  01A8               	clrf	___awtoft@sign
  6464  0DBB  0AA8               	incf	___awtoft@sign,f
  6465  0DBC                     l3797:	
  6466  0DBC  0823               	movf	___awtoft@c,w
  6467  0DBD  00F3               	movwf	___ftpack@arg
  6468  0DBE  0824               	movf	___awtoft@c+1,w
  6469  0DBF  00F4               	movwf	___ftpack@arg+1
  6470  0DC0  01F5               	clrf	___ftpack@arg+2
  6471  0DC1  308E               	movlw	142
  6472  0DC2  00A6               	movwf	??___awtoft
  6473  0DC3  0826               	movf	??___awtoft,w
  6474  0DC4  00F6               	movwf	___ftpack@exp
  6475  0DC5  0828               	movf	___awtoft@sign,w
  6476  0DC6  00A7               	movwf	??___awtoft+1
  6477  0DC7  0827               	movf	??___awtoft+1,w
  6478  0DC8  00F7               	movwf	___ftpack@sign
  6479  0DC9  318F  272E         	fcall	___ftpack
  6480  0DCB  0873               	movf	?___ftpack,w
  6481  0DCC  0020               	movlb	0	; select bank0
  6482  0DCD  00A3               	movwf	?___awtoft
  6483  0DCE  0874               	movf	?___ftpack+1,w
  6484  0DCF  00A4               	movwf	?___awtoft+1
  6485  0DD0  0875               	movf	?___ftpack+2,w
  6486  0DD1  00A5               	movwf	?___awtoft+2
  6487  0DD2  0008               	return
  6488  0DD3                     __end_of___awtoft:	
  6489                           
  6490                           	psect	text15
  6491  0CFA                     __ptext15:	
  6492 ;; *************** function _PWM5_LoadDutyValue *****************
  6493 ;; Defined at:
  6494 ;;		line 74 in file "mcc_generated_files/pwm5.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  dutyValue       2    3[COMMON] unsigned int 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      void 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6512 ;;Total ram usage:        4 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    2
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_PI
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function _PWM5_LoadDutyValue
  6524  0CFA                     _PWM5_LoadDutyValue:	
  6525                           
  6526                           ;pwm5.c: 77: PWM5DCH = (dutyValue & 0x03FC)>>2;
  6527                           
  6528                           ;incstack = 0
  6529                           ; Regs used in _PWM5_LoadDutyValue: [wreg+status,2+status,0]
  6530  0CFA  0874               	movf	PWM5_LoadDutyValue@dutyValue+1,w
  6531  0CFB  00F6               	movwf	??_PWM5_LoadDutyValue+1
  6532  0CFC  0873               	movf	PWM5_LoadDutyValue@dutyValue,w
  6533  0CFD  00F5               	movwf	??_PWM5_LoadDutyValue
  6534  0CFE  36F6               	lsrf	??_PWM5_LoadDutyValue+1,f
  6535  0CFF  0CF5               	rrf	??_PWM5_LoadDutyValue,f
  6536  0D00  36F6               	lsrf	??_PWM5_LoadDutyValue+1,f
  6537  0D01  0CF5               	rrf	??_PWM5_LoadDutyValue,f
  6538  0D02  0875               	movf	??_PWM5_LoadDutyValue,w
  6539  0D03  002C               	movlb	12	; select bank12
  6540  0D04  0098               	movwf	24	;volatile
  6541                           
  6542                           ;pwm5.c: 80: PWM5DCL = (dutyValue & 0x0003)<<6;
  6543  0D05  0873               	movf	PWM5_LoadDutyValue@dutyValue,w
  6544  0D06  3903               	andlw	3
  6545  0D07  00F5               	movwf	??_PWM5_LoadDutyValue
  6546  0D08  3005               	movlw	5
  6547  0D09                     u4695:	
  6548  0D09  35F5               	lslf	??_PWM5_LoadDutyValue,f
  6549  0D0A  3EFF               	addlw	-1
  6550  0D0B  1D03               	skipz
  6551  0D0C  2D09               	goto	u4695
  6552  0D0D  3575               	lslf	??_PWM5_LoadDutyValue,w
  6553  0D0E  0097               	movwf	23	;volatile
  6554  0D0F  0008               	return
  6555  0D10                     __end_of_PWM5_LoadDutyValue:	
  6556                           
  6557                           	psect	text16
  6558  0C29                     __ptext16:	
  6559 ;; *************** function _ADC_GetResult *****************
  6560 ;; Defined at:
  6561 ;;		line 139 in file "mcc_generated_files/adc.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  2    3[COMMON] unsigned int 
  6568 ;; Registers used:
  6569 ;;		wreg
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;Total ram usage:        2 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    2
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_PI
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           
  6590                           ;psect for function _ADC_GetResult
  6591  0C29                     _ADC_GetResult:	
  6592                           
  6593                           ;adc.c: 140: return ADC_result;
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _ADC_GetResult: [wreg]
  6597  0C29  0020               	movlb	0	; select bank0
  6598  0C2A  0869               	movf	_ADC_result+1,w
  6599  0C2B  00F4               	movwf	?_ADC_GetResult+1
  6600  0C2C  0868               	movf	_ADC_result,w
  6601  0C2D  00F3               	movwf	?_ADC_GetResult
  6602  0C2E  0008               	return
  6603  0C2F                     __end_of_ADC_GetResult:	
  6604                           
  6605                           	psect	text17
  6606  037C                     __ptext17:	
  6607 ;; *************** function _Java *****************
  6608 ;; Defined at:
  6609 ;;		line 26 in file "UART.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;		None
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  i               2   47[BANK0 ] int 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  1    wreg      void 
  6616 ;; Registers used:
  6617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;Total ram usage:        4 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    6
  6630 ;; This function calls:
  6631 ;;		_EUSART_Read
  6632 ;;		_PI_GetSensorHeight
  6633 ;;		_PI_SetKi
  6634 ;;		_PI_SetKp
  6635 ;;		_PI_SetSetpoint
  6636 ;;		_atof
  6637 ;;		_atoi
  6638 ;;		_printf
  6639 ;;		_toupper
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           
  6646                           ;psect for function _Java
  6647  037C                     _Java:	
  6648                           
  6649                           ;UART.c: 28: if (printCycle > 10) {
  6650                           
  6651                           ;incstack = 0
  6652                           ; Regs used in _Java: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6653  037C  0021               	movlb	1	; select bank1
  6654  037D  0842               	movf	(_printCycle+1)^(0+128),w
  6655  037E  3A80               	xorlw	128
  6656  037F  0020               	movlb	0	; select bank0
  6657  0380  00CD               	movwf	??_Java
  6658  0381  3080               	movlw	128
  6659  0382  024D               	subwf	??_Java,w
  6660  0383  1D03               	skipz
  6661  0384  2B88               	goto	u5235
  6662  0385  300B               	movlw	11
  6663  0386  0021               	movlb	1	; select bank1
  6664  0387  0241               	subwf	_printCycle^(0+128),w
  6665  0388                     u5235:	
  6666  0388  1C03               	skipc
  6667  0389  2BA8               	goto	l3963
  6668                           
  6669                           ;UART.c: 29: sensorHeight = PI_GetSensorHeight();
  6670  038A  318C  241D  3183   	fcall	_PI_GetSensorHeight
  6671  038D  0874               	movf	?_PI_GetSensorHeight+1,w
  6672  038E  0020               	movlb	0	; select bank0
  6673  038F  00E1               	movwf	UART@sensorHeight+1
  6674  0390  0873               	movf	?_PI_GetSensorHeight,w
  6675  0391  00E0               	movwf	UART@sensorHeight
  6676                           
  6677                           ;UART.c: 30: printf("%d", sensorHeight);
  6678  0392  3010               	movlw	low (STR_2| (0+32768))
  6679  0393  00A9               	movwf	printf@f
  6680  0394  3090               	movlw	high (STR_2| (0+32768))
  6681  0395  00AA               	movwf	printf@f+1
  6682  0396  0861               	movf	UART@sensorHeight+1,w
  6683  0397  00AC               	movwf	?_printf+3
  6684  0398  0860               	movf	UART@sensorHeight,w
  6685  0399  00AB               	movwf	?_printf+2
  6686  039A  3184  2458  3183   	fcall	_printf
  6687                           
  6688                           ;UART.c: 31: printf(">");
  6689  039D  3013               	movlw	low (STR_3| (0+32768))
  6690  039E  0020               	movlb	0	; select bank0
  6691  039F  00A9               	movwf	printf@f
  6692  03A0  3090               	movlw	high (STR_3| (0+32768))
  6693  03A1  00AA               	movwf	printf@f+1
  6694  03A2  3184  2458  3183   	fcall	_printf
  6695                           
  6696                           ;UART.c: 32: printCycle = 0;
  6697  03A5  0021               	movlb	1	; select bank1
  6698  03A6  01C1               	clrf	_printCycle^(0+128)
  6699  03A7  01C2               	clrf	(_printCycle+1)^(0+128)
  6700  03A8                     l3963:	
  6701                           
  6702                           ;UART.c: 33: }
  6703                           ;UART.c: 34: printCycle++;
  6704  03A8  3001               	movlw	1
  6705  03A9  0021               	movlb	1	; select bank1
  6706  03AA  07C1               	addwf	_printCycle^(0+128),f
  6707  03AB  3000               	movlw	0
  6708  03AC  3DC2               	addwfc	(_printCycle+1)^(0+128),f
  6709                           
  6710                           ;UART.c: 37: if ((eusartRxCount)) {
  6711  03AD  0878               	movf	_eusartRxCount,w	;volatile
  6712  03AE  1903               	btfsc	3,2
  6713  03AF  0008               	return
  6714                           
  6715                           ;UART.c: 38: index = 0;
  6716  03B0  0020               	movlb	0	; select bank0
  6717  03B1  01DE               	clrf	_index
  6718  03B2  01DF               	clrf	_index+1
  6719                           
  6720                           ;UART.c: 39: _delay((unsigned long)((30)*(32000000/4000.0)));
  6721  03B3  3002               	movlw	2
  6722  03B4  0020               	movlb	0	; select bank0
  6723  03B5  00CE               	movwf	??_Java+1
  6724  03B6  3038               	movlw	56
  6725  03B7  00CD               	movwf	??_Java
  6726  03B8  30AD               	movlw	173
  6727  03B9                     u5297:	
  6728  03B9  0B89               	decfsz	9,f
  6729  03BA  2BB9               	goto	u5297
  6730  03BB  0BCD               	decfsz	??_Java,f
  6731  03BC  2BB9               	goto	u5297
  6732  03BD  0BCE               	decfsz	??_Java+1,f
  6733  03BE  2BB9               	goto	u5297
  6734  03BF                     l3975:	
  6735                           ;UART.c: 40: while ((eusartRxCount)) {
  6736                           
  6737  03BF  0878               	movf	_eusartRxCount,w	;volatile
  6738  03C0  1903               	btfsc	3,2
  6739  03C1  2BD2               	goto	l3977
  6740                           
  6741                           ;UART.c: 41: data[index] = EUSART_Read();
  6742  03C2  318D  2577  3183   	fcall	_EUSART_Read
  6743  03C5  0020               	movlb	0	; select bank0
  6744  03C6  00CD               	movwf	??_Java
  6745  03C7  085E               	movf	_index,w
  6746  03C8  3EA0               	addlw	(low (_data| 0))& (0+255)
  6747  03C9  0086               	movwf	6
  6748  03CA  0187               	clrf	7
  6749  03CB  084D               	movf	??_Java,w
  6750  03CC  0081               	movwf	1
  6751                           
  6752                           ;UART.c: 42: index++;
  6753  03CD  3001               	movlw	1
  6754  03CE  07DE               	addwf	_index,f
  6755  03CF  3000               	movlw	0
  6756  03D0  3DDF               	addwfc	_index+1,f
  6757  03D1  2BBF               	goto	l3975
  6758  03D2                     l3977:	
  6759                           
  6760                           ;UART.c: 43: }
  6761                           ;UART.c: 44: data[index] = '\0';
  6762  03D2  0020               	movlb	0	; select bank0
  6763  03D3  085E               	movf	_index,w
  6764  03D4  3EA0               	addlw	(low (_data| 0))& (0+255)
  6765  03D5  0086               	movwf	6
  6766  03D6  0187               	clrf	7
  6767  03D7  0181               	clrf	1
  6768                           
  6769                           ;UART.c: 45: command = data[0];
  6770  03D8  0021               	movlb	1	; select bank1
  6771  03D9  0820               	movf	_data^(0+128),w
  6772  03DA  0020               	movlb	0	; select bank0
  6773  03DB  00CD               	movwf	??_Java
  6774  03DC  084D               	movf	??_Java,w
  6775  03DD  00EA               	movwf	_command
  6776                           
  6777                           ;UART.c: 46: command = toupper(command);
  6778  03DE  086A               	movf	_command,w
  6779  03DF  318C  24C8  3183   	fcall	_toupper
  6780  03E2  0020               	movlb	0	; select bank0
  6781  03E3  00CD               	movwf	??_Java
  6782  03E4  084D               	movf	??_Java,w
  6783  03E5  00EA               	movwf	_command
  6784                           
  6785                           ;UART.c: 47: for (int i = 0; i <8; i++){
  6786  03E6  01CF               	clrf	Java@i
  6787  03E7  01D0               	clrf	Java@i+1
  6788  03E8                     L1:	
  6789  03E8  0850               	movf	Java@i+1,w
  6790  03E9  3A80               	xorlw	128
  6791  03EA  00CD               	movwf	??_Java
  6792  03EB  3080               	movlw	128
  6793  03EC  024D               	subwf	??_Java,w
  6794  03ED  3008               	movlw	8
  6795  03EE  1903               	btfsc	3,2
  6796  03EF  024F               	subwf	Java@i,w
  6797  03F0  1803               	btfsc	3,0
  6798  03F1  2C4A               	goto	l4009
  6799                           
  6800                           ;UART.c: 48: value[i] = data[i+1];
  6801  03F2  0020               	movlb	0	; select bank0
  6802  03F3  084F               	movf	Java@i,w
  6803  03F4  3E01               	addlw	1
  6804  03F5  3EA0               	addlw	(low (_data| 0))& (0+255)
  6805  03F6  0086               	movwf	6
  6806  03F7  0187               	clrf	7
  6807  03F8  0801               	movf	1,w
  6808  03F9  00CD               	movwf	??_Java
  6809  03FA  084F               	movf	Java@i,w
  6810  03FB  3EC9               	addlw	(low (_value| 0))& (0+255)
  6811  03FC  0086               	movwf	6
  6812  03FD  0187               	clrf	7
  6813  03FE  084D               	movf	??_Java,w
  6814  03FF  0081               	movwf	1
  6815  0400  3001               	movlw	1
  6816  0401  07CF               	addwf	Java@i,f
  6817  0402  3000               	movlw	0
  6818  0403  3DD0               	addwfc	Java@i+1,f
  6819  0404  2BE8               	goto	L1
  6820  0405                     l3995:	
  6821                           ;UART.c: 52: case 'S':
  6822                           
  6823                           ;UART.c: 49: }
  6824                           ;UART.c: 51: switch (command) {
  6825                           
  6826                           
  6827                           ;UART.c: 53: setpoint = atoi(value);
  6828  0405  30C9               	movlw	(low (_value| 0))& (0+255)
  6829  0406  318F  2795  3183   	fcall	_atoi
  6830  0409  0020               	movlb	0	; select bank0
  6831  040A  0823               	movf	?_atoi+1,w
  6832  040B  0021               	movlb	1	; select bank1
  6833  040C  00C4               	movwf	(UART@setpoint+1)^(0+128)
  6834  040D  0020               	movlb	0	; select bank0
  6835  040E  0822               	movf	?_atoi,w
  6836  040F  0021               	movlb	1	; select bank1
  6837  0410  00C3               	movwf	UART@setpoint^(0+128)
  6838                           
  6839                           ;UART.c: 54: PI_SetSetpoint(setpoint);
  6840  0411  0844               	movf	(UART@setpoint+1)^(0+128),w
  6841  0412  00F4               	movwf	PI_SetSetpoint@value+1
  6842  0413  0843               	movf	UART@setpoint^(0+128),w
  6843  0414  00F3               	movwf	PI_SetSetpoint@value
  6844  0415  318C  2423         	fcall	_PI_SetSetpoint
  6845                           
  6846                           ;UART.c: 55: break;
  6847  0417  0008               	return
  6848  0418                     l3999:	
  6849                           ;UART.c: 56: case 'P':
  6850                           
  6851                           
  6852                           ;UART.c: 57: kp = atof(value);
  6853  0418  30C9               	movlw	(low (_value| 0))& (0+255)
  6854  0419  318C  24BA  3183   	fcall	_atof
  6855  041C  0020               	movlb	0	; select bank0
  6856  041D  0848               	movf	?_atof,w
  6857  041E  0021               	movlb	1	; select bank1
  6858  041F  00B8               	movwf	UART@kp^(0+128)
  6859  0420  0020               	movlb	0	; select bank0
  6860  0421  0849               	movf	?_atof+1,w
  6861  0422  0021               	movlb	1	; select bank1
  6862  0423  00B9               	movwf	(UART@kp+1)^(0+128)
  6863  0424  0020               	movlb	0	; select bank0
  6864  0425  084A               	movf	?_atof+2,w
  6865  0426  0021               	movlb	1	; select bank1
  6866  0427  00BA               	movwf	(UART@kp+2)^(0+128)
  6867                           
  6868                           ;UART.c: 58: PI_SetKp(kp);
  6869  0428  0838               	movf	UART@kp^(0+128),w
  6870  0429  00F3               	movwf	PI_SetKp@value
  6871  042A  0839               	movf	(UART@kp+1)^(0+128),w
  6872  042B  00F4               	movwf	PI_SetKp@value+1
  6873  042C  083A               	movf	(UART@kp+2)^(0+128),w
  6874  042D  00F5               	movwf	PI_SetKp@value+2
  6875  042E  318C  2443         	fcall	_PI_SetKp
  6876                           
  6877                           ;UART.c: 59: break;
  6878  0430  0008               	return
  6879  0431                     l4003:	
  6880                           ;UART.c: 60: case 'I':
  6881                           
  6882                           
  6883                           ;UART.c: 61: ki = atof(value);
  6884  0431  30C9               	movlw	(low (_value| 0))& (0+255)
  6885  0432  318C  24BA  3183   	fcall	_atof
  6886  0435  0020               	movlb	0	; select bank0
  6887  0436  0848               	movf	?_atof,w
  6888  0437  0021               	movlb	1	; select bank1
  6889  0438  00BB               	movwf	UART@ki^(0+128)
  6890  0439  0020               	movlb	0	; select bank0
  6891  043A  0849               	movf	?_atof+1,w
  6892  043B  0021               	movlb	1	; select bank1
  6893  043C  00BC               	movwf	(UART@ki+1)^(0+128)
  6894  043D  0020               	movlb	0	; select bank0
  6895  043E  084A               	movf	?_atof+2,w
  6896  043F  0021               	movlb	1	; select bank1
  6897  0440  00BD               	movwf	(UART@ki+2)^(0+128)
  6898                           
  6899                           ;UART.c: 62: PI_SetKi(ki);
  6900  0441  083B               	movf	UART@ki^(0+128),w
  6901  0442  00F3               	movwf	PI_SetKi@value
  6902  0443  083C               	movf	(UART@ki+1)^(0+128),w
  6903  0444  00F4               	movwf	PI_SetKi@value+1
  6904  0445  083D               	movf	(UART@ki+2)^(0+128),w
  6905  0446  00F5               	movwf	PI_SetKi@value+2
  6906  0447  318C  243B         	fcall	_PI_SetKi
  6907                           
  6908                           ;UART.c: 64: };
  6909                           
  6910                           ;UART.c: 63: break;
  6911  0449  0008               	return
  6912  044A                     l4009:	
  6913  044A  0020               	movlb	0	; select bank0
  6914  044B  086A               	movf	_command,w
  6915                           
  6916                           ; Switch size 1, requested type "space"
  6917                           ; Number of cases is 3, Range of values is 73 to 83
  6918                           ; switch strategies available:
  6919                           ; Name         Instructions Cycles
  6920                           ; simple_byte           10     6 (average)
  6921                           ; direct_byte           31     9 (fixed)
  6922                           ; jumptable            263     9 (fixed)
  6923                           ;	Chosen strategy is simple_byte
  6924  044C  3A49               	xorlw	73	; case 73
  6925  044D  1903               	skipnz
  6926  044E  2C31               	goto	l4003
  6927  044F  3A19               	xorlw	25	; case 80
  6928  0450  1903               	skipnz
  6929  0451  2C18               	goto	l3999
  6930  0452  3A03               	xorlw	3	; case 83
  6931  0453  1903               	skipnz
  6932  0454  2C05               	goto	l3995
  6933  0455  2C57               	goto	l437
  6934  0456  0008               	return
  6935  0457                     l437:	
  6936  0457  0008               	return
  6937  0458                     __end_of_Java:	
  6938                           
  6939                           	psect	text18
  6940  0CC8                     __ptext18:	
  6941 ;; *************** function _toupper *****************
  6942 ;; Defined at:
  6943 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  c               1    wreg     unsigned char 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  c               1    4[COMMON] unsigned char 
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      unsigned char 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6958 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6961 ;;Total ram usage:        2 bytes
  6962 ;; Hardware stack levels used:    1
  6963 ;; Hardware stack levels required when called:    2
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_Java
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           
  6972                           ;psect for function _toupper
  6973  0CC8                     _toupper:	
  6974                           
  6975                           ;incstack = 0
  6976                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6977                           ;toupper@c stored from wreg
  6978  0CC8  00F4               	movwf	toupper@c
  6979  0CC9  307B               	movlw	123
  6980  0CCA  0274               	subwf	toupper@c,w
  6981  0CCB  1803               	skipnc
  6982  0CCC  2CD5               	goto	l3747
  6983  0CCD  3061               	movlw	97
  6984  0CCE  0274               	subwf	toupper@c,w
  6985  0CCF  1C03               	skipc
  6986  0CD0  2CD5               	goto	l3747
  6987  0CD1  30DF               	movlw	223
  6988  0CD2  00F3               	movwf	??_toupper
  6989  0CD3  0873               	movf	??_toupper,w
  6990  0CD4  05F4               	andwf	toupper@c,f
  6991  0CD5                     l3747:	
  6992  0CD5  0874               	movf	toupper@c,w
  6993  0CD6  0008               	return
  6994  0CD7                     __end_of_toupper:	
  6995                           
  6996                           	psect	text19
  6997  0458                     __ptext19:	
  6998 ;; *************** function _printf *****************
  6999 ;; Defined at:
  7000 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  f               2    9[BANK0 ] PTR const unsigned char 
  7003 ;;		 -> STR_3(2), STR_2(3), STR_1(6), 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  tmpval          4    0        struct .
  7006 ;;  val             2   20[BANK0 ] unsigned int 
  7007 ;;  cp              2    0        PTR const unsigned char 
  7008 ;;  len             2    0        unsigned int 
  7009 ;;  c               1   22[BANK0 ] char 
  7010 ;;  prec            1   19[BANK0 ] char 
  7011 ;;  flag            1   18[BANK0 ] unsigned char 
  7012 ;;  ap              1   17[BANK0 ] PTR void [1]
  7013 ;;		 -> ?_printf(2), 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  2    9[BANK0 ] int 
  7016 ;; Registers used:
  7017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7023 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7024 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7027 ;;Total ram usage:       14 bytes
  7028 ;; Hardware stack levels used:    1
  7029 ;; Hardware stack levels required when called:    4
  7030 ;; This function calls:
  7031 ;;		___lwdiv
  7032 ;;		___lwmod
  7033 ;;		_putch
  7034 ;; This function is called by:
  7035 ;;		_main
  7036 ;;		_Java
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           
  7041                           ;psect for function _printf
  7042  0458                     _printf:	
  7043                           
  7044                           ;doprnt.c: 466: va_list ap;
  7045                           ;doprnt.c: 499: signed char c;
  7046                           ;doprnt.c: 506: signed char prec;
  7047                           ;doprnt.c: 508: unsigned char flag;
  7048                           ;doprnt.c: 523: union {
  7049                           ;doprnt.c: 524: unsigned long vd;
  7050                           ;doprnt.c: 525: double integ;
  7051                           ;doprnt.c: 526: } tmpval;
  7052                           ;doprnt.c: 528: unsigned int val;
  7053                           ;doprnt.c: 529: unsigned len;
  7054                           ;doprnt.c: 530: const char * cp;
  7055                           ;doprnt.c: 533: *ap = __va_start();
  7056                           
  7057                           ;incstack = 0
  7058                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7059  0458  302B               	movlw	(low ((?_printf| 0+2)))& (0+255)
  7060  0459  0020               	movlb	0	; select bank0
  7061  045A  00AD               	movwf	??_printf
  7062  045B  082D               	movf	??_printf,w
  7063  045C  00B1               	movwf	printf@ap
  7064  045D                     l3729:	
  7065                           ;doprnt.c: 536: while(c = *f++) {
  7066                           
  7067  045D  0020               	movlb	0	; select bank0
  7068  045E  082A               	movf	printf@f+1,w
  7069  045F  00AE               	movwf	??_printf+1
  7070  0460  0829               	movf	printf@f,w
  7071  0461  00AD               	movwf	??_printf
  7072  0462  0AA9               	incf	printf@f,f
  7073  0463  1903               	skipnz
  7074  0464  0AAA               	incf	printf@f+1,f
  7075  0465  082D               	movf	??_printf,w
  7076  0466  0084               	movwf	4
  7077  0467  082E               	movf	??_printf+1,w
  7078  0468  0085               	movwf	5
  7079  0469  0800               	movf	0,w	;code access
  7080  046A  00AF               	movwf	??_printf+2
  7081  046B  082F               	movf	??_printf+2,w
  7082  046C  00B6               	movwf	printf@c
  7083  046D  0836               	movf	printf@c,w
  7084  046E  1903               	btfsc	3,2
  7085  046F  0008               	return
  7086                           
  7087                           ;doprnt.c: 538: if(c != '%')
  7088  0470  3025               	movlw	37
  7089  0471  0636               	xorwf	printf@c,w
  7090  0472  1903               	btfsc	3,2
  7091  0473  2C79               	goto	l3689
  7092                           
  7093                           ;doprnt.c: 540: {
  7094                           ;doprnt.c: 541: (putch(c) );
  7095  0474  0836               	movf	printf@c,w
  7096  0475  318C  2413  3184   	fcall	_putch
  7097                           
  7098                           ;doprnt.c: 542: continue;
  7099  0478  2C5D               	goto	l3729
  7100  0479                     l3689:	
  7101                           
  7102                           ;doprnt.c: 543: }
  7103                           ;doprnt.c: 548: flag = 0;
  7104  0479  0020               	movlb	0	; select bank0
  7105  047A  01B2               	clrf	printf@flag
  7106                           
  7107                           ;doprnt.c: 822: }
  7108                           
  7109                           ;doprnt.c: 813: continue;
  7110                           
  7111                           ;doprnt.c: 802: default:
  7112                           
  7113                           ;doprnt.c: 698: case 'i':
  7114                           ;doprnt.c: 699: break;
  7115                           
  7116                           ;doprnt.c: 697: case 'd':
  7117                           
  7118                           ;doprnt.c: 638: goto alldone;
  7119                           
  7120                           ;doprnt.c: 637: case 0:
  7121                           
  7122                           ;doprnt.c: 635: switch(c = *f++) {
  7123  047B  082A               	movf	printf@f+1,w
  7124  047C  00AE               	movwf	??_printf+1
  7125  047D  0829               	movf	printf@f,w
  7126  047E  00AD               	movwf	??_printf
  7127  047F  0AA9               	incf	printf@f,f
  7128  0480  1903               	skipnz
  7129  0481  0AAA               	incf	printf@f+1,f
  7130  0482  082D               	movf	??_printf,w
  7131  0483  0084               	movwf	4
  7132  0484  082E               	movf	??_printf+1,w
  7133  0485  0085               	movwf	5
  7134  0486  0800               	movf	0,w	;code access
  7135  0487  00B6               	movwf	printf@c
  7136                           
  7137                           ; Switch size 1, requested type "space"
  7138                           ; Number of cases is 3, Range of values is 0 to 105
  7139                           ; switch strategies available:
  7140                           ; Name         Instructions Cycles
  7141                           ; simple_byte           10     6 (average)
  7142                           ; direct_byte          218     6 (fixed)
  7143                           ; jumptable            260     6 (fixed)
  7144                           ;	Chosen strategy is simple_byte
  7145  0488  3A00               	xorlw	0	; case 0
  7146  0489  1903               	skipnz
  7147  048A  2D0F               	goto	l467
  7148  048B  3A64               	xorlw	100	; case 100
  7149  048C  1903               	skipnz
  7150  048D  2C92               	goto	l3695
  7151  048E  3A0D               	xorlw	13	; case 105
  7152  048F  1903               	skipnz
  7153  0490  2C92               	goto	l3695
  7154  0491  2C5D               	goto	l3729
  7155  0492                     l3695:	
  7156                           
  7157                           ;doprnt.c: 1253: {
  7158                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7159  0492  0831               	movf	printf@ap,w
  7160  0493  0086               	movwf	6
  7161  0494  0187               	clrf	7
  7162  0495  3F40               	moviw [0]fsr1
  7163  0496  00B4               	movwf	printf@val
  7164  0497  3F41               	moviw [1]fsr1
  7165  0498  00B5               	movwf	printf@val+1
  7166  0499  3002               	movlw	2
  7167  049A  00AD               	movwf	??_printf
  7168  049B  082D               	movf	??_printf,w
  7169  049C  07B1               	addwf	printf@ap,f
  7170                           
  7171                           ;doprnt.c: 1261: if((int)val < 0) {
  7172  049D  1FB5               	btfss	printf@val+1,7
  7173  049E  2CA8               	goto	l3705
  7174                           
  7175                           ;doprnt.c: 1262: flag |= 0x03;
  7176  049F  3003               	movlw	3
  7177  04A0  00AD               	movwf	??_printf
  7178  04A1  082D               	movf	??_printf,w
  7179  04A2  04B2               	iorwf	printf@flag,f
  7180                           
  7181                           ;doprnt.c: 1263: val = -val;
  7182  04A3  09B4               	comf	printf@val,f
  7183  04A4  09B5               	comf	printf@val+1,f
  7184  04A5  0AB4               	incf	printf@val,f
  7185  04A6  1903               	skipnz
  7186  04A7  0AB5               	incf	printf@val+1,f
  7187  04A8                     l3705:	
  7188                           
  7189                           ;doprnt.c: 1264: }
  7190                           ;doprnt.c: 1266: }
  7191                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7192  04A8  01B6               	clrf	printf@c
  7193  04A9  0AB6               	incf	printf@c,f
  7194  04AA  3005               	movlw	5
  7195  04AB  0636               	xorwf	printf@c,w
  7196  04AC  1903               	btfsc	3,2
  7197  04AD  2CCD               	goto	l3717
  7198  04AE                     l3711:	
  7199                           
  7200                           ;doprnt.c: 1306: if(val < dpowers[c])
  7201  04AE  0836               	movf	printf@c,w
  7202  04AF  00AD               	movwf	??_printf
  7203  04B0  01AE               	clrf	??_printf+1
  7204  04B1  35AD               	lslf	??_printf,f
  7205  04B2  0DAE               	rlf	??_printf+1,f
  7206  04B3  3000               	movlw	low (_dpowers| (0+32768))
  7207  04B4  072D               	addwf	??_printf,w
  7208  04B5  0084               	movwf	4
  7209  04B6  3090               	movlw	high (_dpowers| (0+32768))
  7210  04B7  3D2E               	addwfc	??_printf+1,w
  7211  04B8  0085               	movwf	5
  7212  04B9  3F00               	moviw [0]fsr0
  7213  04BA  00AF               	movwf	??_printf+2
  7214  04BB  3F01               	moviw [1]fsr0
  7215  04BC  00B0               	movwf	??_printf+3
  7216  04BD  0830               	movf	??_printf+3,w
  7217  04BE  0235               	subwf	printf@val+1,w
  7218  04BF  1D03               	skipz
  7219  04C0  2CC3               	goto	u4735
  7220  04C1  082F               	movf	??_printf+2,w
  7221  04C2  0234               	subwf	printf@val,w
  7222  04C3                     u4735:	
  7223  04C3  1C03               	btfss	3,0
  7224  04C4  2CCD               	goto	l3717
  7225                           
  7226                           ;doprnt.c: 1307: break;
  7227  04C5  3001               	movlw	1
  7228  04C6  00AD               	movwf	??_printf
  7229  04C7  082D               	movf	??_printf,w
  7230  04C8  07B6               	addwf	printf@c,f
  7231  04C9  3005               	movlw	5
  7232  04CA  0636               	xorwf	printf@c,w
  7233  04CB  1D03               	btfss	3,2
  7234  04CC  2CAE               	goto	l3711
  7235  04CD                     l3717:	
  7236                           
  7237                           ;doprnt.c: 1422: {
  7238                           ;doprnt.c: 1438: if(flag & 0x03)
  7239  04CD  0832               	movf	printf@flag,w
  7240  04CE  3903               	andlw	3
  7241  04CF  1903               	btfsc	3,2
  7242  04D0  2CD5               	goto	l3721
  7243                           
  7244                           ;doprnt.c: 1439: (putch('-') );
  7245  04D1  302D               	movlw	45
  7246  04D2  318C  2413  3184   	fcall	_putch
  7247  04D5                     l3721:	
  7248                           
  7249                           ;doprnt.c: 1469: }
  7250                           ;doprnt.c: 1472: prec = c;
  7251  04D5  0020               	movlb	0	; select bank0
  7252  04D6  0836               	movf	printf@c,w
  7253  04D7  00AD               	movwf	??_printf
  7254  04D8  082D               	movf	??_printf,w
  7255  04D9  00B3               	movwf	printf@prec
  7256  04DA                     l3727:	
  7257                           ;doprnt.c: 1474: while(prec--) {
  7258                           
  7259  04DA  30FF               	movlw	255
  7260  04DB  0020               	movlb	0	; select bank0
  7261  04DC  00AD               	movwf	??_printf
  7262  04DD  082D               	movf	??_printf,w
  7263  04DE  07B3               	addwf	printf@prec,f
  7264  04DF  0A33               	incf	printf@prec,w
  7265  04E0  1903               	btfsc	3,2
  7266  04E1  2C5D               	goto	l3729
  7267                           
  7268                           ;doprnt.c: 1478: {
  7269                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  7270  04E2  300A               	movlw	10
  7271  04E3  00A3               	movwf	___lwmod@divisor
  7272  04E4  3000               	movlw	0
  7273  04E5  00A4               	movwf	___lwmod@divisor+1
  7274  04E6  0833               	movf	printf@prec,w
  7275  04E7  00AD               	movwf	??_printf
  7276  04E8  01AE               	clrf	??_printf+1
  7277  04E9  35AD               	lslf	??_printf,f
  7278  04EA  0DAE               	rlf	??_printf+1,f
  7279  04EB  3000               	movlw	low (_dpowers| (0+32768))
  7280  04EC  072D               	addwf	??_printf,w
  7281  04ED  0084               	movwf	4
  7282  04EE  3090               	movlw	high (_dpowers| (0+32768))
  7283  04EF  3D2E               	addwfc	??_printf+1,w
  7284  04F0  0085               	movwf	5
  7285  04F1  3F00               	moviw [0]fsr0
  7286  04F2  00F3               	movwf	___lwdiv@divisor
  7287  04F3  3F01               	moviw [1]fsr0
  7288  04F4  00F4               	movwf	___lwdiv@divisor+1
  7289  04F5  0835               	movf	printf@val+1,w
  7290  04F6  00F6               	movwf	___lwdiv@dividend+1
  7291  04F7  0834               	movf	printf@val,w
  7292  04F8  00F5               	movwf	___lwdiv@dividend
  7293  04F9  318E  2680  3184   	fcall	___lwdiv
  7294  04FC  0874               	movf	?___lwdiv+1,w
  7295  04FD  0020               	movlb	0	; select bank0
  7296  04FE  00A6               	movwf	___lwmod@dividend+1
  7297  04FF  0873               	movf	?___lwdiv,w
  7298  0500  00A5               	movwf	___lwmod@dividend
  7299  0501  318D  25F6  3184   	fcall	___lwmod
  7300  0504  0020               	movlb	0	; select bank0
  7301  0505  0823               	movf	?___lwmod,w
  7302  0506  3E30               	addlw	48
  7303  0507  00AF               	movwf	??_printf+2
  7304  0508  082F               	movf	??_printf+2,w
  7305  0509  00B6               	movwf	printf@c
  7306                           
  7307                           ;doprnt.c: 1523: }
  7308                           ;doprnt.c: 1524: (putch(c) );
  7309  050A  0836               	movf	printf@c,w
  7310  050B  318C  2413  3184   	fcall	_putch
  7311  050E  2CDA               	goto	l3727
  7312  050F                     l467:	
  7313                           ;doprnt.c: 1540: return 0;
  7314                           ;	Return value of _printf is never used
  7315                           
  7316                           ;doprnt.c: 1525: }
  7317                           ;doprnt.c: 1533: }
  7318                           ;doprnt.c: 1535: alldone:
  7319                           
  7320  050F  0008               	return
  7321  0510                     __end_of_printf:	
  7322                           
  7323                           	psect	text20
  7324  0C13                     __ptext20:	
  7325 ;; *************** function _putch *****************
  7326 ;; Defined at:
  7327 ;;		line 160 in file "mcc_generated_files/eusart.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  txData          1    wreg     unsigned char 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;  txData          1    5[COMMON] unsigned char 
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      void 
  7334 ;; Registers used:
  7335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;Total ram usage:        1 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; Hardware stack levels required when called:    3
  7348 ;; This function calls:
  7349 ;;		_EUSART_Write
  7350 ;; This function is called by:
  7351 ;;		_printf
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           
  7356                           ;psect for function _putch
  7357  0C13                     _putch:	
  7358                           
  7359                           ;incstack = 0
  7360                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7361                           ;putch@txData stored from wreg
  7362  0C13  00F5               	movwf	putch@txData
  7363                           
  7364                           ;eusart.c: 162: EUSART_Write(txData);
  7365  0C14  0875               	movf	putch@txData,w
  7366  0C15  318D  25D3         	fcall	_EUSART_Write
  7367  0C17  0008               	return
  7368  0C18                     __end_of_putch:	
  7369                           
  7370                           	psect	text21
  7371  0DD3                     __ptext21:	
  7372 ;; *************** function _EUSART_Write *****************
  7373 ;; Defined at:
  7374 ;;		line 132 in file "mcc_generated_files/eusart.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  txData          1    wreg     unsigned char 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  txData          1    4[COMMON] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;Total ram usage:        2 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; Hardware stack levels required when called:    2
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_putch
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           
  7403                           ;psect for function _EUSART_Write
  7404  0DD3                     _EUSART_Write:	
  7405                           
  7406                           ;incstack = 0
  7407                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  7408                           ;EUSART_Write@txData stored from wreg
  7409  0DD3  00F4               	movwf	EUSART_Write@txData
  7410  0DD4                     l3121:	
  7411                           ;eusart.c: 135: {
  7412                           
  7413                           ;eusart.c: 134: while(0 == eusartTxBufferRemaining)
  7414                           
  7415  0DD4  0020               	movlb	0	; select bank0
  7416  0DD5  086F               	movf	_eusartTxBufferRemaining,w	;volatile
  7417  0DD6  1903               	btfsc	3,2
  7418  0DD7  2DD4               	goto	l3121
  7419                           
  7420                           ;eusart.c: 136: }
  7421                           ;eusart.c: 138: if(0 == PIE1bits.TXIE)
  7422  0DD8  0021               	movlb	1	; select bank1
  7423  0DD9  1A11               	btfsc	17,4	;volatile
  7424  0DDA  2DDF               	goto	l86
  7425                           
  7426                           ;eusart.c: 139: {
  7427                           ;eusart.c: 140: TX1REG = txData;
  7428  0DDB  0874               	movf	EUSART_Write@txData,w
  7429  0DDC  0023               	movlb	3	; select bank3
  7430  0DDD  009A               	movwf	26	;volatile
  7431                           
  7432                           ;eusart.c: 141: }
  7433  0DDE  2DF3               	goto	l3135
  7434  0DDF                     l86:	
  7435                           
  7436                           ;eusart.c: 142: else
  7437                           ;eusart.c: 143: {
  7438                           ;eusart.c: 144: PIE1bits.TXIE = 0;
  7439  0DDF  1211               	bcf	17,4	;volatile
  7440                           
  7441                           ;eusart.c: 145: eusartTxBuffer[eusartTxHead++] = txData;
  7442  0DE0  0874               	movf	EUSART_Write@txData,w
  7443  0DE1  00F3               	movwf	??_EUSART_Write
  7444  0DE2  087A               	movf	_eusartTxHead,w
  7445  0DE3  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  7446  0DE4  0086               	movwf	6
  7447  0DE5  0187               	clrf	7
  7448  0DE6  0873               	movf	??_EUSART_Write,w
  7449  0DE7  0081               	movwf	1
  7450  0DE8  3001               	movlw	1
  7451  0DE9  00F3               	movwf	??_EUSART_Write
  7452  0DEA  0873               	movf	??_EUSART_Write,w
  7453  0DEB  07FA               	addwf	_eusartTxHead,f
  7454                           
  7455                           ;eusart.c: 146: if(sizeof(eusartTxBuffer) <= eusartTxHead)
  7456  0DEC  3008               	movlw	8
  7457  0DED  027A               	subwf	_eusartTxHead,w
  7458  0DEE  1803               	btfsc	3,0
  7459                           
  7460                           ;eusart.c: 147: {
  7461                           ;eusart.c: 148: eusartTxHead = 0;
  7462  0DEF  01FA               	clrf	_eusartTxHead
  7463                           
  7464                           ;eusart.c: 149: }
  7465                           ;eusart.c: 150: eusartTxBufferRemaining--;
  7466  0DF0  3001               	movlw	1
  7467  0DF1  0020               	movlb	0	; select bank0
  7468  0DF2  02EF               	subwf	_eusartTxBufferRemaining,f	;volatile
  7469  0DF3                     l3135:	
  7470                           
  7471                           ;eusart.c: 151: }
  7472                           ;eusart.c: 152: PIE1bits.TXIE = 1;
  7473  0DF3  0021               	movlb	1	; select bank1
  7474  0DF4  1611               	bsf	17,4	;volatile
  7475  0DF5  0008               	return
  7476  0DF6                     __end_of_EUSART_Write:	
  7477                           
  7478                           	psect	text22
  7479  0DF6                     __ptext22:	
  7480 ;; *************** function ___lwmod *****************
  7481 ;; Defined at:
  7482 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  divisor         2    3[BANK0 ] unsigned int 
  7485 ;;  dividend        2    5[BANK0 ] unsigned int 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  counter         1    8[BANK0 ] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  2    3[BANK0 ] unsigned int 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7497 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;Total ram usage:        6 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    2
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_printf
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           
  7512                           ;psect for function ___lwmod
  7513  0DF6                     ___lwmod:	
  7514                           
  7515                           ;incstack = 0
  7516                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7517  0DF6  0020               	movlb	0	; select bank0
  7518  0DF7  0823               	movf	___lwmod@divisor,w
  7519  0DF8  0424               	iorwf	___lwmod@divisor+1,w
  7520  0DF9  1903               	btfsc	3,2
  7521  0DFA  2E1E               	goto	l3557
  7522  0DFB  01A8               	clrf	___lwmod@counter
  7523  0DFC  0AA8               	incf	___lwmod@counter,f
  7524  0DFD                     l3547:	
  7525  0DFD  1BA4               	btfsc	___lwmod@divisor+1,7
  7526  0DFE  2E09               	goto	l3549
  7527  0DFF  3001               	movlw	1
  7528  0E00                     u4605:	
  7529  0E00  35A3               	lslf	___lwmod@divisor,f
  7530  0E01  0DA4               	rlf	___lwmod@divisor+1,f
  7531  0E02  0B89               	decfsz	9,f
  7532  0E03  2E00               	goto	u4605
  7533  0E04  3001               	movlw	1
  7534  0E05  00A7               	movwf	??___lwmod
  7535  0E06  0827               	movf	??___lwmod,w
  7536  0E07  07A8               	addwf	___lwmod@counter,f
  7537  0E08  2DFD               	goto	l3547
  7538  0E09                     l3549:	
  7539  0E09  0824               	movf	___lwmod@divisor+1,w
  7540  0E0A  0226               	subwf	___lwmod@dividend+1,w
  7541  0E0B  1D03               	skipz
  7542  0E0C  2E0F               	goto	u4625
  7543  0E0D  0823               	movf	___lwmod@divisor,w
  7544  0E0E  0225               	subwf	___lwmod@dividend,w
  7545  0E0F                     u4625:	
  7546  0E0F  1C03               	skipc
  7547  0E10  2E15               	goto	l3553
  7548  0E11  0823               	movf	___lwmod@divisor,w
  7549  0E12  02A5               	subwf	___lwmod@dividend,f
  7550  0E13  0824               	movf	___lwmod@divisor+1,w
  7551  0E14  3BA6               	subwfb	___lwmod@dividend+1,f
  7552  0E15                     l3553:	
  7553  0E15  3001               	movlw	1
  7554  0E16                     u4635:	
  7555  0E16  36A4               	lsrf	___lwmod@divisor+1,f
  7556  0E17  0CA3               	rrf	___lwmod@divisor,f
  7557  0E18  0B89               	decfsz	9,f
  7558  0E19  2E16               	goto	u4635
  7559  0E1A  3001               	movlw	1
  7560  0E1B  02A8               	subwf	___lwmod@counter,f
  7561  0E1C  1D03               	btfss	3,2
  7562  0E1D  2E09               	goto	l3549
  7563  0E1E                     l3557:	
  7564  0E1E  0826               	movf	___lwmod@dividend+1,w
  7565  0E1F  00A4               	movwf	?___lwmod+1
  7566  0E20  0825               	movf	___lwmod@dividend,w
  7567  0E21  00A3               	movwf	?___lwmod
  7568  0E22  0008               	return
  7569  0E23                     __end_of___lwmod:	
  7570                           
  7571                           	psect	text23
  7572  0E80                     __ptext23:	
  7573 ;; *************** function ___lwdiv *****************
  7574 ;; Defined at:
  7575 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;  divisor         2    3[COMMON] unsigned int 
  7578 ;;  dividend        2    5[COMMON] unsigned int 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  quotient        2    1[BANK0 ] unsigned int 
  7581 ;;  counter         1    0[BANK0 ] unsigned char 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  2    3[COMMON] unsigned int 
  7584 ;; Registers used:
  7585 ;;		wreg, status,2, status,0
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;Total ram usage:        8 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    2
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_printf
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           
  7606                           ;psect for function ___lwdiv
  7607  0E80                     ___lwdiv:	
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7611  0E80  0020               	movlb	0	; select bank0
  7612  0E81  01A1               	clrf	___lwdiv@quotient
  7613  0E82  01A2               	clrf	___lwdiv@quotient+1
  7614  0E83  0873               	movf	___lwdiv@divisor,w
  7615  0E84  0474               	iorwf	___lwdiv@divisor+1,w
  7616  0E85  1903               	btfsc	3,2
  7617  0E86  2EB0               	goto	l3535
  7618  0E87  01A0               	clrf	___lwdiv@counter
  7619  0E88  0AA0               	incf	___lwdiv@counter,f
  7620  0E89                     l3523:	
  7621  0E89  1BF4               	btfsc	___lwdiv@divisor+1,7
  7622  0E8A  2E95               	goto	l3525
  7623  0E8B  3001               	movlw	1
  7624  0E8C                     u4535:	
  7625  0E8C  35F3               	lslf	___lwdiv@divisor,f
  7626  0E8D  0DF4               	rlf	___lwdiv@divisor+1,f
  7627  0E8E  0B89               	decfsz	9,f
  7628  0E8F  2E8C               	goto	u4535
  7629  0E90  3001               	movlw	1
  7630  0E91  00F7               	movwf	??___lwdiv
  7631  0E92  0877               	movf	??___lwdiv,w
  7632  0E93  07A0               	addwf	___lwdiv@counter,f
  7633  0E94  2E89               	goto	l3523
  7634  0E95                     l3525:	
  7635  0E95  3001               	movlw	1
  7636  0E96                     u4555:	
  7637  0E96  35A1               	lslf	___lwdiv@quotient,f
  7638  0E97  0DA2               	rlf	___lwdiv@quotient+1,f
  7639  0E98  0B89               	decfsz	9,f
  7640  0E99  2E96               	goto	u4555
  7641  0E9A  0874               	movf	___lwdiv@divisor+1,w
  7642  0E9B  0276               	subwf	___lwdiv@dividend+1,w
  7643  0E9C  1D03               	skipz
  7644  0E9D  2EA0               	goto	u4565
  7645  0E9E  0873               	movf	___lwdiv@divisor,w
  7646  0E9F  0275               	subwf	___lwdiv@dividend,w
  7647  0EA0                     u4565:	
  7648  0EA0  1C03               	skipc
  7649  0EA1  2EA7               	goto	l3531
  7650  0EA2  0873               	movf	___lwdiv@divisor,w
  7651  0EA3  02F5               	subwf	___lwdiv@dividend,f
  7652  0EA4  0874               	movf	___lwdiv@divisor+1,w
  7653  0EA5  3BF6               	subwfb	___lwdiv@dividend+1,f
  7654  0EA6  1421               	bsf	___lwdiv@quotient,0
  7655  0EA7                     l3531:	
  7656  0EA7  3001               	movlw	1
  7657  0EA8                     u4575:	
  7658  0EA8  36F4               	lsrf	___lwdiv@divisor+1,f
  7659  0EA9  0CF3               	rrf	___lwdiv@divisor,f
  7660  0EAA  0B89               	decfsz	9,f
  7661  0EAB  2EA8               	goto	u4575
  7662  0EAC  3001               	movlw	1
  7663  0EAD  02A0               	subwf	___lwdiv@counter,f
  7664  0EAE  1D03               	btfss	3,2
  7665  0EAF  2E95               	goto	l3525
  7666  0EB0                     l3535:	
  7667  0EB0  0822               	movf	___lwdiv@quotient+1,w
  7668  0EB1  00F4               	movwf	?___lwdiv+1
  7669  0EB2  0821               	movf	___lwdiv@quotient,w
  7670  0EB3  00F3               	movwf	?___lwdiv
  7671  0EB4  0008               	return
  7672  0EB5                     __end_of___lwdiv:	
  7673                           
  7674                           	psect	text24
  7675  0F95                     __ptext24:	
  7676 ;; *************** function _atoi *****************
  7677 ;; Defined at:
  7678 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  s               1    wreg     PTR const unsigned char 
  7681 ;;		 -> value(7), 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  7684 ;;		 -> value(7), 
  7685 ;;  a               2    7[BANK0 ] int 
  7686 ;;  sign            1    6[BANK0 ] unsigned char 
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  2    2[BANK0 ] int 
  7689 ;; Registers used:
  7690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7696 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7697 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7698 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7700 ;;Total ram usage:        8 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    3
  7703 ;; This function calls:
  7704 ;;		___wmul
  7705 ;;		_isdigit
  7706 ;; This function is called by:
  7707 ;;		_Java
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           
  7712                           ;psect for function _atoi
  7713  0F95                     _atoi:	
  7714                           
  7715                           ;incstack = 0
  7716                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7717                           ;atoi@s stored from wreg
  7718  0F95  0020               	movlb	0	; select bank0
  7719  0F96  00A9               	movwf	atoi@s
  7720  0F97                     l3755:	
  7721  0F97  0829               	movf	atoi@s,w
  7722  0F98  0086               	movwf	6
  7723  0F99  0187               	clrf	7
  7724  0F9A  3020               	movlw	32
  7725  0F9B  0601               	xorwf	1,w
  7726  0F9C  1D03               	btfss	3,2
  7727  0F9D  2FA3               	goto	l3757
  7728  0F9E                     l3753:	
  7729  0F9E  3001               	movlw	1
  7730  0F9F  00A4               	movwf	??_atoi
  7731  0FA0  0824               	movf	??_atoi,w
  7732  0FA1  07A9               	addwf	atoi@s,f
  7733  0FA2  2F97               	goto	l3755
  7734  0FA3                     l3757:	
  7735  0FA3  0829               	movf	atoi@s,w
  7736  0FA4  0086               	movwf	6
  7737  0FA5  0187               	clrf	7
  7738  0FA6  3009               	movlw	9
  7739  0FA7  0601               	xorwf	1,w
  7740  0FA8  1903               	btfsc	3,2
  7741  0FA9  2F9E               	goto	l3753
  7742  0FAA  01A7               	clrf	atoi@a
  7743  0FAB  01A8               	clrf	atoi@a+1
  7744  0FAC  01A6               	clrf	atoi@sign
  7745  0FAD  0829               	movf	atoi@s,w
  7746  0FAE  0086               	movwf	6
  7747  0FAF  0187               	clrf	7
  7748  0FB0  302D               	movlw	45
  7749  0FB1  0601               	xorwf	1,w
  7750  0FB2  1D03               	btfss	3,2
  7751  0FB3  2FB9               	goto	l3765
  7752  0FB4  3001               	movlw	1
  7753  0FB5  00A4               	movwf	??_atoi
  7754  0FB6  0824               	movf	??_atoi,w
  7755  0FB7  07A6               	addwf	atoi@sign,f
  7756  0FB8  2FC0               	goto	l3771
  7757  0FB9                     l3765:	
  7758  0FB9  0829               	movf	atoi@s,w
  7759  0FBA  0086               	movwf	6
  7760  0FBB  0187               	clrf	7
  7761  0FBC  302B               	movlw	43
  7762  0FBD  0601               	xorwf	1,w
  7763  0FBE  1D03               	btfss	3,2
  7764  0FBF  2FC4               	goto	l3773
  7765  0FC0                     l3771:	
  7766  0FC0  3001               	movlw	1
  7767  0FC1  00A4               	movwf	??_atoi
  7768  0FC2  0824               	movf	??_atoi,w
  7769  0FC3  07A9               	addwf	atoi@s,f
  7770  0FC4                     l3773:	
  7771  0FC4  0829               	movf	atoi@s,w
  7772  0FC5  0086               	movwf	6
  7773  0FC6  0187               	clrf	7
  7774  0FC7  0801               	movf	1,w
  7775  0FC8  318C  24AC  318F   	fcall	_isdigit
  7776  0FCB  1C03               	btfss	3,0
  7777  0FCC  2FEB               	goto	l3775
  7778  0FCD  0020               	movlb	0	; select bank0
  7779  0FCE  0828               	movf	atoi@a+1,w
  7780  0FCF  00F4               	movwf	___wmul@multiplier+1
  7781  0FD0  0827               	movf	atoi@a,w
  7782  0FD1  00F3               	movwf	___wmul@multiplier
  7783  0FD2  300A               	movlw	10
  7784  0FD3  00F5               	movwf	___wmul@multiplicand
  7785  0FD4  3000               	movlw	0
  7786  0FD5  00F6               	movwf	___wmul@multiplicand+1
  7787  0FD6  318D  2593  318F   	fcall	___wmul
  7788  0FD9  0020               	movlb	0	; select bank0
  7789  0FDA  0829               	movf	atoi@s,w
  7790  0FDB  0086               	movwf	6
  7791  0FDC  0187               	clrf	7
  7792  0FDD  0801               	movf	1,w
  7793  0FDE  0773               	addwf	?___wmul,w
  7794  0FDF  00A4               	movwf	??_atoi
  7795  0FE0  0874               	movf	?___wmul+1,w
  7796  0FE1  1803               	skipnc
  7797  0FE2  0A74               	incf	?___wmul+1,w
  7798  0FE3  00A5               	movwf	??_atoi+1
  7799  0FE4  0824               	movf	??_atoi,w
  7800  0FE5  3ED0               	addlw	208
  7801  0FE6  00A7               	movwf	atoi@a
  7802  0FE7  30FF               	movlw	255
  7803  0FE8  3D25               	addwfc	??_atoi+1,w
  7804  0FE9  00A8               	movwf	atoi@a+1
  7805  0FEA  2FC0               	goto	l3771
  7806  0FEB                     l3775:	
  7807  0FEB  0020               	movlb	0	; select bank0
  7808  0FEC  0826               	movf	atoi@sign,w
  7809  0FED  1903               	btfsc	3,2
  7810  0FEE  2FFB               	goto	l3781
  7811  0FEF  0927               	comf	atoi@a,w
  7812  0FF0  00A4               	movwf	??_atoi
  7813  0FF1  0928               	comf	atoi@a+1,w
  7814  0FF2  00A5               	movwf	??_atoi+1
  7815  0FF3  0AA4               	incf	??_atoi,f
  7816  0FF4  1903               	skipnz
  7817  0FF5  0AA5               	incf	??_atoi+1,f
  7818  0FF6  0824               	movf	??_atoi,w
  7819  0FF7  00A2               	movwf	?_atoi
  7820  0FF8  0825               	movf	??_atoi+1,w
  7821  0FF9  00A3               	movwf	?_atoi+1
  7822  0FFA  0008               	return
  7823  0FFB                     l3781:	
  7824  0FFB  0828               	movf	atoi@a+1,w
  7825  0FFC  00A3               	movwf	?_atoi+1
  7826  0FFD  0827               	movf	atoi@a,w
  7827  0FFE  00A2               	movwf	?_atoi
  7828  0FFF  0008               	return
  7829  1000                     __end_of_atoi:	
  7830                           
  7831                           	psect	text25
  7832  0D93                     __ptext25:	
  7833 ;; *************** function ___wmul *****************
  7834 ;; Defined at:
  7835 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  multiplier      2    3[COMMON] unsigned int 
  7838 ;;  multiplicand    2    5[COMMON] unsigned int 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  product         2    0[BANK0 ] unsigned int 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  2    3[COMMON] unsigned int 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;Total ram usage:        6 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    2
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_atoi
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           
  7865                           ;psect for function ___wmul
  7866  0D93                     ___wmul:	
  7867                           
  7868                           ;incstack = 0
  7869                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7870  0D93  0020               	movlb	0	; select bank0
  7871  0D94  01A0               	clrf	___wmul@product
  7872  0D95  01A1               	clrf	___wmul@product+1
  7873  0D96                     l3335:	
  7874  0D96  1C73               	btfss	___wmul@multiplier,0
  7875  0D97  2D9D               	goto	l549
  7876  0D98  0875               	movf	___wmul@multiplicand,w
  7877  0D99  0020               	movlb	0	; select bank0
  7878  0D9A  07A0               	addwf	___wmul@product,f
  7879  0D9B  0876               	movf	___wmul@multiplicand+1,w
  7880  0D9C  3DA1               	addwfc	___wmul@product+1,f
  7881  0D9D                     l549:	
  7882  0D9D  3001               	movlw	1
  7883  0D9E                     u4165:	
  7884  0D9E  35F5               	lslf	___wmul@multiplicand,f
  7885  0D9F  0DF6               	rlf	___wmul@multiplicand+1,f
  7886  0DA0  0B89               	decfsz	9,f
  7887  0DA1  2D9E               	goto	u4165
  7888  0DA2  3001               	movlw	1
  7889  0DA3                     u4175:	
  7890  0DA3  36F4               	lsrf	___wmul@multiplier+1,f
  7891  0DA4  0CF3               	rrf	___wmul@multiplier,f
  7892  0DA5  0B89               	decfsz	9,f
  7893  0DA6  2DA3               	goto	u4175
  7894  0DA7  0873               	movf	___wmul@multiplier,w
  7895  0DA8  0474               	iorwf	___wmul@multiplier+1,w
  7896  0DA9  1D03               	btfss	3,2
  7897  0DAA  2D96               	goto	l3335
  7898  0DAB  0020               	movlb	0	; select bank0
  7899  0DAC  0821               	movf	___wmul@product+1,w
  7900  0DAD  00F4               	movwf	?___wmul+1
  7901  0DAE  0820               	movf	___wmul@product,w
  7902  0DAF  00F3               	movwf	?___wmul
  7903  0DB0  0008               	return
  7904  0DB1                     __end_of___wmul:	
  7905                           
  7906                           	psect	text26
  7907  0CBA                     __ptext26:	
  7908 ;; *************** function _atof *****************
  7909 ;; Defined at:
  7910 ;;		line 200 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atof.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  s               1    wreg     PTR const unsigned char 
  7913 ;;		 -> value(7), 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  s               1   44[BANK0 ] PTR const unsigned char 
  7916 ;;		 -> value(7), 
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  3   40[BANK0 ] PTR const unsigned char 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7926 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7930 ;;Total ram usage:        5 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    5
  7933 ;; This function calls:
  7934 ;;		_strtod
  7935 ;; This function is called by:
  7936 ;;		_Java
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           
  7941                           ;psect for function _atof
  7942  0CBA                     _atof:	
  7943                           
  7944                           ;incstack = 0
  7945                           ; Regs used in _atof: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7946                           ;atof@s stored from wreg
  7947  0CBA  0020               	movlb	0	; select bank0
  7948  0CBB  00CC               	movwf	atof@s
  7949  0CBC  01B9               	clrf	strtod@res
  7950  0CBD  084C               	movf	atof@s,w
  7951  0CBE  3180  2061         	fcall	_strtod
  7952  0CC0  0020               	movlb	0	; select bank0
  7953  0CC1  0839               	movf	?_strtod,w
  7954  0CC2  00C8               	movwf	?_atof
  7955  0CC3  083A               	movf	?_strtod+1,w
  7956  0CC4  00C9               	movwf	?_atof+1
  7957  0CC5  083B               	movf	?_strtod+2,w
  7958  0CC6  00CA               	movwf	?_atof+2
  7959  0CC7  0008               	return
  7960  0CC8                     __end_of_atof:	
  7961                           
  7962                           	psect	text27
  7963  0061                     __ptext27:	
  7964 ;; *************** function _strtod *****************
  7965 ;; Defined at:
  7966 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atof.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;  s               1    wreg     PTR const unsigned char 
  7969 ;;		 -> value(7), 
  7970 ;;  res             1   25[BANK0 ] PTR PTR const unsigned c
  7971 ;;		 -> NULL(0), 
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  s               1   39[BANK0 ] PTR const unsigned char 
  7974 ;;		 -> value(7), 
  7975 ;;  _u              4   35[BANK0 ] struct .
  7976 ;;  expon           1   34[BANK0 ] char 
  7977 ;;  flags           1   33[BANK0 ] unsigned char 
  7978 ;;  eexp            1   32[BANK0 ] char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  3   25[BANK0 ] char 
  7981 ;; Registers used:
  7982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7988 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7989 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7991 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7992 ;;Total ram usage:       15 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:    4
  7995 ;; This function calls:
  7996 ;;		___altoft
  7997 ;;		___bmul
  7998 ;;		___ftdiv
  7999 ;;		___ftge
  8000 ;;		___ftmul
  8001 ;;		___ftneg
  8002 ;;		___lmul
  8003 ;;		_isdigit
  8004 ;;		_isspace
  8005 ;; This function is called by:
  8006 ;;		_atof
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           
  8011                           ;psect for function _strtod
  8012  0061                     _strtod:	
  8013                           
  8014                           ;incstack = 0
  8015                           ; Regs used in _strtod: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8016                           ;strtod@s stored from wreg
  8017  0061  0020               	movlb	0	; select bank0
  8018  0062  00C7               	movwf	strtod@s
  8019  0063  0839               	movf	strtod@res,w
  8020  0064  1903               	btfsc	3,2
  8021  0065  286D               	goto	l3353
  8022  0066  0847               	movf	strtod@s,w
  8023  0067  00BC               	movwf	??_strtod
  8024  0068  0839               	movf	strtod@res,w
  8025  0069  0086               	movwf	6
  8026  006A  0187               	clrf	7
  8027  006B  083C               	movf	??_strtod,w
  8028  006C  0081               	movwf	1
  8029  006D                     l3353:	
  8030  006D  0847               	movf	strtod@s,w
  8031  006E  0086               	movwf	6
  8032  006F  0187               	clrf	7
  8033  0070  0801               	movf	1,w
  8034  0071  00C0               	movwf	strtod@eexp
  8035  0072  318C  24E8  3180   	fcall	_isspace
  8036  0075  1C03               	btfss	3,0
  8037  0076  287D               	goto	l3355
  8038  0077  3001               	movlw	1
  8039  0078  0020               	movlb	0	; select bank0
  8040  0079  00BC               	movwf	??_strtod
  8041  007A  083C               	movf	??_strtod,w
  8042  007B  07C7               	addwf	strtod@s,f
  8043  007C  286D               	goto	l3353
  8044  007D                     l3355:	
  8045  007D  0020               	movlb	0	; select bank0
  8046  007E  01C1               	clrf	strtod@flags
  8047  007F  302D               	movlw	45
  8048  0080  0640               	xorwf	strtod@eexp,w
  8049  0081  1D03               	btfss	3,2
  8050  0082  2886               	goto	l3363
  8051  0083  01C1               	clrf	strtod@flags
  8052  0084  0AC1               	incf	strtod@flags,f
  8053  0085  288A               	goto	l3365
  8054  0086                     l3363:	
  8055  0086  302B               	movlw	43
  8056  0087  0640               	xorwf	strtod@eexp,w
  8057  0088  1D03               	btfss	3,2
  8058  0089  288E               	goto	l3367
  8059  008A                     l3365:	
  8060  008A  3001               	movlw	1
  8061  008B  00BC               	movwf	??_strtod
  8062  008C  083C               	movf	??_strtod,w
  8063  008D  07C7               	addwf	strtod@s,f
  8064  008E                     l3367:	
  8065  008E  01C0               	clrf	strtod@eexp
  8066  008F  3000               	movlw	0
  8067  0090  00C6               	movwf	strtod@_u+3
  8068  0091  3000               	movlw	0
  8069  0092  00C5               	movwf	strtod@_u+2
  8070  0093  3000               	movlw	0
  8071  0094  00C4               	movwf	strtod@_u+1
  8072  0095  3000               	movlw	0
  8073  0096  00C3               	movwf	strtod@_u
  8074  0097  01C2               	clrf	strtod@expon
  8075  0098  28A5               	goto	l3373
  8076  0099                     l3375:	
  8077  0099  0847               	movf	strtod@s,w
  8078  009A  0086               	movwf	6
  8079  009B  0187               	clrf	7
  8080  009C  302E               	movlw	46
  8081  009D  0601               	xorwf	1,w
  8082  009E  1D03               	btfss	3,2
  8083  009F  28A7               	goto	l3381
  8084  00A0  1641               	bsf	strtod@flags,4
  8085  00A1                     L2:	
  8086  00A1  3001               	movlw	1
  8087  00A2  00BC               	movwf	??_strtod
  8088  00A3  083C               	movf	??_strtod,w
  8089  00A4  07C7               	addwf	strtod@s,f
  8090  00A5                     l3373:	
  8091  00A5  1E41               	btfss	strtod@flags,4
  8092  00A6  2899               	goto	l3375
  8093  00A7                     l3381:	
  8094  00A7  0847               	movf	strtod@s,w
  8095  00A8  0086               	movwf	6
  8096  00A9  0187               	clrf	7
  8097  00AA  0801               	movf	1,w
  8098  00AB  318C  24AC  3180   	fcall	_isdigit
  8099  00AE  1C03               	btfss	3,0
  8100  00AF  28F5               	goto	l3397
  8101  00B0  0020               	movlb	0	; select bank0
  8102  00B1  14C1               	bsf	strtod@flags,1
  8103  00B2  3008               	movlw	8
  8104  00B3  0640               	xorwf	strtod@eexp,w
  8105  00B4  1903               	btfsc	3,2
  8106  00B5  28EE               	goto	l681
  8107  00B6  1E41               	btfss	strtod@flags,4
  8108  00B7  28BC               	goto	l682
  8109  00B8  30FF               	movlw	255
  8110  00B9  00BC               	movwf	??_strtod
  8111  00BA  083C               	movf	??_strtod,w
  8112  00BB  07C2               	addwf	strtod@expon,f
  8113  00BC                     l682:	
  8114  00BC  3001               	movlw	1
  8115  00BD  00BC               	movwf	??_strtod
  8116  00BE  083C               	movf	??_strtod,w
  8117  00BF  07C0               	addwf	strtod@eexp,f
  8118  00C0  3000               	movlw	0
  8119  00C1  00A3               	movwf	___lmul@multiplier+3
  8120  00C2  3000               	movlw	0
  8121  00C3  00A2               	movwf	___lmul@multiplier+2
  8122  00C4  3000               	movlw	0
  8123  00C5  00A1               	movwf	___lmul@multiplier+1
  8124  00C6  300A               	movlw	10
  8125  00C7  00A0               	movwf	___lmul@multiplier
  8126  00C8  0846               	movf	strtod@_u+3,w
  8127  00C9  00A7               	movwf	___lmul@multiplicand+3
  8128  00CA  0845               	movf	strtod@_u+2,w
  8129  00CB  00A6               	movwf	___lmul@multiplicand+2
  8130  00CC  0844               	movf	strtod@_u+1,w
  8131  00CD  00A5               	movwf	___lmul@multiplicand+1
  8132  00CE  0843               	movf	strtod@_u,w
  8133  00CF  00A4               	movwf	___lmul@multiplicand
  8134  00D0  318E  2650  3180   	fcall	___lmul
  8135  00D3  0020               	movlb	0	; select bank0
  8136  00D4  0823               	movf	?___lmul+3,w
  8137  00D5  00C6               	movwf	strtod@_u+3
  8138  00D6  0822               	movf	?___lmul+2,w
  8139  00D7  00C5               	movwf	strtod@_u+2
  8140  00D8  0821               	movf	?___lmul+1,w
  8141  00D9  00C4               	movwf	strtod@_u+1
  8142  00DA  0820               	movf	?___lmul,w
  8143  00DB  00C3               	movwf	strtod@_u
  8144  00DC  0847               	movf	strtod@s,w
  8145  00DD  0086               	movwf	6
  8146  00DE  0187               	clrf	7
  8147  00DF  0801               	movf	1,w
  8148  00E0  3ED0               	addlw	208
  8149  00E1  00BC               	movwf	??_strtod
  8150  00E2  01BD               	clrf	??_strtod+1
  8151  00E3  01BE               	clrf	??_strtod+2
  8152  00E4  01BF               	clrf	??_strtod+3
  8153  00E5  083C               	movf	??_strtod,w
  8154  00E6  07C3               	addwf	strtod@_u,f
  8155  00E7  083D               	movf	??_strtod+1,w
  8156  00E8  3DC4               	addwfc	strtod@_u+1,f
  8157  00E9  083E               	movf	??_strtod+2,w
  8158  00EA  3DC5               	addwfc	strtod@_u+2,f
  8159  00EB  083F               	movf	??_strtod+3,w
  8160  00EC  3DC6               	addwfc	strtod@_u+3,f
  8161  00ED  28A1               	goto	L2
  8162  00EE                     l681:	
  8163  00EE  1A41               	btfsc	strtod@flags,4
  8164  00EF  28A1               	goto	L2
  8165  00F0  3001               	movlw	1
  8166  00F1  00BC               	movwf	??_strtod
  8167  00F2  083C               	movf	??_strtod,w
  8168  00F3  07C2               	addwf	strtod@expon,f
  8169  00F4  28A1               	goto	L2
  8170  00F5                     l3397:	
  8171  00F5  0020               	movlb	0	; select bank0
  8172  00F6  01C0               	clrf	strtod@eexp
  8173  00F7  0847               	movf	strtod@s,w
  8174  00F8  0086               	movwf	6
  8175  00F9  0187               	clrf	7
  8176  00FA  3065               	movlw	101
  8177  00FB  0601               	xorwf	1,w
  8178  00FC  1903               	btfsc	3,2
  8179  00FD  2905               	goto	l3403
  8180  00FE  0847               	movf	strtod@s,w
  8181  00FF  0086               	movwf	6
  8182  0100  0187               	clrf	7
  8183  0101  3045               	movlw	69
  8184  0102  0601               	xorwf	1,w
  8185  0103  1D03               	btfss	3,2
  8186  0104  2979               	goto	l3437
  8187  0105                     l3403:	
  8188  0105  3001               	movlw	1
  8189  0106  00BC               	movwf	??_strtod
  8190  0107  083C               	movf	??_strtod,w
  8191  0108  07C7               	addwf	strtod@s,f
  8192  0109  0847               	movf	strtod@s,w
  8193  010A  0086               	movwf	6
  8194  010B  0187               	clrf	7
  8195  010C  302D               	movlw	45
  8196  010D  0601               	xorwf	1,w
  8197  010E  1D03               	btfss	3,2
  8198  010F  2912               	goto	l3409
  8199  0110  15C1               	bsf	strtod@flags,3
  8200  0111  2919               	goto	l3413
  8201  0112                     l3409:	
  8202  0112  0847               	movf	strtod@s,w
  8203  0113  0086               	movwf	6
  8204  0114  0187               	clrf	7
  8205  0115  302B               	movlw	43
  8206  0116  0601               	xorwf	1,w
  8207  0117  1D03               	btfss	3,2
  8208  0118  291D               	goto	l3415
  8209  0119                     l3413:	
  8210  0119  3001               	movlw	1
  8211  011A  00BC               	movwf	??_strtod
  8212  011B  083C               	movf	??_strtod,w
  8213  011C  07C7               	addwf	strtod@s,f
  8214  011D                     l3415:	
  8215  011D  0847               	movf	strtod@s,w
  8216  011E  0086               	movwf	6
  8217  011F  0187               	clrf	7
  8218  0120  3030               	movlw	48
  8219  0121  0601               	xorwf	1,w
  8220  0122  1903               	btfsc	3,2
  8221  0123  2919               	goto	l3413
  8222  0124  0847               	movf	strtod@s,w
  8223  0125  0086               	movwf	6
  8224  0126  0187               	clrf	7
  8225  0127  0801               	movf	1,w
  8226  0128  318C  24AC  3180   	fcall	_isdigit
  8227  012B  1C03               	btfss	3,0
  8228  012C  2974               	goto	l3433
  8229  012D  0020               	movlb	0	; select bank0
  8230  012E  0847               	movf	strtod@s,w
  8231  012F  0086               	movwf	6
  8232  0130  0187               	clrf	7
  8233  0131  0801               	movf	1,w
  8234  0132  3ED0               	addlw	208
  8235  0133  00BC               	movwf	??_strtod
  8236  0134  083C               	movf	??_strtod,w
  8237  0135  00C0               	movwf	strtod@eexp
  8238  0136  3001               	movlw	1
  8239  0137  00BC               	movwf	??_strtod
  8240  0138  083C               	movf	??_strtod,w
  8241  0139  07C7               	addwf	strtod@s,f
  8242  013A  0847               	movf	strtod@s,w
  8243  013B  0086               	movwf	6
  8244  013C  0187               	clrf	7
  8245  013D  0801               	movf	1,w
  8246  013E  318C  24AC  3180   	fcall	_isdigit
  8247  0141  1C03               	btfss	3,0
  8248  0142  2974               	goto	l3433
  8249  0143  0020               	movlb	0	; select bank0
  8250  0144  0847               	movf	strtod@s,w
  8251  0145  0086               	movwf	6
  8252  0146  0187               	clrf	7
  8253  0147  300A               	movlw	10
  8254  0148  00BC               	movwf	??_strtod
  8255  0149  083C               	movf	??_strtod,w
  8256  014A  00F3               	movwf	___bmul@multiplicand
  8257  014B  0840               	movf	strtod@eexp,w
  8258  014C  318C  24D7  3180   	fcall	___bmul
  8259  014F  0701               	addwf	1,w
  8260  0150  3ED0               	addlw	-48
  8261  0151  0020               	movlb	0	; select bank0
  8262  0152  00BD               	movwf	??_strtod+1
  8263  0153  083D               	movf	??_strtod+1,w
  8264  0154  00C0               	movwf	strtod@eexp
  8265  0155  3001               	movlw	1
  8266  0156  00BC               	movwf	??_strtod
  8267  0157  083C               	movf	??_strtod,w
  8268  0158  07C7               	addwf	strtod@s,f
  8269  0159  0847               	movf	strtod@s,w
  8270  015A  0086               	movwf	6
  8271  015B  0187               	clrf	7
  8272  015C  0801               	movf	1,w
  8273  015D  318C  24AC  3180   	fcall	_isdigit
  8274  0160  1C03               	btfss	3,0
  8275  0161  2974               	goto	l3433
  8276  0162  0020               	movlb	0	; select bank0
  8277  0163  0847               	movf	strtod@s,w
  8278  0164  0086               	movwf	6
  8279  0165  0187               	clrf	7
  8280  0166  300A               	movlw	10
  8281  0167  00BC               	movwf	??_strtod
  8282  0168  083C               	movf	??_strtod,w
  8283  0169  00F3               	movwf	___bmul@multiplicand
  8284  016A  0840               	movf	strtod@eexp,w
  8285  016B  318C  24D7  3180   	fcall	___bmul
  8286  016E  0701               	addwf	1,w
  8287  016F  3ED0               	addlw	-48
  8288  0170  0020               	movlb	0	; select bank0
  8289  0171  00BD               	movwf	??_strtod+1
  8290  0172  083D               	movf	??_strtod+1,w
  8291  0173  00C0               	movwf	strtod@eexp
  8292  0174                     l3433:	
  8293  0174  0020               	movlb	0	; select bank0
  8294  0175  1DC1               	btfss	strtod@flags,3
  8295  0176  2979               	goto	l3437
  8296  0177  09C0               	comf	strtod@eexp,f
  8297  0178  0AC0               	incf	strtod@eexp,f
  8298  0179                     l3437:	
  8299  0179  0840               	movf	strtod@eexp,w
  8300  017A  00BC               	movwf	??_strtod
  8301  017B  083C               	movf	??_strtod,w
  8302  017C  07C2               	addwf	strtod@expon,f
  8303  017D  0839               	movf	strtod@res,w
  8304  017E  1D03               	btfss	3,2
  8305  017F  1CC1               	btfss	strtod@flags,1
  8306  0180  2988               	goto	l3445
  8307  0181  0847               	movf	strtod@s,w
  8308  0182  00BC               	movwf	??_strtod
  8309  0183  0839               	movf	strtod@res,w
  8310  0184  0086               	movwf	6
  8311  0185  0187               	clrf	7
  8312  0186  083C               	movf	??_strtod,w
  8313  0187  0081               	movwf	1
  8314  0188                     l3445:	
  8315  0188  0846               	movf	strtod@_u+3,w
  8316  0189  00A6               	movwf	___altoft@c+3
  8317  018A  0845               	movf	strtod@_u+2,w
  8318  018B  00A5               	movwf	___altoft@c+2
  8319  018C  0844               	movf	strtod@_u+1,w
  8320  018D  00A4               	movwf	___altoft@c+1
  8321  018E  0843               	movf	strtod@_u,w
  8322  018F  00A3               	movwf	___altoft@c
  8323  0190  318E  26F1  3180   	fcall	___altoft
  8324  0193  0020               	movlb	0	; select bank0
  8325  0194  0823               	movf	?___altoft,w
  8326  0195  00C3               	movwf	strtod@_u
  8327  0196  0824               	movf	?___altoft+1,w
  8328  0197  00C4               	movwf	strtod@_u+1
  8329  0198  0825               	movf	?___altoft+2,w
  8330  0199  00C5               	movwf	strtod@_u+2
  8331  019A  0845               	movf	strtod@_u+2,w
  8332  019B  0444               	iorwf	strtod@_u+1,w
  8333  019C  0443               	iorwf	strtod@_u,w
  8334  019D  1D03               	skipz
  8335  019E  29A6               	goto	l699
  8336  019F  3000               	movlw	0
  8337  01A0  00B9               	movwf	?_strtod
  8338  01A1  3000               	movlw	0
  8339  01A2  00BA               	movwf	?_strtod+1
  8340  01A3  3000               	movlw	0
  8341  01A4  00BB               	movwf	?_strtod+2
  8342  01A5  0008               	return
  8343  01A6                     l699:	
  8344  01A6  1FC2               	btfss	strtod@expon,7
  8345  01A7  2A09               	goto	l3479
  8346  01A8  09C2               	comf	strtod@expon,f
  8347  01A9  0AC2               	incf	strtod@expon,f
  8348  01AA                     l3459:	
  8349  01AA  0842               	movf	strtod@expon,w
  8350  01AB  3A80               	xorlw	128
  8351  01AC  3E76               	addlw	-138
  8352  01AD  1C03               	btfss	3,0
  8353  01AE  29E4               	goto	l3465
  8354  01AF  3003               	movlw	3
  8355  01B0  00A3               	movwf	___ftdiv@f2
  8356  01B1  3015               	movlw	21
  8357  01B2  00A4               	movwf	___ftdiv@f2+1
  8358  01B3  3050               	movlw	80
  8359  01B4  00A5               	movwf	___ftdiv@f2+2
  8360  01B5  0843               	movf	strtod@_u,w
  8361  01B6  00A6               	movwf	___ftdiv@f1
  8362  01B7  0844               	movf	strtod@_u+1,w
  8363  01B8  00A7               	movwf	___ftdiv@f1+1
  8364  01B9  0845               	movf	strtod@_u+2,w
  8365  01BA  00A8               	movwf	___ftdiv@f1+2
  8366  01BB  3186  2673  3180   	fcall	___ftdiv
  8367  01BE  0020               	movlb	0	; select bank0
  8368  01BF  0823               	movf	?___ftdiv,w
  8369  01C0  00C3               	movwf	strtod@_u
  8370  01C1  0824               	movf	?___ftdiv+1,w
  8371  01C2  00C4               	movwf	strtod@_u+1
  8372  01C3  0825               	movf	?___ftdiv+2,w
  8373  01C4  00C5               	movwf	strtod@_u+2
  8374  01C5  30F6               	movlw	246
  8375  01C6  00BC               	movwf	??_strtod
  8376  01C7  083C               	movf	??_strtod,w
  8377  01C8  07C2               	addwf	strtod@expon,f
  8378  01C9  29AA               	goto	l3459
  8379  01CA                     l3461:	
  8380  01CA  3000               	movlw	0
  8381  01CB  00A3               	movwf	___ftdiv@f2
  8382  01CC  3020               	movlw	32
  8383  01CD  00A4               	movwf	___ftdiv@f2+1
  8384  01CE  3041               	movlw	65
  8385  01CF  00A5               	movwf	___ftdiv@f2+2
  8386  01D0  0843               	movf	strtod@_u,w
  8387  01D1  00A6               	movwf	___ftdiv@f1
  8388  01D2  0844               	movf	strtod@_u+1,w
  8389  01D3  00A7               	movwf	___ftdiv@f1+1
  8390  01D4  0845               	movf	strtod@_u+2,w
  8391  01D5  00A8               	movwf	___ftdiv@f1+2
  8392  01D6  3186  2673  3180   	fcall	___ftdiv
  8393  01D9  0020               	movlb	0	; select bank0
  8394  01DA  0823               	movf	?___ftdiv,w
  8395  01DB  00C3               	movwf	strtod@_u
  8396  01DC  0824               	movf	?___ftdiv+1,w
  8397  01DD  00C4               	movwf	strtod@_u+1
  8398  01DE  0825               	movf	?___ftdiv+2,w
  8399  01DF  00C5               	movwf	strtod@_u+2
  8400  01E0  30FF               	movlw	255
  8401  01E1  00BC               	movwf	??_strtod
  8402  01E2  083C               	movf	??_strtod,w
  8403  01E3  07C2               	addwf	strtod@expon,f
  8404  01E4                     l3465:	
  8405  01E4  0842               	movf	strtod@expon,w
  8406  01E5  1D03               	btfss	3,2
  8407  01E6  29CA               	goto	l3461
  8408  01E7  0843               	movf	strtod@_u,w
  8409  01E8  00A0               	movwf	___ftge@ff1
  8410  01E9  0844               	movf	strtod@_u+1,w
  8411  01EA  00A1               	movwf	___ftge@ff1+1
  8412  01EB  0845               	movf	strtod@_u+2,w
  8413  01EC  00A2               	movwf	___ftge@ff1+2
  8414  01ED  3000               	movlw	0
  8415  01EE  00A3               	movwf	___ftge@ff2
  8416  01EF  3080               	movlw	128
  8417  01F0  00A4               	movwf	___ftge@ff2+1
  8418  01F1  3000               	movlw	0
  8419  01F2  00A5               	movwf	___ftge@ff2+2
  8420  01F3  318E  26B5  3180   	fcall	___ftge
  8421  01F6  1803               	btfsc	3,0
  8422  01F7  2A6D               	goto	l710
  8423  01F8  0020               	movlb	0	; select bank0
  8424  01F9  1C41               	btfss	strtod@flags,0
  8425  01FA  2A02               	goto	l3475
  8426  01FB  3000               	movlw	0
  8427  01FC  00B9               	movwf	?_strtod
  8428  01FD  3080               	movlw	128
  8429  01FE  00BA               	movwf	?_strtod+1
  8430  01FF  3080               	movlw	128
  8431  0200  00BB               	movwf	?_strtod+2
  8432  0201  0008               	return
  8433  0202                     l3475:	
  8434  0202  3000               	movlw	0
  8435  0203  00B9               	movwf	?_strtod
  8436  0204  3080               	movlw	128
  8437  0205  00BA               	movwf	?_strtod+1
  8438  0206  3000               	movlw	0
  8439  0207  00BB               	movwf	?_strtod+2
  8440  0208  0008               	return
  8441  0209                     l3479:	
  8442  0209  0842               	movf	strtod@expon,w
  8443  020A  3A80               	xorlw	128
  8444  020B  3E7F               	addlw	-129
  8445  020C  1803               	btfsc	3,0
  8446  020D  2A29               	goto	l3487
  8447  020E  2A6D               	goto	l710
  8448  020F                     l3483:	
  8449  020F  3003               	movlw	3
  8450  0210  00A9               	movwf	___ftmul@f1
  8451  0211  3015               	movlw	21
  8452  0212  00AA               	movwf	___ftmul@f1+1
  8453  0213  3050               	movlw	80
  8454  0214  00AB               	movwf	___ftmul@f1+2
  8455  0215  0843               	movf	strtod@_u,w
  8456  0216  00AC               	movwf	___ftmul@f2
  8457  0217  0844               	movf	strtod@_u+1,w
  8458  0218  00AD               	movwf	___ftmul@f2+1
  8459  0219  0845               	movf	strtod@_u+2,w
  8460  021A  00AE               	movwf	___ftmul@f2+2
  8461  021B  3185  2510  3180   	fcall	___ftmul
  8462  021E  0020               	movlb	0	; select bank0
  8463  021F  0829               	movf	?___ftmul,w
  8464  0220  00C3               	movwf	strtod@_u
  8465  0221  082A               	movf	?___ftmul+1,w
  8466  0222  00C4               	movwf	strtod@_u+1
  8467  0223  082B               	movf	?___ftmul+2,w
  8468  0224  00C5               	movwf	strtod@_u+2
  8469  0225  30F6               	movlw	246
  8470  0226  00BC               	movwf	??_strtod
  8471  0227  083C               	movf	??_strtod,w
  8472  0228  07C2               	addwf	strtod@expon,f
  8473  0229                     l3487:	
  8474  0229  300A               	movlw	10
  8475  022A  0242               	subwf	strtod@expon,w
  8476  022B  1C03               	btfss	3,0
  8477  022C  2A48               	goto	l3493
  8478  022D  2A0F               	goto	l3483
  8479  022E                     l3489:	
  8480  022E  3000               	movlw	0
  8481  022F  00A9               	movwf	___ftmul@f1
  8482  0230  3020               	movlw	32
  8483  0231  00AA               	movwf	___ftmul@f1+1
  8484  0232  3041               	movlw	65
  8485  0233  00AB               	movwf	___ftmul@f1+2
  8486  0234  0843               	movf	strtod@_u,w
  8487  0235  00AC               	movwf	___ftmul@f2
  8488  0236  0844               	movf	strtod@_u+1,w
  8489  0237  00AD               	movwf	___ftmul@f2+1
  8490  0238  0845               	movf	strtod@_u+2,w
  8491  0239  00AE               	movwf	___ftmul@f2+2
  8492  023A  3185  2510  3180   	fcall	___ftmul
  8493  023D  0020               	movlb	0	; select bank0
  8494  023E  0829               	movf	?___ftmul,w
  8495  023F  00C3               	movwf	strtod@_u
  8496  0240  082A               	movf	?___ftmul+1,w
  8497  0241  00C4               	movwf	strtod@_u+1
  8498  0242  082B               	movf	?___ftmul+2,w
  8499  0243  00C5               	movwf	strtod@_u+2
  8500  0244  30FF               	movlw	255
  8501  0245  00BC               	movwf	??_strtod
  8502  0246  083C               	movf	??_strtod,w
  8503  0247  07C2               	addwf	strtod@expon,f
  8504  0248                     l3493:	
  8505  0248  0842               	movf	strtod@expon,w
  8506  0249  1D03               	btfss	3,2
  8507  024A  2A2E               	goto	l3489
  8508  024B  30FF               	movlw	255
  8509  024C  00A0               	movwf	___ftge@ff1
  8510  024D  307F               	movlw	127
  8511  024E  00A1               	movwf	___ftge@ff1+1
  8512  024F  307F               	movlw	127
  8513  0250  00A2               	movwf	___ftge@ff1+2
  8514  0251  0843               	movf	strtod@_u,w
  8515  0252  00A3               	movwf	___ftge@ff2
  8516  0253  0844               	movf	strtod@_u+1,w
  8517  0254  00A4               	movwf	___ftge@ff2+1
  8518  0255  0845               	movf	strtod@_u+2,w
  8519  0256  00A5               	movwf	___ftge@ff2+2
  8520  0257  318E  26B5  3180   	fcall	___ftge
  8521  025A  1803               	btfsc	3,0
  8522  025B  2A6D               	goto	l710
  8523  025C  0020               	movlb	0	; select bank0
  8524  025D  1C41               	btfss	strtod@flags,0
  8525  025E  2A66               	goto	l3503
  8526  025F  3000               	movlw	0
  8527  0260  00B9               	movwf	?_strtod
  8528  0261  3080               	movlw	128
  8529  0262  00BA               	movwf	?_strtod+1
  8530  0263  3080               	movlw	128
  8531  0264  00BB               	movwf	?_strtod+2
  8532  0265  0008               	return
  8533  0266                     l3503:	
  8534  0266  3000               	movlw	0
  8535  0267  00B9               	movwf	?_strtod
  8536  0268  3080               	movlw	128
  8537  0269  00BA               	movwf	?_strtod+1
  8538  026A  3000               	movlw	0
  8539  026B  00BB               	movwf	?_strtod+2
  8540  026C  0008               	return
  8541  026D                     l710:	
  8542  026D  0020               	movlb	0	; select bank0
  8543  026E  1C41               	btfss	strtod@flags,0
  8544  026F  2A7F               	goto	l3509
  8545  0270  0843               	movf	strtod@_u,w
  8546  0271  00F3               	movwf	___ftneg@f1
  8547  0272  0844               	movf	strtod@_u+1,w
  8548  0273  00F4               	movwf	___ftneg@f1+1
  8549  0274  0845               	movf	strtod@_u+2,w
  8550  0275  00F5               	movwf	___ftneg@f1+2
  8551  0276  318C  244B         	fcall	___ftneg
  8552  0278  0873               	movf	?___ftneg,w
  8553  0279  0020               	movlb	0	; select bank0
  8554  027A  00C3               	movwf	strtod@_u
  8555  027B  0874               	movf	?___ftneg+1,w
  8556  027C  00C4               	movwf	strtod@_u+1
  8557  027D  0875               	movf	?___ftneg+2,w
  8558  027E  00C5               	movwf	strtod@_u+2
  8559  027F                     l3509:	
  8560  027F  0843               	movf	strtod@_u,w
  8561  0280  00B9               	movwf	?_strtod
  8562  0281  0844               	movf	strtod@_u+1,w
  8563  0282  00BA               	movwf	?_strtod+1
  8564  0283  0845               	movf	strtod@_u+2,w
  8565  0284  00BB               	movwf	?_strtod+2
  8566  0285  0008               	return
  8567  0286                     __end_of_strtod:	
  8568                           
  8569                           	psect	text28
  8570  0CE8                     __ptext28:	
  8571 ;; *************** function _isspace *****************
  8572 ;; Defined at:
  8573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  c               1    wreg     unsigned char 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  c               1    4[COMMON] unsigned char 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;		None               void
  8580 ;; Registers used:
  8581 ;;		wreg, status,2, status,0
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;Total ram usage:        2 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:    2
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_strtod
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           
  8602                           ;psect for function _isspace
  8603  0CE8                     _isspace:	
  8604                           
  8605                           ;incstack = 0
  8606                           ; Regs used in _isspace: [wreg+status,2+status,0]
  8607                           ;isspace@c stored from wreg
  8608  0CE8  00F4               	movwf	isspace@c
  8609  0CE9  01F3               	clrf	_isspace$979
  8610  0CEA  0AF3               	incf	_isspace$979,f
  8611  0CEB  3020               	movlw	32
  8612  0CEC  0674               	xorwf	isspace@c,w
  8613  0CED  1903               	btfsc	3,2
  8614  0CEE  2CF8               	goto	l3191
  8615  0CEF  300E               	movlw	14
  8616  0CF0  0274               	subwf	isspace@c,w
  8617  0CF1  1803               	skipnc
  8618  0CF2  2CF7               	goto	l3189
  8619  0CF3  3009               	movlw	9
  8620  0CF4  0274               	subwf	isspace@c,w
  8621  0CF5  1803               	skipnc
  8622  0CF6  2CF8               	goto	l3191
  8623  0CF7                     l3189:	
  8624  0CF7  01F3               	clrf	_isspace$979
  8625  0CF8                     l3191:	
  8626  0CF8  0C73               	rrf	_isspace$979,w
  8627  0CF9  0008               	return
  8628  0CFA                     __end_of_isspace:	
  8629                           
  8630                           	psect	text29
  8631  0CAC                     __ptext29:	
  8632 ;; *************** function _isdigit *****************
  8633 ;; Defined at:
  8634 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  c               1    wreg     unsigned char 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  c               1    4[COMMON] unsigned char 
  8639 ;; Return value:  Size  Location     Type
  8640 ;;		None               void
  8641 ;; Registers used:
  8642 ;;		wreg, status,2, status,0
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;Total ram usage:        2 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; Hardware stack levels required when called:    2
  8655 ;; This function calls:
  8656 ;;		Nothing
  8657 ;; This function is called by:
  8658 ;;		_strtod
  8659 ;;		_atoi
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           
  8664                           ;psect for function _isdigit
  8665  0CAC                     _isdigit:	
  8666                           
  8667                           ;incstack = 0
  8668                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8669                           ;isdigit@c stored from wreg
  8670  0CAC  00F4               	movwf	isdigit@c
  8671  0CAD  01F3               	clrf	_isdigit$976
  8672  0CAE  303A               	movlw	58
  8673  0CAF  0274               	subwf	isdigit@c,w
  8674  0CB0  1803               	skipnc
  8675  0CB1  2CB8               	goto	l3203
  8676  0CB2  3030               	movlw	48
  8677  0CB3  0274               	subwf	isdigit@c,w
  8678  0CB4  1C03               	skipc
  8679  0CB5  2CB8               	goto	l3203
  8680  0CB6  01F3               	clrf	_isdigit$976
  8681  0CB7  0AF3               	incf	_isdigit$976,f
  8682  0CB8                     l3203:	
  8683  0CB8  0C73               	rrf	_isdigit$976,w
  8684  0CB9  0008               	return
  8685  0CBA                     __end_of_isdigit:	
  8686                           
  8687                           	psect	text30
  8688  0E50                     __ptext30:	
  8689 ;; *************** function ___lmul *****************
  8690 ;; Defined at:
  8691 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  multiplier      4    0[BANK0 ] unsigned long 
  8694 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;  product         4    3[COMMON] unsigned long 
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  4    0[BANK0 ] unsigned long 
  8699 ;; Registers used:
  8700 ;;		wreg, status,2, status,0
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8706 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8707 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8709 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8710 ;;Total ram usage:       12 bytes
  8711 ;; Hardware stack levels used:    1
  8712 ;; Hardware stack levels required when called:    2
  8713 ;; This function calls:
  8714 ;;		Nothing
  8715 ;; This function is called by:
  8716 ;;		_strtod
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           
  8721                           ;psect for function ___lmul
  8722  0E50                     ___lmul:	
  8723                           
  8724                           ;incstack = 0
  8725                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8726  0E50  3000               	movlw	0
  8727  0E51  00F6               	movwf	___lmul@product+3
  8728  0E52  3000               	movlw	0
  8729  0E53  00F5               	movwf	___lmul@product+2
  8730  0E54  3000               	movlw	0
  8731  0E55  00F4               	movwf	___lmul@product+1
  8732  0E56  3000               	movlw	0
  8733  0E57  00F3               	movwf	___lmul@product
  8734  0E58                     l3139:	
  8735  0E58  0020               	movlb	0	; select bank0
  8736  0E59  1C20               	btfss	___lmul@multiplier,0
  8737  0E5A  2E63               	goto	l3143
  8738  0E5B  0824               	movf	___lmul@multiplicand,w
  8739  0E5C  07F3               	addwf	___lmul@product,f
  8740  0E5D  0825               	movf	___lmul@multiplicand+1,w
  8741  0E5E  3DF4               	addwfc	___lmul@product+1,f
  8742  0E5F  0826               	movf	___lmul@multiplicand+2,w
  8743  0E60  3DF5               	addwfc	___lmul@product+2,f
  8744  0E61  0827               	movf	___lmul@multiplicand+3,w
  8745  0E62  3DF6               	addwfc	___lmul@product+3,f
  8746  0E63                     l3143:	
  8747  0E63  3001               	movlw	1
  8748  0E64                     u3785:	
  8749  0E64  35A4               	lslf	___lmul@multiplicand,f
  8750  0E65  0DA5               	rlf	___lmul@multiplicand+1,f
  8751  0E66  0DA6               	rlf	___lmul@multiplicand+2,f
  8752  0E67  0DA7               	rlf	___lmul@multiplicand+3,f
  8753  0E68  0B89               	decfsz	9,f
  8754  0E69  2E64               	goto	u3785
  8755  0E6A  3001               	movlw	1
  8756  0E6B                     u3795:	
  8757  0E6B  36A3               	lsrf	___lmul@multiplier+3,f
  8758  0E6C  0CA2               	rrf	___lmul@multiplier+2,f
  8759  0E6D  0CA1               	rrf	___lmul@multiplier+1,f
  8760  0E6E  0CA0               	rrf	___lmul@multiplier,f
  8761  0E6F  0B89               	decfsz	9,f
  8762  0E70  2E6B               	goto	u3795
  8763  0E71  0823               	movf	___lmul@multiplier+3,w
  8764  0E72  0422               	iorwf	___lmul@multiplier+2,w
  8765  0E73  0421               	iorwf	___lmul@multiplier+1,w
  8766  0E74  0420               	iorwf	___lmul@multiplier,w
  8767  0E75  1D03               	skipz
  8768  0E76  2E58               	goto	l3139
  8769  0E77  0876               	movf	___lmul@product+3,w
  8770  0E78  00A3               	movwf	?___lmul+3
  8771  0E79  0875               	movf	___lmul@product+2,w
  8772  0E7A  00A2               	movwf	?___lmul+2
  8773  0E7B  0874               	movf	___lmul@product+1,w
  8774  0E7C  00A1               	movwf	?___lmul+1
  8775  0E7D  0873               	movf	___lmul@product,w
  8776  0E7E  00A0               	movwf	?___lmul
  8777  0E7F  0008               	return
  8778  0E80                     __end_of___lmul:	
  8779                           
  8780                           	psect	text31
  8781  0C4B                     __ptext31:	
  8782 ;; *************** function ___ftneg *****************
  8783 ;; Defined at:
  8784 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  f1              3    3[COMMON] float 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;		None
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  3    3[COMMON] float 
  8791 ;; Registers used:
  8792 ;;		wreg
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8798 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;Total ram usage:        3 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; Hardware stack levels required when called:    2
  8805 ;; This function calls:
  8806 ;;		Nothing
  8807 ;; This function is called by:
  8808 ;;		_strtod
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           
  8813                           ;psect for function ___ftneg
  8814  0C4B                     ___ftneg:	
  8815                           
  8816                           ;incstack = 0
  8817                           ; Regs used in ___ftneg: [wreg]
  8818  0C4B  0875               	movf	___ftneg@f1+2,w
  8819  0C4C  0474               	iorwf	___ftneg@f1+1,w
  8820  0C4D  0473               	iorwf	___ftneg@f1,w
  8821  0C4E  1903               	skipnz
  8822  0C4F  0008               	return
  8823  0C50  3080               	movlw	128
  8824  0C51  06F5               	xorwf	___ftneg@f1+2,f
  8825  0C52  0008               	return
  8826  0C53                     __end_of___ftneg:	
  8827                           
  8828                           	psect	text32
  8829  0510                     __ptext32:	
  8830 ;; *************** function ___ftmul *****************
  8831 ;; Defined at:
  8832 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;  f1              3    9[BANK0 ] float 
  8835 ;;  f2              3   12[BANK0 ] float 
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  f3_as_produc    3   20[BANK0 ] unsigned um
  8838 ;;  sign            1   24[BANK0 ] unsigned char 
  8839 ;;  cntr            1   23[BANK0 ] unsigned char 
  8840 ;;  exp             1   19[BANK0 ] unsigned char 
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  3    9[BANK0 ] float 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0, pclath, cstack
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8850 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8851 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;Total ram usage:       16 bytes
  8855 ;; Hardware stack levels used:    1
  8856 ;; Hardware stack levels required when called:    3
  8857 ;; This function calls:
  8858 ;;		___ftpack
  8859 ;; This function is called by:
  8860 ;;		_PI
  8861 ;;		_strtod
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function ___ftmul
  8867  0510                     ___ftmul:	
  8868                           
  8869                           ;incstack = 0
  8870                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8871  0510  0020               	movlb	0	; select bank0
  8872  0511  0829               	movf	___ftmul@f1,w
  8873  0512  00AF               	movwf	??___ftmul
  8874  0513  082A               	movf	___ftmul@f1+1,w
  8875  0514  00B0               	movwf	??___ftmul+1
  8876  0515  082B               	movf	___ftmul@f1+2,w
  8877  0516  00B1               	movwf	??___ftmul+2
  8878  0517  1003               	clrc
  8879  0518  0D30               	rlf	??___ftmul+1,w
  8880  0519  0D31               	rlf	??___ftmul+2,w
  8881  051A  00B2               	movwf	??___ftmul+3
  8882  051B  0832               	movf	??___ftmul+3,w
  8883  051C  00B3               	movwf	___ftmul@exp
  8884  051D  0833               	movf	___ftmul@exp,w
  8885  051E  1D03               	btfss	3,2
  8886  051F  2D27               	goto	l3275
  8887  0520  3000               	movlw	0
  8888  0521  00A9               	movwf	?___ftmul
  8889  0522  3000               	movlw	0
  8890  0523  00AA               	movwf	?___ftmul+1
  8891  0524  3000               	movlw	0
  8892  0525  00AB               	movwf	?___ftmul+2
  8893  0526  0008               	return
  8894  0527                     l3275:	
  8895  0527  082C               	movf	___ftmul@f2,w
  8896  0528  00AF               	movwf	??___ftmul
  8897  0529  082D               	movf	___ftmul@f2+1,w
  8898  052A  00B0               	movwf	??___ftmul+1
  8899  052B  082E               	movf	___ftmul@f2+2,w
  8900  052C  00B1               	movwf	??___ftmul+2
  8901  052D  1003               	clrc
  8902  052E  0D30               	rlf	??___ftmul+1,w
  8903  052F  0D31               	rlf	??___ftmul+2,w
  8904  0530  00B2               	movwf	??___ftmul+3
  8905  0531  0832               	movf	??___ftmul+3,w
  8906  0532  00B8               	movwf	___ftmul@sign
  8907  0533  0838               	movf	___ftmul@sign,w
  8908  0534  1D03               	btfss	3,2
  8909  0535  2D3D               	goto	l3281
  8910  0536  3000               	movlw	0
  8911  0537  00A9               	movwf	?___ftmul
  8912  0538  3000               	movlw	0
  8913  0539  00AA               	movwf	?___ftmul+1
  8914  053A  3000               	movlw	0
  8915  053B  00AB               	movwf	?___ftmul+2
  8916  053C  0008               	return
  8917  053D                     l3281:	
  8918  053D  0838               	movf	___ftmul@sign,w
  8919  053E  3E7B               	addlw	123
  8920  053F  00AF               	movwf	??___ftmul
  8921  0540  082F               	movf	??___ftmul,w
  8922  0541  07B3               	addwf	___ftmul@exp,f
  8923  0542  0829               	movf	___ftmul@f1,w
  8924  0543  00AF               	movwf	??___ftmul
  8925  0544  082A               	movf	___ftmul@f1+1,w
  8926  0545  00B0               	movwf	??___ftmul+1
  8927  0546  082B               	movf	___ftmul@f1+2,w
  8928  0547  00B1               	movwf	??___ftmul+2
  8929  0548  3010               	movlw	16
  8930  0549                     u4045:	
  8931  0549  36B1               	lsrf	??___ftmul+2,f
  8932  054A  0CB0               	rrf	??___ftmul+1,f
  8933  054B  0CAF               	rrf	??___ftmul,f
  8934  054C  0B89               	decfsz	9,f
  8935  054D  2D49               	goto	u4045
  8936  054E  082F               	movf	??___ftmul,w
  8937  054F  00B2               	movwf	??___ftmul+3
  8938  0550  0832               	movf	??___ftmul+3,w
  8939  0551  00B8               	movwf	___ftmul@sign
  8940  0552  082C               	movf	___ftmul@f2,w
  8941  0553  00AF               	movwf	??___ftmul
  8942  0554  082D               	movf	___ftmul@f2+1,w
  8943  0555  00B0               	movwf	??___ftmul+1
  8944  0556  082E               	movf	___ftmul@f2+2,w
  8945  0557  00B1               	movwf	??___ftmul+2
  8946  0558  3010               	movlw	16
  8947  0559                     u4055:	
  8948  0559  36B1               	lsrf	??___ftmul+2,f
  8949  055A  0CB0               	rrf	??___ftmul+1,f
  8950  055B  0CAF               	rrf	??___ftmul,f
  8951  055C  0B89               	decfsz	9,f
  8952  055D  2D59               	goto	u4055
  8953  055E  082F               	movf	??___ftmul,w
  8954  055F  00B2               	movwf	??___ftmul+3
  8955  0560  0832               	movf	??___ftmul+3,w
  8956  0561  06B8               	xorwf	___ftmul@sign,f
  8957  0562  3080               	movlw	128
  8958  0563  00AF               	movwf	??___ftmul
  8959  0564  082F               	movf	??___ftmul,w
  8960  0565  05B8               	andwf	___ftmul@sign,f
  8961  0566  17AA               	bsf	___ftmul@f1+1,7
  8962  0567  17AD               	bsf	___ftmul@f2+1,7
  8963  0568  30FF               	movlw	255
  8964  0569  05AC               	andwf	___ftmul@f2,f
  8965  056A  30FF               	movlw	255
  8966  056B  05AD               	andwf	___ftmul@f2+1,f
  8967  056C  3000               	movlw	0
  8968  056D  05AE               	andwf	___ftmul@f2+2,f
  8969  056E  3000               	movlw	0
  8970  056F  00B4               	movwf	___ftmul@f3_as_product
  8971  0570  3000               	movlw	0
  8972  0571  00B5               	movwf	___ftmul@f3_as_product+1
  8973  0572  3000               	movlw	0
  8974  0573  00B6               	movwf	___ftmul@f3_as_product+2
  8975  0574  3007               	movlw	7
  8976  0575  00AF               	movwf	??___ftmul
  8977  0576  082F               	movf	??___ftmul,w
  8978  0577  00B7               	movwf	___ftmul@cntr
  8979  0578                     l3293:	
  8980  0578  1C29               	btfss	___ftmul@f1,0
  8981  0579  2D80               	goto	l3297
  8982  057A  082C               	movf	___ftmul@f2,w
  8983  057B  07B4               	addwf	___ftmul@f3_as_product,f
  8984  057C  082D               	movf	___ftmul@f2+1,w
  8985  057D  3DB5               	addwfc	___ftmul@f3_as_product+1,f
  8986  057E  082E               	movf	___ftmul@f2+2,w
  8987  057F  3DB6               	addwfc	___ftmul@f3_as_product+2,f
  8988  0580                     l3297:	
  8989  0580  3001               	movlw	1
  8990  0581                     u4075:	
  8991  0581  36AB               	lsrf	___ftmul@f1+2,f
  8992  0582  0CAA               	rrf	___ftmul@f1+1,f
  8993  0583  0CA9               	rrf	___ftmul@f1,f
  8994  0584  0B89               	decfsz	9,f
  8995  0585  2D81               	goto	u4075
  8996  0586  3001               	movlw	1
  8997  0587                     u4085:	
  8998  0587  35AC               	lslf	___ftmul@f2,f
  8999  0588  0DAD               	rlf	___ftmul@f2+1,f
  9000  0589  0DAE               	rlf	___ftmul@f2+2,f
  9001  058A  0B89               	decfsz	9,f
  9002  058B  2D87               	goto	u4085
  9003  058C  3001               	movlw	1
  9004  058D  02B7               	subwf	___ftmul@cntr,f
  9005  058E  1D03               	btfss	3,2
  9006  058F  2D78               	goto	l3293
  9007  0590  3009               	movlw	9
  9008  0591  00AF               	movwf	??___ftmul
  9009  0592  082F               	movf	??___ftmul,w
  9010  0593  00B7               	movwf	___ftmul@cntr
  9011  0594                     l3305:	
  9012  0594  1C29               	btfss	___ftmul@f1,0
  9013  0595  2D9C               	goto	l3309
  9014  0596  082C               	movf	___ftmul@f2,w
  9015  0597  07B4               	addwf	___ftmul@f3_as_product,f
  9016  0598  082D               	movf	___ftmul@f2+1,w
  9017  0599  3DB5               	addwfc	___ftmul@f3_as_product+1,f
  9018  059A  082E               	movf	___ftmul@f2+2,w
  9019  059B  3DB6               	addwfc	___ftmul@f3_as_product+2,f
  9020  059C                     l3309:	
  9021  059C  3001               	movlw	1
  9022  059D                     u4115:	
  9023  059D  36AB               	lsrf	___ftmul@f1+2,f
  9024  059E  0CAA               	rrf	___ftmul@f1+1,f
  9025  059F  0CA9               	rrf	___ftmul@f1,f
  9026  05A0  0B89               	decfsz	9,f
  9027  05A1  2D9D               	goto	u4115
  9028  05A2  3001               	movlw	1
  9029  05A3                     u4125:	
  9030  05A3  36B6               	lsrf	___ftmul@f3_as_product+2,f
  9031  05A4  0CB5               	rrf	___ftmul@f3_as_product+1,f
  9032  05A5  0CB4               	rrf	___ftmul@f3_as_product,f
  9033  05A6  0B89               	decfsz	9,f
  9034  05A7  2DA3               	goto	u4125
  9035  05A8  3001               	movlw	1
  9036  05A9  02B7               	subwf	___ftmul@cntr,f
  9037  05AA  1D03               	btfss	3,2
  9038  05AB  2D94               	goto	l3305
  9039  05AC  0834               	movf	___ftmul@f3_as_product,w
  9040  05AD  00F3               	movwf	___ftpack@arg
  9041  05AE  0835               	movf	___ftmul@f3_as_product+1,w
  9042  05AF  00F4               	movwf	___ftpack@arg+1
  9043  05B0  0836               	movf	___ftmul@f3_as_product+2,w
  9044  05B1  00F5               	movwf	___ftpack@arg+2
  9045  05B2  0833               	movf	___ftmul@exp,w
  9046  05B3  00AF               	movwf	??___ftmul
  9047  05B4  082F               	movf	??___ftmul,w
  9048  05B5  00F6               	movwf	___ftpack@exp
  9049  05B6  0838               	movf	___ftmul@sign,w
  9050  05B7  00B0               	movwf	??___ftmul+1
  9051  05B8  0830               	movf	??___ftmul+1,w
  9052  05B9  00F7               	movwf	___ftpack@sign
  9053  05BA  318F  272E         	fcall	___ftpack
  9054  05BC  0873               	movf	?___ftpack,w
  9055  05BD  0020               	movlb	0	; select bank0
  9056  05BE  00A9               	movwf	?___ftmul
  9057  05BF  0874               	movf	?___ftpack+1,w
  9058  05C0  00AA               	movwf	?___ftmul+1
  9059  05C1  0875               	movf	?___ftpack+2,w
  9060  05C2  00AB               	movwf	?___ftmul+2
  9061  05C3  0008               	return
  9062  05C4                     __end_of___ftmul:	
  9063                           
  9064                           	psect	text33
  9065  0EB5                     __ptext33:	
  9066 ;; *************** function ___ftge *****************
  9067 ;; Defined at:
  9068 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  ff1             3    0[BANK0 ] float 
  9071 ;;  ff2             3    3[BANK0 ] float 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;		None
  9074 ;; Return value:  Size  Location     Type
  9075 ;;		None               void
  9076 ;; Registers used:
  9077 ;;		wreg, status,2, status,0
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9083 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9085 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;Total ram usage:        9 bytes
  9088 ;; Hardware stack levels used:    1
  9089 ;; Hardware stack levels required when called:    2
  9090 ;; This function calls:
  9091 ;;		Nothing
  9092 ;; This function is called by:
  9093 ;;		_strtod
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function ___ftge
  9099  0EB5                     ___ftge:	
  9100                           
  9101                           ;incstack = 0
  9102                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9103  0EB5  0020               	movlb	0	; select bank0
  9104  0EB6  1FA2               	btfss	___ftge@ff1+2,7
  9105  0EB7  2ECC               	goto	l3253
  9106  0EB8  0920               	comf	___ftge@ff1,w
  9107  0EB9  00F3               	movwf	??___ftge
  9108  0EBA  0921               	comf	___ftge@ff1+1,w
  9109  0EBB  00F4               	movwf	??___ftge+1
  9110  0EBC  0922               	comf	___ftge@ff1+2,w
  9111  0EBD  00F5               	movwf	??___ftge+2
  9112  0EBE  0AF3               	incf	??___ftge,f
  9113  0EBF  1903               	skipnz
  9114  0EC0  0AF4               	incf	??___ftge+1,f
  9115  0EC1  1903               	skipnz
  9116  0EC2  0AF5               	incf	??___ftge+2,f
  9117  0EC3  3000               	movlw	0
  9118  0EC4  0773               	addwf	??___ftge,w
  9119  0EC5  00A0               	movwf	___ftge@ff1
  9120  0EC6  3000               	movlw	0
  9121  0EC7  3D74               	addwfc	??___ftge+1,w
  9122  0EC8  00A1               	movwf	___ftge@ff1+1
  9123  0EC9  3080               	movlw	128
  9124  0ECA  3D75               	addwfc	??___ftge+2,w
  9125  0ECB  00A2               	movwf	___ftge@ff1+2
  9126  0ECC                     l3253:	
  9127  0ECC  1FA5               	btfss	___ftge@ff2+2,7
  9128  0ECD  2EE2               	goto	l3257
  9129  0ECE  0923               	comf	___ftge@ff2,w
  9130  0ECF  00F3               	movwf	??___ftge
  9131  0ED0  0924               	comf	___ftge@ff2+1,w
  9132  0ED1  00F4               	movwf	??___ftge+1
  9133  0ED2  0925               	comf	___ftge@ff2+2,w
  9134  0ED3  00F5               	movwf	??___ftge+2
  9135  0ED4  0AF3               	incf	??___ftge,f
  9136  0ED5  1903               	skipnz
  9137  0ED6  0AF4               	incf	??___ftge+1,f
  9138  0ED7  1903               	skipnz
  9139  0ED8  0AF5               	incf	??___ftge+2,f
  9140  0ED9  3000               	movlw	0
  9141  0EDA  0773               	addwf	??___ftge,w
  9142  0EDB  00A3               	movwf	___ftge@ff2
  9143  0EDC  3000               	movlw	0
  9144  0EDD  3D74               	addwfc	??___ftge+1,w
  9145  0EDE  00A4               	movwf	___ftge@ff2+1
  9146  0EDF  3080               	movlw	128
  9147  0EE0  3D75               	addwfc	??___ftge+2,w
  9148  0EE1  00A5               	movwf	___ftge@ff2+2
  9149  0EE2                     l3257:	
  9150  0EE2  3080               	movlw	128
  9151  0EE3  06A2               	xorwf	___ftge@ff1+2,f
  9152  0EE4  3080               	movlw	128
  9153  0EE5  06A5               	xorwf	___ftge@ff2+2,f
  9154  0EE6  0825               	movf	___ftge@ff2+2,w
  9155  0EE7  0222               	subwf	___ftge@ff1+2,w
  9156  0EE8  1D03               	skipz
  9157  0EE9  0008               	return
  9158  0EEA  0824               	movf	___ftge@ff2+1,w
  9159  0EEB  0221               	subwf	___ftge@ff1+1,w
  9160  0EEC  1D03               	skipz
  9161  0EED  0008               	return
  9162  0EEE  0823               	movf	___ftge@ff2,w
  9163  0EEF  0220               	subwf	___ftge@ff1,w
  9164  0EF0  0008               	return
  9165  0EF1                     __end_of___ftge:	
  9166                           
  9167                           	psect	text34
  9168  0673                     __ptext34:	
  9169 ;; *************** function ___ftdiv *****************
  9170 ;; Defined at:
  9171 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  9172 ;; Parameters:    Size  Location     Type
  9173 ;;  f2              3    3[BANK0 ] float 
  9174 ;;  f1              3    6[BANK0 ] float 
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;  f3              3   14[BANK0 ] float 
  9177 ;;  sign            1   18[BANK0 ] unsigned char 
  9178 ;;  exp             1   17[BANK0 ] unsigned char 
  9179 ;;  cntr            1   13[BANK0 ] unsigned char 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  3    3[BANK0 ] float 
  9182 ;; Registers used:
  9183 ;;		wreg, status,2, status,0, pclath, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9189 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9190 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9191 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9192 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9193 ;;Total ram usage:       16 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    3
  9196 ;; This function calls:
  9197 ;;		___ftpack
  9198 ;; This function is called by:
  9199 ;;		_strtod
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           
  9204                           ;psect for function ___ftdiv
  9205  0673                     ___ftdiv:	
  9206                           
  9207                           ;incstack = 0
  9208                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9209  0673  0020               	movlb	0	; select bank0
  9210  0674  0826               	movf	___ftdiv@f1,w
  9211  0675  00A9               	movwf	??___ftdiv
  9212  0676  0827               	movf	___ftdiv@f1+1,w
  9213  0677  00AA               	movwf	??___ftdiv+1
  9214  0678  0828               	movf	___ftdiv@f1+2,w
  9215  0679  00AB               	movwf	??___ftdiv+2
  9216  067A  1003               	clrc
  9217  067B  0D2A               	rlf	??___ftdiv+1,w
  9218  067C  0D2B               	rlf	??___ftdiv+2,w
  9219  067D  00AC               	movwf	??___ftdiv+3
  9220  067E  082C               	movf	??___ftdiv+3,w
  9221  067F  00B1               	movwf	___ftdiv@exp
  9222  0680  0831               	movf	___ftdiv@exp,w
  9223  0681  1D03               	btfss	3,2
  9224  0682  2E8A               	goto	l3213
  9225  0683  3000               	movlw	0
  9226  0684  00A3               	movwf	?___ftdiv
  9227  0685  3000               	movlw	0
  9228  0686  00A4               	movwf	?___ftdiv+1
  9229  0687  3000               	movlw	0
  9230  0688  00A5               	movwf	?___ftdiv+2
  9231  0689  0008               	return
  9232  068A                     l3213:	
  9233  068A  0823               	movf	___ftdiv@f2,w
  9234  068B  00A9               	movwf	??___ftdiv
  9235  068C  0824               	movf	___ftdiv@f2+1,w
  9236  068D  00AA               	movwf	??___ftdiv+1
  9237  068E  0825               	movf	___ftdiv@f2+2,w
  9238  068F  00AB               	movwf	??___ftdiv+2
  9239  0690  1003               	clrc
  9240  0691  0D2A               	rlf	??___ftdiv+1,w
  9241  0692  0D2B               	rlf	??___ftdiv+2,w
  9242  0693  00AC               	movwf	??___ftdiv+3
  9243  0694  082C               	movf	??___ftdiv+3,w
  9244  0695  00B2               	movwf	___ftdiv@sign
  9245  0696  0832               	movf	___ftdiv@sign,w
  9246  0697  1D03               	btfss	3,2
  9247  0698  2EA0               	goto	l3219
  9248  0699  3000               	movlw	0
  9249  069A  00A3               	movwf	?___ftdiv
  9250  069B  3000               	movlw	0
  9251  069C  00A4               	movwf	?___ftdiv+1
  9252  069D  3000               	movlw	0
  9253  069E  00A5               	movwf	?___ftdiv+2
  9254  069F  0008               	return
  9255  06A0                     l3219:	
  9256  06A0  3000               	movlw	0
  9257  06A1  00AE               	movwf	___ftdiv@f3
  9258  06A2  3000               	movlw	0
  9259  06A3  00AF               	movwf	___ftdiv@f3+1
  9260  06A4  3000               	movlw	0
  9261  06A5  00B0               	movwf	___ftdiv@f3+2
  9262  06A6  3089               	movlw	137
  9263  06A7  0732               	addwf	___ftdiv@sign,w
  9264  06A8  00A9               	movwf	??___ftdiv
  9265  06A9  0829               	movf	??___ftdiv,w
  9266  06AA  02B1               	subwf	___ftdiv@exp,f
  9267  06AB  0826               	movf	___ftdiv@f1,w
  9268  06AC  00A9               	movwf	??___ftdiv
  9269  06AD  0827               	movf	___ftdiv@f1+1,w
  9270  06AE  00AA               	movwf	??___ftdiv+1
  9271  06AF  0828               	movf	___ftdiv@f1+2,w
  9272  06B0  00AB               	movwf	??___ftdiv+2
  9273  06B1  3010               	movlw	16
  9274  06B2                     u3935:	
  9275  06B2  36AB               	lsrf	??___ftdiv+2,f
  9276  06B3  0CAA               	rrf	??___ftdiv+1,f
  9277  06B4  0CA9               	rrf	??___ftdiv,f
  9278  06B5  0B89               	decfsz	9,f
  9279  06B6  2EB2               	goto	u3935
  9280  06B7  0829               	movf	??___ftdiv,w
  9281  06B8  00AC               	movwf	??___ftdiv+3
  9282  06B9  082C               	movf	??___ftdiv+3,w
  9283  06BA  00B2               	movwf	___ftdiv@sign
  9284  06BB  0823               	movf	___ftdiv@f2,w
  9285  06BC  00A9               	movwf	??___ftdiv
  9286  06BD  0824               	movf	___ftdiv@f2+1,w
  9287  06BE  00AA               	movwf	??___ftdiv+1
  9288  06BF  0825               	movf	___ftdiv@f2+2,w
  9289  06C0  00AB               	movwf	??___ftdiv+2
  9290  06C1  3010               	movlw	16
  9291  06C2                     u3945:	
  9292  06C2  36AB               	lsrf	??___ftdiv+2,f
  9293  06C3  0CAA               	rrf	??___ftdiv+1,f
  9294  06C4  0CA9               	rrf	??___ftdiv,f
  9295  06C5  0B89               	decfsz	9,f
  9296  06C6  2EC2               	goto	u3945
  9297  06C7  0829               	movf	??___ftdiv,w
  9298  06C8  00AC               	movwf	??___ftdiv+3
  9299  06C9  082C               	movf	??___ftdiv+3,w
  9300  06CA  06B2               	xorwf	___ftdiv@sign,f
  9301  06CB  3080               	movlw	128
  9302  06CC  00A9               	movwf	??___ftdiv
  9303  06CD  0829               	movf	??___ftdiv,w
  9304  06CE  05B2               	andwf	___ftdiv@sign,f
  9305  06CF  17A7               	bsf	___ftdiv@f1+1,7
  9306  06D0  30FF               	movlw	255
  9307  06D1  05A6               	andwf	___ftdiv@f1,f
  9308  06D2  30FF               	movlw	255
  9309  06D3  05A7               	andwf	___ftdiv@f1+1,f
  9310  06D4  3000               	movlw	0
  9311  06D5  05A8               	andwf	___ftdiv@f1+2,f
  9312  06D6  17A4               	bsf	___ftdiv@f2+1,7
  9313  06D7  30FF               	movlw	255
  9314  06D8  05A3               	andwf	___ftdiv@f2,f
  9315  06D9  30FF               	movlw	255
  9316  06DA  05A4               	andwf	___ftdiv@f2+1,f
  9317  06DB  3000               	movlw	0
  9318  06DC  05A5               	andwf	___ftdiv@f2+2,f
  9319  06DD  3018               	movlw	24
  9320  06DE  00A9               	movwf	??___ftdiv
  9321  06DF  0829               	movf	??___ftdiv,w
  9322  06E0  00AD               	movwf	___ftdiv@cntr
  9323  06E1                     l3233:	
  9324  06E1  3001               	movlw	1
  9325  06E2                     u3955:	
  9326  06E2  35AE               	lslf	___ftdiv@f3,f
  9327  06E3  0DAF               	rlf	___ftdiv@f3+1,f
  9328  06E4  0DB0               	rlf	___ftdiv@f3+2,f
  9329  06E5  0B89               	decfsz	9,f
  9330  06E6  2EE2               	goto	u3955
  9331  06E7  0825               	movf	___ftdiv@f2+2,w
  9332  06E8  0228               	subwf	___ftdiv@f1+2,w
  9333  06E9  1D03               	skipz
  9334  06EA  2EF1               	goto	u3965
  9335  06EB  0824               	movf	___ftdiv@f2+1,w
  9336  06EC  0227               	subwf	___ftdiv@f1+1,w
  9337  06ED  1D03               	skipz
  9338  06EE  2EF1               	goto	u3965
  9339  06EF  0823               	movf	___ftdiv@f2,w
  9340  06F0  0226               	subwf	___ftdiv@f1,w
  9341  06F1                     u3965:	
  9342  06F1  1C03               	skipc
  9343  06F2  2EFA               	goto	l3241
  9344  06F3  0823               	movf	___ftdiv@f2,w
  9345  06F4  02A6               	subwf	___ftdiv@f1,f
  9346  06F5  0824               	movf	___ftdiv@f2+1,w
  9347  06F6  3BA7               	subwfb	___ftdiv@f1+1,f
  9348  06F7  0825               	movf	___ftdiv@f2+2,w
  9349  06F8  3BA8               	subwfb	___ftdiv@f1+2,f
  9350  06F9  142E               	bsf	___ftdiv@f3,0
  9351  06FA                     l3241:	
  9352  06FA  3001               	movlw	1
  9353  06FB                     u3975:	
  9354  06FB  35A6               	lslf	___ftdiv@f1,f
  9355  06FC  0DA7               	rlf	___ftdiv@f1+1,f
  9356  06FD  0DA8               	rlf	___ftdiv@f1+2,f
  9357  06FE  0B89               	decfsz	9,f
  9358  06FF  2EFB               	goto	u3975
  9359  0700  3001               	movlw	1
  9360  0701  02AD               	subwf	___ftdiv@cntr,f
  9361  0702  1D03               	btfss	3,2
  9362  0703  2EE1               	goto	l3233
  9363  0704  082E               	movf	___ftdiv@f3,w
  9364  0705  00F3               	movwf	___ftpack@arg
  9365  0706  082F               	movf	___ftdiv@f3+1,w
  9366  0707  00F4               	movwf	___ftpack@arg+1
  9367  0708  0830               	movf	___ftdiv@f3+2,w
  9368  0709  00F5               	movwf	___ftpack@arg+2
  9369  070A  0831               	movf	___ftdiv@exp,w
  9370  070B  00A9               	movwf	??___ftdiv
  9371  070C  0829               	movf	??___ftdiv,w
  9372  070D  00F6               	movwf	___ftpack@exp
  9373  070E  0832               	movf	___ftdiv@sign,w
  9374  070F  00AA               	movwf	??___ftdiv+1
  9375  0710  082A               	movf	??___ftdiv+1,w
  9376  0711  00F7               	movwf	___ftpack@sign
  9377  0712  318F  272E         	fcall	___ftpack
  9378  0714  0873               	movf	?___ftpack,w
  9379  0715  0020               	movlb	0	; select bank0
  9380  0716  00A3               	movwf	?___ftdiv
  9381  0717  0874               	movf	?___ftpack+1,w
  9382  0718  00A4               	movwf	?___ftdiv+1
  9383  0719  0875               	movf	?___ftpack+2,w
  9384  071A  00A5               	movwf	?___ftdiv+2
  9385  071B  0008               	return
  9386  071C                     __end_of___ftdiv:	
  9387                           
  9388                           	psect	text35
  9389  0CD7                     __ptext35:	
  9390 ;; *************** function ___bmul *****************
  9391 ;; Defined at:
  9392 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  multiplier      1    wreg     unsigned char 
  9395 ;;  multiplicand    1    3[COMMON] unsigned char 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  multiplier      1    6[COMMON] unsigned char 
  9398 ;;  product         1    5[COMMON] unsigned char 
  9399 ;; Return value:  Size  Location     Type
  9400 ;;                  1    wreg      unsigned char 
  9401 ;; Registers used:
  9402 ;;		wreg, status,2, status,0
  9403 ;; Tracked objects:
  9404 ;;		On entry : 0/0
  9405 ;;		On exit  : 0/0
  9406 ;;		Unchanged: 0/0
  9407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;Total ram usage:        4 bytes
  9413 ;; Hardware stack levels used:    1
  9414 ;; Hardware stack levels required when called:    2
  9415 ;; This function calls:
  9416 ;;		Nothing
  9417 ;; This function is called by:
  9418 ;;		_strtod
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           
  9423                           ;psect for function ___bmul
  9424  0CD7                     ___bmul:	
  9425                           
  9426                           ;incstack = 0
  9427                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9428                           ;___bmul@multiplier stored from wreg
  9429  0CD7  00F6               	movwf	___bmul@multiplier
  9430  0CD8  01F5               	clrf	___bmul@product
  9431  0CD9                     l3153:	
  9432  0CD9  1C76               	btfss	___bmul@multiplier,0
  9433  0CDA  2CDF               	goto	l3157
  9434  0CDB  0873               	movf	___bmul@multiplicand,w
  9435  0CDC  00F4               	movwf	??___bmul
  9436  0CDD  0874               	movf	??___bmul,w
  9437  0CDE  07F5               	addwf	___bmul@product,f
  9438  0CDF                     l3157:	
  9439  0CDF  1003               	clrc
  9440  0CE0  0DF3               	rlf	___bmul@multiplicand,f
  9441  0CE1  1003               	clrc
  9442  0CE2  0CF6               	rrf	___bmul@multiplier,f
  9443  0CE3  0876               	movf	___bmul@multiplier,w
  9444  0CE4  1D03               	btfss	3,2
  9445  0CE5  2CD9               	goto	l3153
  9446  0CE6  0875               	movf	___bmul@product,w
  9447  0CE7  0008               	return
  9448  0CE8                     __end_of___bmul:	
  9449                           
  9450                           	psect	text36
  9451  0EF1                     __ptext36:	
  9452 ;; *************** function ___altoft *****************
  9453 ;; Defined at:
  9454 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  c               4    3[BANK0 ] long 
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  sign            1   10[BANK0 ] unsigned char 
  9459 ;;  exp             1    9[BANK0 ] unsigned char 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  3    3[BANK0 ] float 
  9462 ;; Registers used:
  9463 ;;		wreg, status,2, status,0, pclath, cstack
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9469 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9470 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9471 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9472 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9473 ;;Total ram usage:        8 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; Hardware stack levels required when called:    3
  9476 ;; This function calls:
  9477 ;;		___ftpack
  9478 ;; This function is called by:
  9479 ;;		_strtod
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           
  9484                           ;psect for function ___altoft
  9485  0EF1                     ___altoft:	
  9486                           
  9487                           ;incstack = 0
  9488                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  9489  0EF1  0020               	movlb	0	; select bank0
  9490  0EF2  01AA               	clrf	___altoft@sign
  9491  0EF3  308E               	movlw	142
  9492  0EF4  00A7               	movwf	??___altoft
  9493  0EF5  0827               	movf	??___altoft,w
  9494  0EF6  00A9               	movwf	___altoft@exp
  9495  0EF7  1FA6               	btfss	___altoft@c+3,7
  9496  0EF8  2F06               	goto	l3175
  9497  0EF9  09A3               	comf	___altoft@c,f
  9498  0EFA  09A4               	comf	___altoft@c+1,f
  9499  0EFB  09A5               	comf	___altoft@c+2,f
  9500  0EFC  09A6               	comf	___altoft@c+3,f
  9501  0EFD  0AA3               	incf	___altoft@c,f
  9502  0EFE  1903               	skipnz
  9503  0EFF  0AA4               	incf	___altoft@c+1,f
  9504  0F00  1903               	skipnz
  9505  0F01  0AA5               	incf	___altoft@c+2,f
  9506  0F02  1903               	skipnz
  9507  0F03  0AA6               	incf	___altoft@c+3,f
  9508  0F04  01AA               	clrf	___altoft@sign
  9509  0F05  0AAA               	incf	___altoft@sign,f
  9510  0F06                     l3175:	
  9511  0F06  30FF               	movlw	255
  9512  0F07  0526               	andwf	___altoft@c+3,w
  9513  0F08  1903               	btfsc	3,2
  9514  0F09  2F16               	goto	l3177
  9515  0F0A  3001               	movlw	1
  9516  0F0B                     u3845:	
  9517  0F0B  36A6               	lsrf	___altoft@c+3,f
  9518  0F0C  0CA5               	rrf	___altoft@c+2,f
  9519  0F0D  0CA4               	rrf	___altoft@c+1,f
  9520  0F0E  0CA3               	rrf	___altoft@c,f
  9521  0F0F  0B89               	decfsz	9,f
  9522  0F10  2F0B               	goto	u3845
  9523  0F11  3001               	movlw	1
  9524  0F12  00A7               	movwf	??___altoft
  9525  0F13  0827               	movf	??___altoft,w
  9526  0F14  07A9               	addwf	___altoft@exp,f
  9527  0F15  2F06               	goto	l3175
  9528  0F16                     l3177:	
  9529  0F16  0823               	movf	___altoft@c,w
  9530  0F17  00F3               	movwf	___ftpack@arg
  9531  0F18  0824               	movf	___altoft@c+1,w
  9532  0F19  00F4               	movwf	___ftpack@arg+1
  9533  0F1A  0825               	movf	___altoft@c+2,w
  9534  0F1B  00F5               	movwf	___ftpack@arg+2
  9535  0F1C  0829               	movf	___altoft@exp,w
  9536  0F1D  00A7               	movwf	??___altoft
  9537  0F1E  0827               	movf	??___altoft,w
  9538  0F1F  00F6               	movwf	___ftpack@exp
  9539  0F20  082A               	movf	___altoft@sign,w
  9540  0F21  00A8               	movwf	??___altoft+1
  9541  0F22  0828               	movf	??___altoft+1,w
  9542  0F23  00F7               	movwf	___ftpack@sign
  9543  0F24  318F  272E         	fcall	___ftpack
  9544  0F26  0873               	movf	?___ftpack,w
  9545  0F27  0020               	movlb	0	; select bank0
  9546  0F28  00A3               	movwf	?___altoft
  9547  0F29  0874               	movf	?___ftpack+1,w
  9548  0F2A  00A4               	movwf	?___altoft+1
  9549  0F2B  0875               	movf	?___ftpack+2,w
  9550  0F2C  00A5               	movwf	?___altoft+2
  9551  0F2D  0008               	return
  9552  0F2E                     __end_of___altoft:	
  9553                           
  9554                           	psect	text37
  9555  0F2E                     __ptext37:	
  9556 ;; *************** function ___ftpack *****************
  9557 ;; Defined at:
  9558 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9559 ;; Parameters:    Size  Location     Type
  9560 ;;  arg             3    3[COMMON] unsigned um
  9561 ;;  exp             1    6[COMMON] unsigned char 
  9562 ;;  sign            1    7[COMMON] unsigned char 
  9563 ;; Auto vars:     Size  Location     Type
  9564 ;;		None
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  3    3[COMMON] float 
  9567 ;; Registers used:
  9568 ;;		wreg, status,2, status,0
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9574 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Totals:         5       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;Total ram usage:        8 bytes
  9579 ;; Hardware stack levels used:    1
  9580 ;; Hardware stack levels required when called:    2
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		___altoft
  9585 ;;		___awtoft
  9586 ;;		___ftadd
  9587 ;;		___ftdiv
  9588 ;;		___ftmul
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           
  9593                           ;psect for function ___ftpack
  9594  0F2E                     ___ftpack:	
  9595                           
  9596                           ;incstack = 0
  9597                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9598  0F2E  0876               	movf	___ftpack@exp,w
  9599  0F2F  1903               	btfsc	3,2
  9600  0F30  2F36               	goto	l3091
  9601  0F31  0875               	movf	___ftpack@arg+2,w
  9602  0F32  0474               	iorwf	___ftpack@arg+1,w
  9603  0F33  0473               	iorwf	___ftpack@arg,w
  9604  0F34  1D03               	skipz
  9605  0F35  2F48               	goto	l3097
  9606  0F36                     l3091:	
  9607  0F36  3000               	movlw	0
  9608  0F37  00F3               	movwf	?___ftpack
  9609  0F38  3000               	movlw	0
  9610  0F39  00F4               	movwf	?___ftpack+1
  9611  0F3A  3000               	movlw	0
  9612  0F3B  00F5               	movwf	?___ftpack+2
  9613  0F3C  0008               	return
  9614  0F3D                     l3095:	
  9615  0F3D  3001               	movlw	1
  9616  0F3E  0020               	movlb	0	; select bank0
  9617  0F3F  00A0               	movwf	??___ftpack
  9618  0F40  0820               	movf	??___ftpack,w
  9619  0F41  07F6               	addwf	___ftpack@exp,f
  9620  0F42  3001               	movlw	1
  9621  0F43                     u3645:	
  9622  0F43  36F5               	lsrf	___ftpack@arg+2,f
  9623  0F44  0CF4               	rrf	___ftpack@arg+1,f
  9624  0F45  0CF3               	rrf	___ftpack@arg,f
  9625  0F46  0B89               	decfsz	9,f
  9626  0F47  2F43               	goto	u3645
  9627  0F48                     l3097:	
  9628  0F48  30FE               	movlw	254
  9629  0F49  0575               	andwf	___ftpack@arg+2,w
  9630  0F4A  1903               	btfsc	3,2
  9631  0F4B  2F62               	goto	l786
  9632  0F4C  2F3D               	goto	l3095
  9633  0F4D                     l3099:	
  9634  0F4D  3001               	movlw	1
  9635  0F4E  0020               	movlb	0	; select bank0
  9636  0F4F  00A0               	movwf	??___ftpack
  9637  0F50  0820               	movf	??___ftpack,w
  9638  0F51  07F6               	addwf	___ftpack@exp,f
  9639  0F52  3001               	movlw	1
  9640  0F53  07F3               	addwf	___ftpack@arg,f
  9641  0F54  3000               	movlw	0
  9642  0F55  1803               	skipnc
  9643  0F56  3001               	movlw	1
  9644  0F57  07F4               	addwf	___ftpack@arg+1,f
  9645  0F58  3000               	movlw	0
  9646  0F59  1803               	skipnc
  9647  0F5A  3001               	movlw	1
  9648  0F5B  07F5               	addwf	___ftpack@arg+2,f
  9649  0F5C  3001               	movlw	1
  9650  0F5D                     u3665:	
  9651  0F5D  36F5               	lsrf	___ftpack@arg+2,f
  9652  0F5E  0CF4               	rrf	___ftpack@arg+1,f
  9653  0F5F  0CF3               	rrf	___ftpack@arg,f
  9654  0F60  0B89               	decfsz	9,f
  9655  0F61  2F5D               	goto	u3665
  9656  0F62                     l786:	
  9657  0F62  30FF               	movlw	255
  9658  0F63  0575               	andwf	___ftpack@arg+2,w
  9659  0F64  1903               	btfsc	3,2
  9660  0F65  2F6F               	goto	l3107
  9661  0F66  2F4D               	goto	l3099
  9662  0F67                     l3105:	
  9663  0F67  3001               	movlw	1
  9664  0F68  02F6               	subwf	___ftpack@exp,f
  9665  0F69  3001               	movlw	1
  9666  0F6A                     u3685:	
  9667  0F6A  35F3               	lslf	___ftpack@arg,f
  9668  0F6B  0DF4               	rlf	___ftpack@arg+1,f
  9669  0F6C  0DF5               	rlf	___ftpack@arg+2,f
  9670  0F6D  0B89               	decfsz	9,f
  9671  0F6E  2F6A               	goto	u3685
  9672  0F6F                     l3107:	
  9673  0F6F  1BF4               	btfsc	___ftpack@arg+1,7
  9674  0F70  2F75               	goto	l793
  9675  0F71  3002               	movlw	2
  9676  0F72  0276               	subwf	___ftpack@exp,w
  9677  0F73  1803               	skipnc
  9678  0F74  2F67               	goto	l3105
  9679  0F75                     l793:	
  9680  0F75  1876               	btfsc	___ftpack@exp,0
  9681  0F76  2F7D               	goto	l794
  9682  0F77  30FF               	movlw	255
  9683  0F78  05F3               	andwf	___ftpack@arg,f
  9684  0F79  307F               	movlw	127
  9685  0F7A  05F4               	andwf	___ftpack@arg+1,f
  9686  0F7B  30FF               	movlw	255
  9687  0F7C  05F5               	andwf	___ftpack@arg+2,f
  9688  0F7D                     l794:	
  9689  0F7D  1003               	clrc
  9690  0F7E  0CF6               	rrf	___ftpack@exp,f
  9691  0F7F  0876               	movf	___ftpack@exp,w
  9692  0F80  0020               	movlb	0	; select bank0
  9693  0F81  00A0               	movwf	??___ftpack
  9694  0F82  01A1               	clrf	??___ftpack+1
  9695  0F83  01A2               	clrf	??___ftpack+2
  9696  0F84  3010               	movlw	16
  9697  0F85                     u3725:	
  9698  0F85  35A0               	lslf	??___ftpack,f
  9699  0F86  0DA1               	rlf	??___ftpack+1,f
  9700  0F87  0DA2               	rlf	??___ftpack+2,f
  9701  0F88  0B89               	decfsz	9,f
  9702  0F89  2F85               	goto	u3725
  9703  0F8A  0820               	movf	??___ftpack,w
  9704  0F8B  04F3               	iorwf	___ftpack@arg,f
  9705  0F8C  0821               	movf	??___ftpack+1,w
  9706  0F8D  04F4               	iorwf	___ftpack@arg+1,f
  9707  0F8E  0822               	movf	??___ftpack+2,w
  9708  0F8F  04F5               	iorwf	___ftpack@arg+2,f
  9709  0F90  0877               	movf	___ftpack@sign,w
  9710  0F91  1903               	btfsc	3,2
  9711  0F92  0008               	return
  9712  0F93  17F5               	bsf	___ftpack@arg+2,7
  9713  0F94  0008               	return
  9714  0F95                     __end_of___ftpack:	
  9715                           
  9716                           	psect	text38
  9717  0C23                     __ptext38:	
  9718 ;; *************** function _PI_SetSetpoint *****************
  9719 ;; Defined at:
  9720 ;;		line 25 in file "PI.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;  value           2    3[COMMON] int 
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;		None
  9725 ;; Return value:  Size  Location     Type
  9726 ;;                  1    wreg      void 
  9727 ;; Registers used:
  9728 ;;		wreg
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;Total ram usage:        2 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:    2
  9741 ;; This function calls:
  9742 ;;		Nothing
  9743 ;; This function is called by:
  9744 ;;		_Java
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           
  9749                           ;psect for function _PI_SetSetpoint
  9750  0C23                     _PI_SetSetpoint:	
  9751                           
  9752                           ;PI.c: 26: setpoint = value;
  9753                           
  9754                           ;incstack = 0
  9755                           ; Regs used in _PI_SetSetpoint: [wreg]
  9756  0C23  0874               	movf	PI_SetSetpoint@value+1,w
  9757  0C24  0020               	movlb	0	; select bank0
  9758  0C25  00EE               	movwf	_setpoint+1
  9759  0C26  0873               	movf	PI_SetSetpoint@value,w
  9760  0C27  00ED               	movwf	_setpoint
  9761  0C28  0008               	return
  9762  0C29                     __end_of_PI_SetSetpoint:	
  9763                           
  9764                           	psect	text39
  9765  0C43                     __ptext39:	
  9766 ;; *************** function _PI_SetKp *****************
  9767 ;; Defined at:
  9768 ;;		line 29 in file "PI.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  value           3    3[COMMON] float 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;		None
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      void 
  9775 ;; Registers used:
  9776 ;;		wreg
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9782 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;Total ram usage:        3 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    2
  9789 ;; This function calls:
  9790 ;;		Nothing
  9791 ;; This function is called by:
  9792 ;;		_Java
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           
  9797                           ;psect for function _PI_SetKp
  9798  0C43                     _PI_SetKp:	
  9799                           
  9800                           ;PI.c: 30: kp = value;
  9801                           
  9802                           ;incstack = 0
  9803                           ; Regs used in _PI_SetKp: [wreg]
  9804  0C43  0873               	movf	PI_SetKp@value,w
  9805  0C44  0021               	movlb	1	; select bank1
  9806  0C45  00D0               	movwf	_kp^(0+128)
  9807  0C46  0874               	movf	PI_SetKp@value+1,w
  9808  0C47  00D1               	movwf	(_kp+1)^(0+128)
  9809  0C48  0875               	movf	PI_SetKp@value+2,w
  9810  0C49  00D2               	movwf	(_kp+2)^(0+128)
  9811  0C4A  0008               	return
  9812  0C4B                     __end_of_PI_SetKp:	
  9813                           
  9814                           	psect	text40
  9815  0C3B                     __ptext40:	
  9816 ;; *************** function _PI_SetKi *****************
  9817 ;; Defined at:
  9818 ;;		line 33 in file "PI.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  value           3    3[COMMON] float 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		wreg
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9832 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9835 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9836 ;;Total ram usage:        3 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; Hardware stack levels required when called:    2
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_Java
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           
  9846                           
  9847                           ;psect for function _PI_SetKi
  9848  0C3B                     _PI_SetKi:	
  9849                           
  9850                           ;PI.c: 34: ki = value;
  9851                           
  9852                           ;incstack = 0
  9853                           ; Regs used in _PI_SetKi: [wreg]
  9854  0C3B  0873               	movf	PI_SetKi@value,w
  9855  0C3C  0021               	movlb	1	; select bank1
  9856  0C3D  00D3               	movwf	_ki^(0+128)
  9857  0C3E  0874               	movf	PI_SetKi@value+1,w
  9858  0C3F  00D4               	movwf	(_ki+1)^(0+128)
  9859  0C40  0875               	movf	PI_SetKi@value+2,w
  9860  0C41  00D5               	movwf	(_ki+2)^(0+128)
  9861  0C42  0008               	return
  9862  0C43                     __end_of_PI_SetKi:	
  9863                           
  9864                           	psect	text41
  9865  0C1D                     __ptext41:	
  9866 ;; *************** function _PI_GetSensorHeight *****************
  9867 ;; Defined at:
  9868 ;;		line 21 in file "PI.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;		None
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;		None
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  2    3[COMMON] int 
  9875 ;; Registers used:
  9876 ;;		wreg
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;Total ram usage:        2 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:    2
  9889 ;; This function calls:
  9890 ;;		Nothing
  9891 ;; This function is called by:
  9892 ;;		_Java
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           
  9897                           ;psect for function _PI_GetSensorHeight
  9898  0C1D                     _PI_GetSensorHeight:	
  9899                           
  9900                           ;PI.c: 22: return sensorHeight;
  9901                           
  9902                           ;incstack = 0
  9903                           ; Regs used in _PI_GetSensorHeight: [wreg]
  9904  0C1D  0020               	movlb	0	; select bank0
  9905  0C1E  0867               	movf	_sensorHeight+1,w
  9906  0C1F  00F4               	movwf	?_PI_GetSensorHeight+1
  9907  0C20  0866               	movf	_sensorHeight,w
  9908  0C21  00F3               	movwf	?_PI_GetSensorHeight
  9909  0C22  0008               	return
  9910  0C23                     __end_of_PI_GetSensorHeight:	
  9911                           
  9912                           	psect	text42
  9913  0D77                     __ptext42:	
  9914 ;; *************** function _EUSART_Read *****************
  9915 ;; Defined at:
  9916 ;;		line 112 in file "mcc_generated_files/eusart.c"
  9917 ;; Parameters:    Size  Location     Type
  9918 ;;		None
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;  readValue       1    4[COMMON] unsigned char 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      unsigned char 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;Total ram usage:        2 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:    2
  9937 ;; This function calls:
  9938 ;;		Nothing
  9939 ;; This function is called by:
  9940 ;;		_Java
  9941 ;;		_getch
  9942 ;; This function uses a non-reentrant model
  9943 ;;
  9944                           
  9945                           
  9946                           ;psect for function _EUSART_Read
  9947  0D77                     _EUSART_Read:	
  9948                           
  9949                           ;eusart.c: 114: uint8_t readValue = 0;
  9950                           
  9951                           ;incstack = 0
  9952                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  9953  0D77  01F4               	clrf	EUSART_Read@readValue
  9954  0D78                     l3587:	
  9955                           ;eusart.c: 117: {
  9956                           
  9957                           ;eusart.c: 116: while(0 == eusartRxCount)
  9958                           
  9959  0D78  0878               	movf	_eusartRxCount,w	;volatile
  9960  0D79  1903               	btfsc	3,2
  9961  0D7A  2D78               	goto	l3587
  9962                           
  9963                           ;eusart.c: 118: }
  9964                           ;eusart.c: 120: readValue = eusartRxBuffer[eusartRxTail++];
  9965  0D7B  0020               	movlb	0	; select bank0
  9966  0D7C  086B               	movf	_eusartRxTail,w
  9967  0D7D  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  9968  0D7E  0086               	movwf	6
  9969  0D7F  0187               	clrf	7
  9970  0D80  0801               	movf	1,w
  9971  0D81  00F3               	movwf	??_EUSART_Read
  9972  0D82  0873               	movf	??_EUSART_Read,w
  9973  0D83  00F4               	movwf	EUSART_Read@readValue
  9974  0D84  3001               	movlw	1
  9975  0D85  00F3               	movwf	??_EUSART_Read
  9976  0D86  0873               	movf	??_EUSART_Read,w
  9977  0D87  07EB               	addwf	_eusartRxTail,f
  9978                           
  9979                           ;eusart.c: 121: if(sizeof(eusartRxBuffer) <= eusartRxTail)
  9980  0D88  3008               	movlw	8
  9981  0D89  026B               	subwf	_eusartRxTail,w
  9982  0D8A  1803               	btfsc	3,0
  9983                           
  9984                           ;eusart.c: 122: {
  9985                           ;eusart.c: 123: eusartRxTail = 0;
  9986  0D8B  01EB               	clrf	_eusartRxTail
  9987                           
  9988                           ;eusart.c: 124: }
  9989                           ;eusart.c: 125: PIE1bits.RCIE = 0;
  9990  0D8C  0021               	movlb	1	; select bank1
  9991  0D8D  1291               	bcf	17,5	;volatile
  9992                           
  9993                           ;eusart.c: 126: eusartRxCount--;
  9994  0D8E  3001               	movlw	1
  9995  0D8F  02F8               	subwf	_eusartRxCount,f	;volatile
  9996                           
  9997                           ;eusart.c: 127: PIE1bits.RCIE = 1;
  9998  0D90  1691               	bsf	17,5	;volatile
  9999                           
 10000                           ;eusart.c: 129: return readValue;
 10001  0D91  0874               	movf	EUSART_Read@readValue,w
 10002  0D92  0008               	return
 10003  0D93                     __end_of_EUSART_Read:	
 10004                           
 10005                           	psect	text43
 10006  0C9F                     __ptext43:	
 10007 ;; *************** function _ADC_Start *****************
 10008 ;; Defined at:
 10009 ;;		line 144 in file "mcc_generated_files/adc.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  reference       2    5[COMMON] unsigned int 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;		None
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, status,2, status,0, pclath, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10027 ;;Total ram usage:        2 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:    4
 10030 ;; This function calls:
 10031 ;;		_ADC_SelectChannel
 10032 ;;		_ADC_StartConversion
 10033 ;;		_TMR2_Initialize
 10034 ;;		_TMR2_StartTimer
 10035 ;; This function is called by:
 10036 ;;		_main
 10037 ;; This function uses a non-reentrant model
 10038 ;;
 10039                           
 10040                           
 10041                           ;psect for function _ADC_Start
 10042  0C9F                     _ADC_Start:	
 10043                           
 10044                           ;adc.c: 145: ADC_SelectChannel(Receiver);
 10045                           
 10046                           ;incstack = 0
 10047                           ; Regs used in _ADC_Start: [wreg+status,2+status,0+pclath+cstack]
 10048  0C9F  3012               	movlw	18
 10049  0CA0  318C  2492  318C   	fcall	_ADC_SelectChannel
 10050                           
 10051                           ;adc.c: 146: ADC_StartConversion();
 10052  0CA3  318C  2406  318C   	fcall	_ADC_StartConversion
 10053                           
 10054                           ;adc.c: 147: TMR2_Initialize();
 10055  0CA6  318C  245B  318C   	fcall	_TMR2_Initialize
 10056                           
 10057                           ;adc.c: 148: TMR2_StartTimer();
 10058  0CA9  318C  2409         	fcall	_TMR2_StartTimer
 10059  0CAB  0008               	return
 10060  0CAC                     __end_of_ADC_Start:	
 10061                           
 10062                           	psect	text44
 10063  0C5B                     __ptext44:	
 10064 ;; *************** function _TMR2_Initialize *****************
 10065 ;; Defined at:
 10066 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;		None
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;		None
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      void 
 10073 ;; Registers used:
 10074 ;;		wreg, status,2, status,0, pclath, cstack
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;Total ram usage:        0 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; Hardware stack levels required when called:    3
 10087 ;; This function calls:
 10088 ;;		_TMR2_StartTimer
 10089 ;; This function is called by:
 10090 ;;		_ADC_Start
 10091 ;;		_SYSTEM_Initialize
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           
 10096                           ;psect for function _TMR2_Initialize
 10097  0C5B                     _TMR2_Initialize:	
 10098                           
 10099                           ;tmr2.c: 68: T2CON = 0x01;
 10100                           
 10101                           ;incstack = 0
 10102                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10103  0C5B  3001               	movlw	1
 10104  0C5C  0020               	movlb	0	; select bank0
 10105  0C5D  009F               	movwf	31	;volatile
 10106                           
 10107                           ;tmr2.c: 71: PR2 = 0x31;
 10108  0C5E  3031               	movlw	49
 10109  0C5F  009E               	movwf	30	;volatile
 10110                           
 10111                           ;tmr2.c: 74: TMR2 = 0x00;
 10112  0C60  019D               	clrf	29	;volatile
 10113                           
 10114                           ;tmr2.c: 77: PIR1bits.TMR2IF = 0;
 10115  0C61  1091               	bcf	17,1	;volatile
 10116                           
 10117                           ;tmr2.c: 80: TMR2_StartTimer();
 10118  0C62  318C  2409         	fcall	_TMR2_StartTimer
 10119  0C64  0008               	return
 10120  0C65                     __end_of_TMR2_Initialize:	
 10121                           
 10122                           	psect	text45
 10123  0C09                     __ptext45:	
 10124 ;; *************** function _TMR2_StartTimer *****************
 10125 ;; Defined at:
 10126 ;;		line 83 in file "mcc_generated_files/tmr2.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;		None
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;		None
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  1    wreg      void 
 10133 ;; Registers used:
 10134 ;;		None
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10144 ;;Total ram usage:        0 bytes
 10145 ;; Hardware stack levels used:    1
 10146 ;; Hardware stack levels required when called:    2
 10147 ;; This function calls:
 10148 ;;		Nothing
 10149 ;; This function is called by:
 10150 ;;		_TMR2_Initialize
 10151 ;;		_ADC_Start
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function _TMR2_StartTimer
 10157  0C09                     _TMR2_StartTimer:	
 10158                           
 10159                           ;tmr2.c: 86: T2CONbits.TMR2ON = 1;
 10160                           
 10161                           ;incstack = 0
 10162                           ; Regs used in _TMR2_StartTimer: []
 10163  0C09  0020               	movlb	0	; select bank0
 10164  0C0A  151F               	bsf	31,2	;volatile
 10165  0C0B  0008               	return
 10166  0C0C                     __end_of_TMR2_StartTimer:	
 10167                           
 10168                           	psect	text46
 10169  0C06                     __ptext46:	
 10170 ;; *************** function _ADC_StartConversion *****************
 10171 ;; Defined at:
 10172 ;;		line 99 in file "mcc_generated_files/adc.c"
 10173 ;; Parameters:    Size  Location     Type
 10174 ;;		None
 10175 ;; Auto vars:     Size  Location     Type
 10176 ;;		None
 10177 ;; Return value:  Size  Location     Type
 10178 ;;                  1    wreg      void 
 10179 ;; Registers used:
 10180 ;;		None
 10181 ;; Tracked objects:
 10182 ;;		On entry : 0/0
 10183 ;;		On exit  : 0/0
 10184 ;;		Unchanged: 0/0
 10185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10190 ;;Total ram usage:        0 bytes
 10191 ;; Hardware stack levels used:    1
 10192 ;; Hardware stack levels required when called:    2
 10193 ;; This function calls:
 10194 ;;		Nothing
 10195 ;; This function is called by:
 10196 ;;		_ADC_Start
 10197 ;; This function uses a non-reentrant model
 10198 ;;
 10199                           
 10200                           
 10201                           ;psect for function _ADC_StartConversion
 10202  0C06                     _ADC_StartConversion:	
 10203                           
 10204                           ;adc.c: 102: ADCON0bits.ADGO = 1;
 10205                           
 10206                           ;incstack = 0
 10207                           ; Regs used in _ADC_StartConversion: []
 10208  0C06  0021               	movlb	1	; select bank1
 10209  0C07  149D               	bsf	29,1	;volatile
 10210  0C08  0008               	return
 10211  0C09                     __end_of_ADC_StartConversion:	
 10212                           
 10213                           	psect	text47
 10214  0C92                     __ptext47:	
 10215 ;; *************** function _ADC_SelectChannel *****************
 10216 ;; Defined at:
 10217 ;;		line 91 in file "mcc_generated_files/adc.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  channel         1    wreg     enum E7841
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  channel         1    4[COMMON] enum E7841
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  1    wreg      void 
 10224 ;; Registers used:
 10225 ;;		wreg, status,2, status,0
 10226 ;; Tracked objects:
 10227 ;;		On entry : 0/0
 10228 ;;		On exit  : 0/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10233 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;Total ram usage:        2 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; Hardware stack levels required when called:    2
 10238 ;; This function calls:
 10239 ;;		Nothing
 10240 ;; This function is called by:
 10241 ;;		_ADC_Start
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           
 10245                           
 10246                           ;psect for function _ADC_SelectChannel
 10247  0C92                     _ADC_SelectChannel:	
 10248                           
 10249                           ;incstack = 0
 10250                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 10251                           ;ADC_SelectChannel@channel stored from wreg
 10252  0C92  00F4               	movwf	ADC_SelectChannel@channel
 10253                           
 10254                           ;adc.c: 94: ADCON0bits.CHS = channel;
 10255  0C93  0874               	movf	ADC_SelectChannel@channel,w
 10256  0C94  00F3               	movwf	??_ADC_SelectChannel
 10257  0C95  0DF3               	rlf	??_ADC_SelectChannel,f
 10258  0C96  0DF3               	rlf	??_ADC_SelectChannel,f
 10259  0C97  0021               	movlb	1	; select bank1
 10260  0C98  081D               	movf	29,w	;volatile
 10261  0C99  0673               	xorwf	??_ADC_SelectChannel,w
 10262  0C9A  3903               	andlw	-253
 10263  0C9B  0673               	xorwf	??_ADC_SelectChannel,w
 10264  0C9C  009D               	movwf	29	;volatile
 10265                           
 10266                           ;adc.c: 96: ADCON0bits.ADON = 1;
 10267  0C9D  141D               	bsf	29,0	;volatile
 10268  0C9E  0008               	return
 10269  0C9F                     __end_of_ADC_SelectChannel:	
 10270                           
 10271                           	psect	text48
 10272  0D28                     __ptext48:	
 10273 ;; *************** function _ADC_GetConversion *****************
 10274 ;; Defined at:
 10275 ;;		line 118 in file "mcc_generated_files/adc.c"
 10276 ;; Parameters:    Size  Location     Type
 10277 ;;  channel         1    wreg     enum E7841
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  channel         1    6[COMMON] enum E7841
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  2    3[COMMON] unsigned int 
 10282 ;; Registers used:
 10283 ;;		wreg, status,2, status,0
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10293 ;;Total ram usage:        4 bytes
 10294 ;; Hardware stack levels used:    1
 10295 ;; Hardware stack levels required when called:    2
 10296 ;; This function calls:
 10297 ;;		Nothing
 10298 ;; This function is called by:
 10299 ;;		_main
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           
 10304                           ;psect for function _ADC_GetConversion
 10305  0D28                     _ADC_GetConversion:	
 10306                           
 10307                           ;incstack = 0
 10308                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 10309                           ;ADC_GetConversion@channel stored from wreg
 10310  0D28  00F6               	movwf	ADC_GetConversion@channel
 10311                           
 10312                           ;adc.c: 121: ADCON0bits.CHS = channel;
 10313  0D29  0876               	movf	ADC_GetConversion@channel,w
 10314  0D2A  00F5               	movwf	??_ADC_GetConversion
 10315  0D2B  0DF5               	rlf	??_ADC_GetConversion,f
 10316  0D2C  0DF5               	rlf	??_ADC_GetConversion,f
 10317  0D2D  0021               	movlb	1	; select bank1
 10318  0D2E  081D               	movf	29,w	;volatile
 10319  0D2F  0675               	xorwf	??_ADC_GetConversion,w
 10320  0D30  3903               	andlw	-253
 10321  0D31  0675               	xorwf	??_ADC_GetConversion,w
 10322  0D32  009D               	movwf	29	;volatile
 10323                           
 10324                           ;adc.c: 124: ADCON0bits.ADON = 1;
 10325  0D33  141D               	bsf	29,0	;volatile
 10326                           
 10327                           ;adc.c: 126: _delay((unsigned long)((5)*(32000000/4000000.0)));
 10328  0D34  300D               	movlw	13
 10329  0D35                     u5307:	
 10330  0D35  0B89               	decfsz	9,f
 10331  0D36  2D35               	goto	u5307
 10332  0D37  0000               	nop
 10333                           
 10334                           ;adc.c: 129: ADCON0bits.ADGO = 1;
 10335  0D38  0021               	movlb	1	; select bank1
 10336  0D39  149D               	bsf	29,1	;volatile
 10337  0D3A                     l233:	
 10338                           ;adc.c: 133: {
 10339                           
 10340                           ;adc.c: 132: while (ADCON0bits.ADGO)
 10341                           
 10342  0D3A  189D               	btfsc	29,1	;volatile
 10343  0D3B  2D3A               	goto	l233
 10344                           
 10345                           ;adc.c: 134: }
 10346                           ;adc.c: 136: return ((ADRESH << 8) + ADRESL);
 10347  0D3C  081C               	movf	28,w	;volatile
 10348  0D3D  00F4               	movwf	?_ADC_GetConversion+1
 10349  0D3E  081B               	movf	27,w	;volatile
 10350  0D3F  00F3               	movwf	?_ADC_GetConversion
 10351  0D40  0008               	return
 10352  0D41                     __end_of_ADC_GetConversion:	
 10353                           
 10354                           	psect	intentry
 10355  0004                     __pintentry:	
 10356 ;; *************** function _INTERRUPT_InterruptManager *****************
 10357 ;; Defined at:
 10358 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10359 ;; Parameters:    Size  Location     Type
 10360 ;;		None
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;		None
 10363 ;; Return value:  Size  Location     Type
 10364 ;;                  1    wreg      void 
 10365 ;; Registers used:
 10366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10367 ;; Tracked objects:
 10368 ;;		On entry : 0/0
 10369 ;;		On exit  : 0/0
 10370 ;;		Unchanged: 0/0
 10371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10376 ;;Total ram usage:        1 bytes
 10377 ;; Hardware stack levels used:    1
 10378 ;; Hardware stack levels required when called:    1
 10379 ;; This function calls:
 10380 ;;		_ADC_ISR
 10381 ;;		_EUSART_Receive_ISR
 10382 ;;		_EUSART_Transmit_ISR
 10383 ;; This function is called by:
 10384 ;;		Interrupt level 1
 10385 ;; This function uses a non-reentrant model
 10386 ;;
 10387                           
 10388  0004                     _INTERRUPT_InterruptManager:	
 10389                           
 10390                           ;incstack = 0
 10391  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10392                           
 10393                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 10394  0005  3180               	pagesel	$
 10395  0006  0020               	movlb	0	; select bank0
 10396  0007  087F               	movf	127,w
 10397  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
 10398                           
 10399                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits.RCIF
      +                           == 1)
 10400  0009  1F0B               	btfss	11,6	;volatile
 10401  000A  2815               	goto	i1l299
 10402  000B  0021               	movlb	1	; select bank1
 10403  000C  1E91               	btfss	17,5	;volatile
 10404  000D  2815               	goto	i1l299
 10405  000E  0020               	movlb	0	; select bank0
 10406  000F  1E91               	btfss	17,5	;volatile
 10407  0010  2815               	goto	i1l299
 10408                           
 10409                           ;interrupt_manager.c: 55: {
 10410                           ;interrupt_manager.c: 56: EUSART_Receive_ISR();
 10411  0011  318D  2541  3180   	fcall	_EUSART_Receive_ISR
 10412                           
 10413                           ;interrupt_manager.c: 57: }
 10414  0014  282B               	goto	i1l305
 10415  0015                     i1l299:	
 10416                           
 10417                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.ADIE == 1 && PIR1bits
      +                          .ADIF == 1)
 10418  0015  1F0B               	btfss	11,6	;volatile
 10419  0016  2821               	goto	i1l301
 10420  0017  0021               	movlb	1	; select bank1
 10421  0018  1F11               	btfss	17,6	;volatile
 10422  0019  2821               	goto	i1l301
 10423  001A  0020               	movlb	0	; select bank0
 10424  001B  1F11               	btfss	17,6	;volatile
 10425  001C  2821               	goto	i1l301
 10426                           
 10427                           ;interrupt_manager.c: 59: {
 10428                           ;interrupt_manager.c: 60: ADC_ISR();
 10429  001D  318C  2465  3180   	fcall	_ADC_ISR
 10430                           
 10431                           ;interrupt_manager.c: 61: }
 10432  0020  282B               	goto	i1l305
 10433  0021                     i1l301:	
 10434                           
 10435                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits
      +                          .TXIF == 1)
 10436  0021  1F0B               	btfss	11,6	;volatile
 10437  0022  282B               	goto	i1l305
 10438  0023  0021               	movlb	1	; select bank1
 10439  0024  1E11               	btfss	17,4	;volatile
 10440  0025  282B               	goto	i1l305
 10441  0026  0020               	movlb	0	; select bank0
 10442  0027  1E11               	btfss	17,4	;volatile
 10443  0028  282B               	goto	i1l305
 10444                           
 10445                           ;interrupt_manager.c: 63: {
 10446                           ;interrupt_manager.c: 64: EUSART_Transmit_ISR();
 10447  0029  3187  27E3         	fcall	_EUSART_Transmit_ISR
 10448  002B                     i1l305:	
 10449                           ;interrupt_manager.c: 66: else
 10450                           ;interrupt_manager.c: 67: {
 10451                           
 10452                           ;interrupt_manager.c: 65: }
 10453                           
 10454  002B  0872               	movf	??_INTERRUPT_InterruptManager,w
 10455  002C  0020               	movlb	0	; select bank0
 10456  002D  00FF               	movwf	127
 10457  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10458  002F  0009               	retfie
 10459  0030                     __end_of_INTERRUPT_InterruptManager:	
 10460                           
 10461                           	psect	text50
 10462  07E3                     __ptext50:	
 10463 ;; *************** function _EUSART_Transmit_ISR *****************
 10464 ;; Defined at:
 10465 ;;		line 165 in file "mcc_generated_files/eusart.c"
 10466 ;; Parameters:    Size  Location     Type
 10467 ;;		None
 10468 ;; Auto vars:     Size  Location     Type
 10469 ;;		None
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  1    wreg      void 
 10472 ;; Registers used:
 10473 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10474 ;; Tracked objects:
 10475 ;;		On entry : 0/0
 10476 ;;		On exit  : 0/0
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10482 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10483 ;;Total ram usage:        1 bytes
 10484 ;; Hardware stack levels used:    1
 10485 ;; This function calls:
 10486 ;;		Nothing
 10487 ;; This function is called by:
 10488 ;;		_INTERRUPT_InterruptManager
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           
 10493                           ;psect for function _EUSART_Transmit_ISR
 10494  07E3                     _EUSART_Transmit_ISR:	
 10495                           
 10496                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 10497                           
 10498                           ;incstack = 0
 10499                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10500  07E3  3008               	movlw	8
 10501  07E4  0020               	movlb	0	; select bank0
 10502  07E5  026F               	subwf	_eusartTxBufferRemaining,w	;volatile
 10503  07E6  1803               	skipnc
 10504  07E7  2FFD               	goto	i1l98
 10505                           
 10506                           ;eusart.c: 170: {
 10507                           ;eusart.c: 171: TX1REG = eusartTxBuffer[eusartTxTail++];
 10508  07E8  0879               	movf	_eusartTxTail,w
 10509  07E9  3EB0               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 10510  07EA  0086               	movwf	6
 10511  07EB  0187               	clrf	7
 10512  07EC  0801               	movf	1,w
 10513  07ED  0023               	movlb	3	; select bank3
 10514  07EE  009A               	movwf	26	;volatile
 10515  07EF  3001               	movlw	1
 10516  07F0  00F0               	movwf	??_EUSART_Transmit_ISR
 10517  07F1  0870               	movf	??_EUSART_Transmit_ISR,w
 10518  07F2  07F9               	addwf	_eusartTxTail,f
 10519                           
 10520                           ;eusart.c: 172: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 10521  07F3  3008               	movlw	8
 10522  07F4  0279               	subwf	_eusartTxTail,w
 10523  07F5  1803               	btfsc	3,0
 10524                           
 10525                           ;eusart.c: 173: {
 10526                           ;eusart.c: 174: eusartTxTail = 0;
 10527  07F6  01F9               	clrf	_eusartTxTail
 10528                           
 10529                           ;eusart.c: 175: }
 10530                           ;eusart.c: 176: eusartTxBufferRemaining++;
 10531  07F7  3001               	movlw	1
 10532  07F8  00F0               	movwf	??_EUSART_Transmit_ISR
 10533  07F9  0870               	movf	??_EUSART_Transmit_ISR,w
 10534  07FA  0020               	movlb	0	; select bank0
 10535  07FB  07EF               	addwf	_eusartTxBufferRemaining,f	;volatile
 10536                           
 10537                           ;eusart.c: 177: }
 10538  07FC  0008               	return
 10539  07FD                     i1l98:	
 10540                           
 10541                           ;eusart.c: 178: else
 10542                           ;eusart.c: 179: {
 10543                           ;eusart.c: 180: PIE1bits.TXIE = 0;
 10544  07FD  0021               	movlb	1	; select bank1
 10545  07FE  1211               	bcf	17,4	;volatile
 10546  07FF  0008               	return
 10547  0800                     __end_of_EUSART_Transmit_ISR:	
 10548                           
 10549                           	psect	text51
 10550  0D41                     __ptext51:	
 10551 ;; *************** function _EUSART_Receive_ISR *****************
 10552 ;; Defined at:
 10553 ;;		line 184 in file "mcc_generated_files/eusart.c"
 10554 ;; Parameters:    Size  Location     Type
 10555 ;;		None
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;		None
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1    wreg      void 
 10560 ;; Registers used:
 10561 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10571 ;;Total ram usage:        1 bytes
 10572 ;; Hardware stack levels used:    1
 10573 ;; This function calls:
 10574 ;;		Nothing
 10575 ;; This function is called by:
 10576 ;;		_INTERRUPT_InterruptManager
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           
 10580                           
 10581                           ;psect for function _EUSART_Receive_ISR
 10582  0D41                     _EUSART_Receive_ISR:	
 10583                           
 10584                           ;eusart.c: 187: if(1 == RC1STAbits.OERR)
 10585                           
 10586                           ;incstack = 0
 10587                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 10588  0D41  0023               	movlb	3	; select bank3
 10589  0D42  1C9D               	btfss	29,1	;volatile
 10590  0D43  2D46               	goto	i1l2927
 10591                           
 10592                           ;eusart.c: 188: {
 10593                           ;eusart.c: 191: RC1STAbits.CREN = 0;
 10594  0D44  121D               	bcf	29,4	;volatile
 10595                           
 10596                           ;eusart.c: 192: RC1STAbits.CREN = 1;
 10597  0D45  161D               	bsf	29,4	;volatile
 10598  0D46                     i1l2927:	
 10599                           
 10600                           ;eusart.c: 193: }
 10601                           ;eusart.c: 196: eusartRxBuffer[eusartRxHead++] = RC1REG;
 10602  0D46  0819               	movf	25,w	;volatile
 10603  0D47  00F0               	movwf	??_EUSART_Receive_ISR
 10604  0D48  0020               	movlb	0	; select bank0
 10605  0D49  086C               	movf	_eusartRxHead,w
 10606  0D4A  3EA8               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 10607  0D4B  0086               	movwf	6
 10608  0D4C  0187               	clrf	7
 10609  0D4D  0870               	movf	??_EUSART_Receive_ISR,w
 10610  0D4E  0081               	movwf	1
 10611  0D4F  3001               	movlw	1
 10612  0D50  00F0               	movwf	??_EUSART_Receive_ISR
 10613  0D51  0870               	movf	??_EUSART_Receive_ISR,w
 10614  0D52  07EC               	addwf	_eusartRxHead,f
 10615                           
 10616                           ;eusart.c: 197: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 10617  0D53  3008               	movlw	8
 10618  0D54  026C               	subwf	_eusartRxHead,w
 10619  0D55  1803               	btfsc	3,0
 10620                           
 10621                           ;eusart.c: 198: {
 10622                           ;eusart.c: 199: eusartRxHead = 0;
 10623  0D56  01EC               	clrf	_eusartRxHead
 10624                           
 10625                           ;eusart.c: 200: }
 10626                           ;eusart.c: 201: eusartRxCount++;
 10627  0D57  3001               	movlw	1
 10628  0D58  00F0               	movwf	??_EUSART_Receive_ISR
 10629  0D59  0870               	movf	??_EUSART_Receive_ISR,w
 10630  0D5A  07F8               	addwf	_eusartRxCount,f	;volatile
 10631  0D5B  0008               	return
 10632  0D5C                     __end_of_EUSART_Receive_ISR:	
 10633                           
 10634                           	psect	text52
 10635  0C65                     __ptext52:	
 10636 ;; *************** function _ADC_ISR *****************
 10637 ;; Defined at:
 10638 ;;		line 152 in file "mcc_generated_files/adc.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;		None
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      void 
 10645 ;; Registers used:
 10646 ;;		wreg
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10656 ;;Total ram usage:        2 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		_INTERRUPT_InterruptManager
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _ADC_ISR
 10667  0C65                     _ADC_ISR:	
 10668                           
 10669                           ;adc.c: 153: ADC_result=(int) ADRESH;
 10670                           
 10671                           ;incstack = 0
 10672                           ; Regs used in _ADC_ISR: [wreg]
 10673  0C65  0021               	movlb	1	; select bank1
 10674  0C66  081C               	movf	28,w	;volatile
 10675  0C67  00F0               	movwf	??_ADC_ISR
 10676  0C68  01F1               	clrf	??_ADC_ISR+1
 10677  0C69  0870               	movf	??_ADC_ISR,w
 10678  0C6A  0020               	movlb	0	; select bank0
 10679  0C6B  00E8               	movwf	_ADC_result
 10680  0C6C  0871               	movf	??_ADC_ISR+1,w
 10681  0C6D  00E9               	movwf	_ADC_result+1
 10682                           
 10683                           ;adc.c: 156: PIR1bits.ADIF = 0;
 10684  0C6E  1311               	bcf	17,6	;volatile
 10685  0C6F  0008               	return
 10686  0C70                     __end_of_ADC_ISR:	
 10687  007E                     btemp	set	126	;btemp
 10688  007E                     int$flags	set	126
 10689  007E                     wtemp0	set	126


Data Sizes:
    Strings     11
    Constant    10
    Data        8
    BSS         69
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     59      80
    BANK1            80      2      56
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 7
		 -> value(BANK1[7]), 

    atof@s	PTR const unsigned char  size(1) Largest target is 7
		 -> value(BANK1[7]), 

    strtod@s	PTR const unsigned char  size(1) Largest target is 7
		 -> value(BANK1[7]), 

    strtod@res	PTR PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[2]), STR_2(CODE[3]), STR_1(CODE[6]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    _printf->___lwdiv
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _atoi->___wmul
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___altoft->___ftpack
    _ADC_Start->_ADC_SelectChannel

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_ADC_ISR

Critical Paths under _main in BANK0

    _main->_PI
    _PI->___fttol
    ___fttol->___ftadd
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _Java->_atof
    _printf->___lwmod
    ___lwmod->___lwdiv
    _atoi->___wmul
    _atof->_strtod
    _strtod->___ftmul
    ___ftmul->___awtoft
    ___ftdiv->___ftpack
    ___altoft->___ftpack

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29359
                                              0 BANK1      2     2      0
                  _ADC_GetConversion
                          _ADC_Start
                               _Java
                                 _PI
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM5_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      0     0      0       0
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PI                                                   7     7      0   11327
                                             52 BANK0      7     7      0
                      _ADC_GetResult
                 _PWM5_LoadDutyValue
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     448
                                             38 BANK0     14    10      4
                            ___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4171
                                             25 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2811
                                              3 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _PWM5_LoadDutyValue                                   4     2      2     139
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_GetResult                                        2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Java                                                 4     4      0   16157
                                             45 BANK0      4     4      0
                        _EUSART_Read
                 _PI_GetSensorHeight
                           _PI_SetKi
                           _PI_SetKp
                     _PI_SetSetpoint
                               _atof
                               _atoi
                             _printf
                            _toupper
 ---------------------------------------------------------------------------------
 (2) _toupper                                              2     2      0      96
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              22    18      4    1668
                                              9 BANK0     14    10      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      93
                                              5 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         2     2      0      62
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     395
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _atoi                                                 8     6      2     756
                                              2 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     290
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _atof                                                 5     1      4   13146
                                             40 BANK0      5     1      4
                             _strtod
 ---------------------------------------------------------------------------------
 (3) _strtod                                              15    12      3   13049
                                             25 BANK0     15    12      3
                           ___altoft
                             ___bmul
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (4) _isspace                                              2     2      0     130
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     290
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     142
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3628
                                              9 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     506
                                              3 COMMON     3     3      0
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    3252
                                              3 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     290
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2805
                                              3 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2524
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _PI_SetSetpoint                                       2     0      2     108
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PI_SetKp                                             3     0      3     108
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PI_SetKi                                             3     0      3     108
                                              3 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PI_GetSensorHeight                                   2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      37
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Start                                            2     0      2     108
                                              5 COMMON     2     0      2
                  _ADC_SelectChannel
                _ADC_StartConversion
                    _TMR2_Initialize
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0       0
                                              2 COMMON     1     1      0
                            _ADC_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
 ---------------------------------------------------------------------------------
 (7) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Start
     _ADC_SelectChannel
     _ADC_StartConversion
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR2_StartTimer
   _Java
     _EUSART_Read
     _PI_GetSensorHeight
     _PI_SetKi
     _PI_SetKp
     _PI_SetSetpoint
     _atof
       _strtod
         ___altoft
           ___ftpack
         ___bmul
         ___ftdiv
           ___ftpack
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftneg
         ___lmul
         _isdigit
         _isspace
     _atoi
       ___wmul
       _isdigit
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _putch
         _EUSART_Write
     _toupper
   _PI
     _ADC_GetResult
     _PWM5_LoadDutyValue
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM5_Initialize
     _TMR0_Initialize
       _TMR0_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _WDT_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Initialize
     _TMR0_StartTimer
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
       _EUSART_Write

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3B      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      2      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      93      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      93      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 10 17:02:09 2021

                    ?_PI_SetSetpoint 0073                         ___altoft@exp 0029  
                                  _I 005B                       ___bmul@product 0075  
    __end_of_TMR0_HasOverflowOccured 0C1D                          __CFG_CP$OFF 0000  
                      ___altoft@sign 002A                                   l86 0DDF  
                                 _PI 05C4                                   _ki 00D3  
                                 _kp 00D0                   __size_of_ADC_Start 000D  
                ___wmul@multiplicand 0075                         ___ftadd@exp1 0045  
                       ___ftadd@exp2 0044                          __CFG_LVP$ON 0000  
                                ?_PI 0070                                  PI@P 0056  
                       ___ftadd@sign 0043                                  l233 0D3A  
                                l437 0457                                  l710 026D  
                                l467 050F                                  l549 0D9D  
                                l681 00EE                                  l817 0325  
                                l682 00BC                                  l793 0F75  
                                l794 0F7D                                  l786 0F62  
                                l699 01A6                                  l877 0789  
                                _GIE 005F                                  _PR2 001E  
                       __CFG_CPD$OFF 0000                      __end_of_ADC_ISR 0C70  
                    _TMR2_Initialize 0C5B                                  wreg 0009  
                               ??_PI 0054                         ?_EUSART_Read 0070  
                       ___ftdiv@cntr 002D                         ___ftdiv@sign 0032  
                               l3105 0F67                                 l3121 0DD4  
                               l3107 0F6F                                 l3203 0CB8  
                               l4003 0431                                 l3213 068A  
                               l3143 0E63                                 l3135 0DF3  
                               l3153 0CD9                                 l3241 06FA  
                               l3233 06E1                                 l3305 0594  
                               l4009 044A                                 l3091 0F36  
                               l3219 06A0                                 l3139 0E58  
                               l3403 0105                                 l4027 0E40  
                               l3157 0CDF                                 l3253 0ECC  
                               l3309 059C                                 l3413 0119  
                               l3095 0F3D                                 l3175 0F06  
                               l3191 0CF8                                 l3503 0266  
                               l3415 011D                                 l3335 0D96  
                               l3097 0F48                                 l3177 0F16  
                               l3257 0EE2                                 l3281 053D  
                               l3433 0174                                 l3409 0112  
                               l3353 006D                                 l3099 0F4D  
                               l3275 0527                                 l3363 0086  
                               l3355 007D                                 l3531 0EA7  
                               l3523 0E89                                 l3293 0578  
                               l3189 0CF7                                 l3509 027F  
                               l3461 01CA                                 l3445 0188  
                               l3437 0179                                 l3381 00A7  
                               l3373 00A5                                 l3365 008A  
                               l3525 0E95                                 l3375 0099  
                               l3367 008E                                 l3535 0EB0  
                               l3711 04AE                                 l3297 0580  
                               l3465 01E4                                 l3553 0E15  
                               l3721 04D5                                 l3705 04A8  
                               l3483 020F                                 l3475 0202  
                               l3459 01AA                                 l3547 0DFD  
                               l3811 02B5                                 l3493 0248  
                               l3397 00F5                                 l3549 0E09  
                               l3557 0E1E                                 l3717 04CD  
                               l3487 0229                                 l3479 0209  
                               l3727 04DA                                 l3807 02AE  
                               l3903 0780                                 l3489 022E  
                               l3753 0F9E                                 l3729 045D  
                               l3841 0304                                 l3817 02C4  
                               l3905 078C                                 l3587 0D78  
                               l3771 0FC0                                 l3755 0F97  
                               l3747 0CD5                                 l3835 02F1  
                               l3781 0FFB                                 l3773 0FC4  
                               l3765 0FB9                                 l3757 0FA3  
                               l3853 0337                                 l3837 02FB  
                               l3829 02DE                                 l3909 079A  
                               l3775 0FEB                                 l3695 0492  
                               l3847 0317                                 l3839 0300  
                               l3951 066B                                 l3689 0479  
                               l3857 0349                                 l3849 0321  
                               l3963 03A8                                 l3867 0364  
                               l3797 0DBC                                 l3877 0735  
                               l3975 03BF                                 l3895 0765  
                               l3977 03D2                                 l3897 0773  
                               l3995 0405                                 l3999 0418  
                               STR_1 100A                                 STR_2 1010  
                               STR_3 1013                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               u4115 059D                                 u4125 05A3  
                               u4045 0549                                 u4055 0559  
                               u5025 0305                                 u4075 0581  
                               u5115 073C                                 u4085 0587  
                               u4165 0D9E                                 u4175 0DA3  
                               u5055 0318                                 u5215 0658  
                               u5145 0766                                 u5225 0664  
                               u5307 0D35                                 u5235 0388  
                               u3725 0F85                                 u3645 0F43  
                               u4605 0E00                                 u4535 0E8C  
                               u5175 0781                                 u3665 0F5D  
                               u4625 0E0F                                 u4555 0E96  
                               u4635 0E16                                 u3685 0F6A  
                               u3845 0F0B                                 u4565 0EA0  
                               u4670 07E1                                 u3935 06B2  
                               u4575 0EA8                                 u4735 04C3  
                               u3945 06C2                                 u3785 0E64  
                               u5297 03B9                                 u3955 06E2  
                               u3795 0E6B                                 u3965 06F1  
                               u3975 06FB                                 u4695 0D09  
                               i1l98 07FD                                 u4965 02DF  
                               u4995 02F2                                 _TMR2 001D  
                               _WPUA 020C                                 _WPUB 020D  
                               _WPUC 020E                                 _Java 037C  
                       __CFG_WRT$OFF 0000                        __CFG_FCMEN$ON 0000  
                               _data 00A0                                 _atof 0CBA  
                               _atoi 0F95                                 _main 0E23  
                       ___ftpack@arg 0073                         ___ftpack@exp 0076  
                    _TMR0_StartTimer 0C0C                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                        __CFG_BORV$LOW 0000  
                               start 0030                      _PWM5_Initialize 0C86  
                      __CFG_CSWEN$ON 0000                    ___bmul@multiplier 0076  
                      __CFG_MCLRE$ON 0000                         ___ftmul@cntr 0037  
                       ___ftmul@sign 0038           __end_of_PWM5_LoadDutyValue 0D10  
                       ___fttol@exp1 0053                         ___fttol@lval 004F  
            __end_of_TMR0_Initialize 0C86                        ?_EUSART_Write 0070  
     __size_of_OSCILLATOR_Initialize 0008                                ?_Java 0070  
      __end_of_OSCILLATOR_Initialize 0C5B                                ?_atof 0048  
                              _ADACT 009F                                ?_atoi 0022  
                              ?_main 0070                      __end_of___ftadd 037C  
                      __CFG_WDTE$OFF 0000                      __end_of___ftdiv 071C  
                    __end_of___ftneg 0C53                      __end_of___ftmul 05C4  
                    __end_of___fttol 07A3                                _T2CON 001F  
                     __CFG_DEBUG$OFF 0000                      __end_of___lwdiv 0EB5  
                              i1l301 0021                                i1l305 002B  
                    __end_of___lwmod 0E23                                i1l299 0015  
                              _OSCEN 091D                                Java@i 004F  
                              _TMR0H 0016                                _TMR0L 0015  
        __size_of_PI_GetSensorHeight 0006                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                 ADC_Start@reference 0075                  ___lmul@multiplicand 0024  
                      ___awtoft@sign 0028                      __end_of_dpowers 100A  
                      PI_SetKi@value 0073                       _WDT_Initialize 0C0F  
                              _index 005E                                _error 0064  
                    __end_of_isdigit 0CBA                     __end_of_PI_SetKi 0C43  
                   __end_of_PI_SetKp 0C4B                        ___ftpack@sign 0077  
                              _value 00C9                                atoi@a 0027  
                              atof@s 004C                                atoi@s 0029  
                              _putch 0C13                      __end_of_isspace 0CFA  
                      PI_SetKp@value 0073                    __end_of_ADC_Start 0CAC  
                              status 0003                                wtemp0 007E  
                    _TMR2_StartTimer 0C09                      __end_of_toupper 0CD7  
                       __end_of_Java 0458                      __initialization 0032  
                       __end_of_atof 0CC8                         __end_of_atoi 1000  
                       __end_of_main 0E50                       ??_EUSART_Write 0073  
             __size_of_ADC_GetResult 0006              __end_of_TMR2_Initialize 0C65  
                          ??_ADC_ISR 0070          ?_INTERRUPT_InterruptManager 0070  
                             ??_Java 004D                               ??_atof 0078  
                             ??_atoi 0024                               ??_main 0078  
                      ___fttol@sign1 004E               __end_of_WDT_Initialize 0C13  
                             UART@ki 00BB                               UART@kp 00B8  
            __end_of_TMR0_StartTimer 0C0F                               _ADCON0 009D  
                             _ADCON1 009E                     __end_of___altoft 0F2E  
                             _ADRESH 009C                               _ADRESL 009B  
                   __end_of___awtoft 0DD3                               _ANSELA 018C  
                             ?_putch 0070                               _ANSELB 018D  
                             _ANSELC 018E                     __end_of___ftpack 0F95  
                             _T0CON0 0017                               _T0CON1 0018  
                             _RC1REG 0199                               _RC1STA 019D  
                             _ODCONA 028C                               _ODCONB 028D  
                             _ODCONC 028E              __end_of_PWM5_Initialize 0C92  
                             i1l2927 0D46                               _OSCFRQ 091F  
   __size_of_TMR0_HasOverflowOccured 0005                               _TX1REG 019A  
                             _WDTCON 0097                               _TX1STA 019E  
                     __CFG_PWRTE$OFF 0000                               ___bmul 0CD7  
                             ___ftge 0EB5                               ___lmul 0E50  
                             ___wmul 0D93                            ??___ftadd 003F  
                     __CFG_STVREN$ON 0000                            ??___ftdiv 0029  
                          ??___ftneg 0076                            ??___ftmul 002F  
                          ??___fttol 004A                            ??___lwdiv 0077  
                          ??___lwmod 0027                  _EUSART_Transmit_ISR 07E3  
                   ?_TMR0_Initialize 0070                               _printf 0458  
                             _strtod 0061                ___ftmul@f3_as_product 0034  
                          ??_isdigit 0073                        main@threshold 00D6  
                          ??_isspace 0073                      ?_WDT_Initialize 0070  
           ADC_GetConversion@channel 0076              __end_of_TMR2_StartTimer 0C0C  
                          ??_toupper 0073                        _ADC_GetResult 0C29  
               ?_EUSART_Transmit_ISR 0070                 __size_of_EUSART_Read 001C  
                  _SYSTEM_Initialize 0D10              __end_of__initialization 005D  
                         ___altoft@c 0023                     ??_PI_SetSetpoint 0075  
                         ___ftadd@f1 0039                           ___ftadd@f2 003C  
                         ___ftge@ff1 0020                           ___ftge@ff2 0023  
                 ?_SYSTEM_Initialize 0070                           ___ftdiv@f1 0026  
                         ___ftdiv@f2 0023                           ___ftdiv@f3 002E  
                         ___ftneg@f1 0073                           ___awtoft@c 0023  
                ___bmul@multiplicand 0073                           ___ftmul@f1 0029  
                         ___ftmul@f2 002C                           ___fttol@f1 0046  
       __size_of_ADC_StartConversion 0003                       __pcstackCOMMON 0070  
                       __pidataBANK0 0002                         __pidataBANK1 0C35  
                ??_SYSTEM_Initialize 0074                        __end_of_putch 0C18  
                          ?_PI_SetKi 0073                            ?_PI_SetKp 0073  
                   ?_TMR2_Initialize 0070                           __end_of_PI 0673  
                   ?_TMR0_StartTimer 0070                       ?_ADC_GetResult 0073  
          __end_of_SYSTEM_Initialize 0D28                ??_EUSART_Transmit_ISR 0070  
                            ??_putch 0075                           __pbssBANK0 005B  
                         __pbssBANK1 00A0                 __end_of_EUSART_Write 0DF6  
                   ?_PWM5_Initialize 0070                  PI_SetSetpoint@value 0073  
        __size_of_EUSART_Receive_ISR 001B                           __pmaintext 0E23  
                            ?___bmul 0073                              ?___ftge 0020  
                            ?___lmul 0020                              ?___wmul 0073  
                    __CFG_PPS1WAY$ON 0000                           __pintentry 0004  
                          ?___altoft 0023                              _ADC_ISR 0C65  
                         ??_PI_SetKi 0076                           ??_PI_SetKp 0076  
                     ___lmul@product 0073                            ?___awtoft 0023  
                          ?___ftpack 0073                              ?_printf 0029  
                __CFG_RSTOSC$HFINT32 0000              __size_of_ADC_Initialize 000B  
                            ?_strtod 0039                        _eusartRxCount 0078  
                 _PWM5_LoadDutyValue 0CFA                              _SP1BRGH 019C  
                            _SP1BRGL 019B                              _OSCCON1 0919  
                            _OSCCON3 091B                              _OSCTUNE 091E  
                            _PWM5DCH 0618                              _PWM5DCL 0617  
                            _PWM5CON 0619                              _PPSLOCK 0E0F  
                   ?_TMR2_StartTimer 0070              _TMR0_HasOverflowOccured 0C18  
                ?_PWM5_LoadDutyValue 0073                            _ADC_Start 0C9F  
                    __size_of___bmul 0011                      __size_of___ftge 003C  
                    __size_of___lmul 0030                              ___ftadd 0286  
                            ___ftdiv 0673                              ___ftneg 0C4B  
                    __size_of___wmul 001E                              ___ftmul 0510  
                            ___fttol 071C                              ___lwdiv 0E80  
                            ___lwmod 0DF6                 ??_PWM5_LoadDutyValue 0075  
                         ??___altoft 0027                           ??___awtoft 0026  
                         ??___ftpack 0020           __end_of_PI_GetSensorHeight 0C23  
                            __ptext1 0C18                              __ptext2 0D10  
                            __ptext3 0C0F                              __ptext4 0C7B  
                            __ptext5 0C0C                              __ptext6 0C86  
                            __ptext7 07A3                              __ptext8 0C53  
                            __ptext9 0D5C                      __size_of_printf 00B8  
                            _command 006A                      __size_of_strtod 0225  
                            _dpowers 1000                _OSCILLATOR_Initialize 0C53  
                          _T2CONbits 001F                              _isdigit 0CAC  
           ??_PIN_MANAGER_Initialize 0073                              _isspace 0CE8  
                    ??_ADC_GetResult 0075           __size_of_SYSTEM_Initialize 0018  
                            clrloop0 0C30                              _toupper 0CC8  
               end_of_initialization 005D                    _EUSART_Initialize 0D5C  
                         ?_ADC_Start 0075                   ?_EUSART_Initialize 0070  
                            printf@c 0036                              printf@f 0029  
                ??_EUSART_Initialize 0073                     ??_WDT_Initialize 0073  
                            strtod@s 0047                           _printCycle 00C1  
              __size_of_EUSART_Write 0023                  _ADC_StartConversion 0C06  
          ??_TMR0_HasOverflowOccured 0073                     __CFG_FEXTOSC$OFF 0000  
                          _RXPPSbits 0E24            __end_of_EUSART_Initialize 0D77  
                        ___ftdiv@exp 0031                          ___ftmul@exp 0033  
               ?_ADC_StartConversion 0070                       __end_of___bmul 0CE8  
                     __end_of___ftge 0EF1                       __end_of___lmul 0E80  
                     __end_of___wmul 0DB1                         _EUSART_Write 0DD3  
                     _ADC_Initialize 0C70               ?_OSCILLATOR_Initialize 0070  
                  __size_of_PI_SetKi 0008                    __size_of_PI_SetKp 0008  
                     __end_of_printf 0510                       __end_of_strtod 0286  
                start_initialization 0032             __size_of_TMR0_Initialize 000B  
    __size_of_PIN_MANAGER_Initialize 0040                        ??_EUSART_Read 0073  
                        putch@txData 0075                          ??_ADC_Start 0077  
              ??_ADC_StartConversion 0073                     __CFG_LPBOREN$OFF 0000  
                           ??___bmul 0074                             ??___ftge 0073  
                           ??___lmul 0073                             ??___wmul 0077  
             __end_of_ADC_Initialize 0C7B                          __pdataBANK0 006D  
                        __pdataBANK1 00D0                             ?_ADC_ISR 0070  
                           ??_printf 002D                             ??_strtod 003C  
                  __size_of___altoft 003D                    __size_of___awtoft 0022  
                  __size_of___ftpack 0067          __end_of_EUSART_Transmit_ISR 0800  
        PWM5_LoadDutyValue@dutyValue 0073                          __pbssCOMMON 0078  
                          ___latbits 0002                        __pcstackBANK0 0020  
                      __pcstackBANK1 00D6             __size_of_TMR2_Initialize 000A  
         __end_of_EUSART_Receive_ISR 0D5C           __size_of_EUSART_Initialize 001B  
                __end_of_EUSART_Read 0D93                _TMR0_InterruptHandler 00C5  
                          __pnvBANK0 006F             __size_of_TMR0_StartTimer 0003  
                   ___lwdiv@dividend 0075               _PIN_MANAGER_Initialize 07A3  
           __size_of_PWM5_Initialize 000C                 EUSART_Read@readValue 0074  
                  _ADC_SelectChannel 0C92                             ?___ftadd 0039  
                           ?___ftdiv 0023                             ?___ftneg 0073  
                           ?___ftmul 0029                             ?___fttol 0046  
                           ?___lwdiv 0073                             ?___lwmod 0023  
                    ?_ADC_Initialize 0070                         _eusartRxHead 006C  
            __size_of_PI_SetSetpoint 0006                   ?_ADC_SelectChannel 0070  
                       _eusartTxHead 007A                         _eusartRxTail 006B  
                       _eusartTxTail 0079                     UART@sensorHeight 0060  
       ??_INTERRUPT_InterruptManager 0072              _eusartTxBufferRemaining 006F  
                           _BAUD1CON 019F                             ?_isdigit 0070  
                ??_ADC_SelectChannel 0073                             ?_isspace 0070  
                   ___lwdiv@quotient 0021                             ?_toupper 0070  
                 _PI_GetSensorHeight 0C1D                       __size_of_putch 0005  
                        __size_of_PI 00AF                       _eusartRxBuffer 00A8  
                          _dutycycle 0062                    ??_TMR0_Initialize 0073  
                     _eusartTxBuffer 00B0                       ___wmul@product 0020  
                          clear_ram0 0C2F                             _PIE1bits 0091  
                ?_PI_GetSensorHeight 0073             __size_of_TMR2_StartTimer 0003  
          __end_of_ADC_SelectChannel 0C9F  __size_of_INTERRUPT_InterruptManager 002C  
                           _PIR0bits 0010                             _PIR1bits 0011  
                        strtod@flags 0041                          strtod@expon 0042  
        __size_of_PWM5_LoadDutyValue 0016                             _PI_SetKi 0C3B  
                           _PI_SetKp 0C43                     __size_of_ADC_ISR 000B  
                         _ADCON0bits 009D                    ___wmul@multiplier 0073  
           ADC_SelectChannel@channel 0074                 ??_PI_GetSensorHeight 0075  
                         printf@flag 0032                           printf@prec 0033  
                        _EUSART_Read 0D77                __end_of_ADC_GetResult 0C2F  
                  ___lmul@multiplier 0020                    ??_TMR2_Initialize 0073  
                       UART@setpoint 00C3                         PI@dutycycle1 0059  
                  _ADC_GetConversion 0D28                           _ADC_result 0068  
            ??_OSCILLATOR_Initialize 0073                   ?_ADC_GetConversion 0073  
                  ??_TMR0_StartTimer 0073                     __size_of___ftadd 00F6  
                   __size_of___ftdiv 00A9                     __size_of___ftneg 0008  
                           ___altoft 0EF1                     __size_of___ftmul 00B4  
                   __size_of___fttol 0087                     __size_of___lwdiv 0035  
                   __size_of___lwmod 002D                             ___awtoft 0DB1  
                           ___ftpack 0F2E                    ??_PWM5_Initialize 0073  
                        _isdigit$976 0073                  ??_ADC_GetConversion 0075  
                         _T0CON0bits 0017                     __size_of_isdigit 000E  
                    ___lwdiv@divisor 0073                     __size_of_isspace 0012  
                    ___lwdiv@counter 0020                             __ptext10 0C70  
                           __ptext11 05C4                             __ptext20 0C13  
                           __ptext12 071C                             __ptext21 0DD3  
                           __ptext13 0286                             __ptext30 0E50  
                           __ptext22 0DF6                             __ptext14 0DB1  
                           __ptext31 0C4B                             __ptext23 0E80  
                           __ptext15 0CFA                             __ptext40 0C3B  
                           __ptext32 0510                             __ptext24 0F95  
                           __ptext16 0C29                             __ptext41 0C1D  
                           __ptext33 0EB5                             __ptext25 0D93  
                           __ptext17 037C                             __ptext50 07E3  
                           __ptext42 0D77                             __ptext34 0673  
                           __ptext26 0CBA                             __ptext18 0CC8  
                           __ptext51 0D41                             __ptext43 0C9F  
                           __ptext35 0CD7                             __ptext27 0061  
                           __ptext19 0458                             __ptext52 0C65  
                           __ptext44 0C5B                             __ptext36 0EF1  
                           __ptext28 0CE8                             __ptext45 0C09  
                           __ptext37 0F2E                             __ptext29 0CAC  
                           __ptext46 0C06                             __ptext38 0C23  
                           __ptext47 0C92                             __ptext39 0C43  
                           __ptext48 0D28                     __size_of_toupper 000F  
                      __size_of_Java 00DC                        __size_of_atof 000E  
                      __size_of_atoi 006B                        __size_of_main 002D  
                           _integral 00BE            __end_of_ADC_GetConversion 0D41  
         __size_of_ADC_SelectChannel 000D                           _RC1PPSbits 0EA1  
                         _RC1STAbits 019D                           strtod@eexp 0040  
                           _setpoint 006D                             int$flags 007E  
                         _RB7PPSbits 0E9F                             atoi@sign 0026  
                     _PI_SetSetpoint 0C23                    ??_TMR2_StartTimer 0073  
 __end_of_INTERRUPT_InterruptManager 0030           _INTERRUPT_InterruptManager 0004  
                          printf@val 0034                          _isspace$979 0073  
        PIN_MANAGER_Initialize@state 0073             ?_TMR0_HasOverflowOccured 0070  
                         _INTCONbits 000B                         _sensorHeight 0066  
                           isdigit@c 0074              __size_of_WDT_Initialize 0004  
                           intlevel1 0000          __end_of_ADC_StartConversion 0C09  
                   ___lwmod@dividend 0025                             isspace@c 0074  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                        _PPSLOCKbits 0E0F                     ??_ADC_Initialize 0073  
             __end_of_PI_SetSetpoint 0C29                            strtod@res 0039  
                           printf@ap 0031                   _EUSART_Receive_ISR 0D41  
                      __pstringtext1 1000                        __pstringtext2 100A  
                      __pstringtext3 1010                        __pstringtext4 1013  
                      __pstringtext5 0000                  ?_EUSART_Receive_ISR 0070  
                    ___lwmod@divisor 0023                      _TMR0_Initialize 0C7B  
                    ___lwmod@counter 0028                             toupper@c 0074  
                           strtod@_u 0043                   EUSART_Write@txData 0074  
       __size_of_EUSART_Transmit_ISR 001D       __end_of_PIN_MANAGER_Initialize 07E3  
                        _PWMTMRSbits 061F                 ??_EUSART_Receive_ISR 0070  
              _TMR2_InterruptHandler 00C7           __size_of_ADC_GetConversion 0019  
